<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/10/2020 5:11:34 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DOT-JCKWHB2"
  DTS:CreatorName="DOT\ykuang"
  DTS:DTSID="{6B353E58-A202-4BC2-B46F-93CD68600CF1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.5626.31"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="148"
  DTS:VersionGUID="{336C9AA6-B4A4-4D86-802A-1B02CCFD794D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{FCA46042-184A-4048-B9D6-000F61268699}"
      DTS:ObjectName="DOTDEV55SQLEE03.CheckBookNYC">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DOTDEV55SQLEE03;Initial Catalog=CheckBookNYC;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{AC6EF624-9829-4FEE-B825-7B6CB766DEBB}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Update(ID Match)]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Update(ID Match)"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(ID) &amp;&amp; !ISNULL(StagingID_FINAL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Insert(ID_STAGING not Match any in StagingID_FINAL)]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Insert(ID_STAGING not Match any in StagingID_FINAL)"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(ID) &amp;&amp; ISNULL(StagingID_FINAL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Delete(StagingID_FINAL not Match any in ID_STAGING)]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Delete(StagingID_FINAL not Match any in ID_STAGING)"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(ID) &amp;&amp; !ISNULL(StagingID_FINAL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[check_amount]"
                      cachedDataType="cy"
                      cachedName="check_amount"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[fiscal_year]"
                      cachedDataType="i4"
                      cachedName="fiscal_year"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[issue_date]"
                      cachedDataType="dbDate"
                      cachedName="issue_date"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[check_amount_DataTypeConverted]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[check_amount_DataTypeConverted]"
                      name="check_amount_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[fiscal_year_DataTypeConverted]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[fiscal_year_DataTypeConverted]"
                      name="fiscal_year_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[issue_date_DataTypeConverted]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[issue_date_DataTypeConverted]"
                      name="issue_date_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending)"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Delete records (Final - Spending)"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">DELETE FROM dbo.Spending
WHERE dbo.Spending.[StagingID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_fb028c57ea614638b8dd265863f2a053.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ac1c4fc9-54d7-45d8-a0f8-0669ddf0cf4a}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_fb028c57ea614638b8dd265863f2a053</RootNamespace>
    <AssemblyName>SC_fb028c57ea614638b8dd265863f2a053</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_fb028c57ea614638b8dd265863f2a053" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Windows.Forms;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        string contractid = Row.contractid;
        try
        {
            if (contractid != null && contractid.Length >= 9)
            {
                if (contractid.Substring(0, 3) == "CT1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 3);
                    Row.DeptSTAGINGDerived = contractid.Substring(3, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(6);
                }
                else if (contractid.Substring(0, 4) == "CTA1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 3) == "DO1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 3);
                    Row.DeptSTAGINGDerived = contractid.Substring(3, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(6);
                }
                else if (contractid.Substring(0, 4) == "MMA1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 4) == "RCT1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 4) == "PRC2")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 3) == "POD")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 3);
                    Row.DeptSTAGINGDerived = contractid.Substring(3, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(6);
                }
                else if (contractid.Substring(0, 3) == "POC")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 3);
                    Row.DeptSTAGINGDerived = contractid.Substring(3, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(6);
                }
                else if (contractid.Substring(0, 4) == "PON1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 4) == "PRM1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 4) == "PCC1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 4) == "CTA2")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 5) == "RTGPF")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 5);
                    Row.DeptSTAGINGDerived = contractid.Substring(5, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(8);
                }
                else
                {
                    Row.CodeSTAGINGDerived = "N/A";
                    Row.DeptSTAGINGDerived = "N/A";
                    Row.RegistrationSTAGINGDerived = "N/A";
                }

            }
            else if (contractid != null && contractid.Length < 9)
            {
                Row.CodeSTAGINGDerived = "N/A";
                Row.DeptSTAGINGDerived = "N/A";
                Row.RegistrationSTAGINGDerived = "N/A";
            }
            else if (contractid == null)
            {
                Row.CodeSTAGINGDerived = null;
                Row.DeptSTAGINGDerived = null;
                Row.RegistrationSTAGINGDerived = null;
            }
            else
            {
                Row.CodeSTAGINGDerived = "N/A";
                Row.DeptSTAGINGDerived = "N/A";
                Row.RegistrationSTAGINGDerived = "N/A";
            }
        }
        catch (Exception ex)
        {
            Row.CodeSTAGINGDerived = "ERROR: an exception has occured";
            Row.DeptSTAGINGDerived = "ERROR: an exception has occured";
            Row.RegistrationSTAGINGDerived = "ERROR: an exception has occured";
            //MessageBox.Show(ex.ToString());
        }

        string capital_project = Row.capitalproject;
        try
        {
            if (capital_project != null && capital_project.Length >= 13)
            {
                Row.ProjectAgencySTAGINGDerived = capital_project.Substring(0, 3);
                Row.CapProjSTAGINGDerived = capital_project.Substring(3, 9).TrimEnd();
                Row.OccSTAGINGDerived = capital_project.Substring(Math.Max(0, capital_project.Length - 3));
            }
            else if (capital_project != null && capital_project.Length < 13)
            {
                Row.ProjectAgencySTAGINGDerived = "N/A";
                Row.CapProjSTAGINGDerived = "N/A";
                Row.OccSTAGINGDerived = "N/A";
            }
            else if (capital_project == null)
            {
                Row.ProjectAgencySTAGINGDerived = null;
                Row.CapProjSTAGINGDerived = null;
                Row.OccSTAGINGDerived = null;
            }
            else
            {
                Row.ProjectAgencySTAGINGDerived = "N/A";
                Row.CapProjSTAGINGDerived = "N/A";
                Row.OccSTAGINGDerived = "N/A";
            }
        }
        catch (Exception ex)
        {
            Row.ProjectAgencySTAGINGDerived = "ERROR: an exception has occured";
            Row.CapProjSTAGINGDerived = "ERROR: an exception has occured";
            Row.OccSTAGINGDerived = "ERROR: an exception has occured";
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String agency
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool agency_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String associatedprimevendor
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool associatedprimevendor_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String capitalproject
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool capitalproject_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String contractid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool contractid_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String contractpurpose
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool contractpurpose_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Decimal checkamount
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[6]);
        }
    }
    public bool checkamount_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String department
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool department_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String documentid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool documentid_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String expensecategory
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool expensecategory_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public Int32 fiscalyear
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[10]);
        }
    }
    public bool fiscalyear_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String industry
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool industry_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public DateTime issuedate
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[12]);
        }
    }
    public bool issuedate_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String mwbecategory
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool mwbecategory_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String payeename
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool payeename_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public String spendingcategory
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
    }
    public bool spendingcategory_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public String subcontractreferenceid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[16]);
        }
    }
    public bool subcontractreferenceid_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public String subvendor
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[17]);
        }
    }
    public bool subvendor_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public Int32 StagingIDFINAL
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[18]);
        }
    }
    public bool StagingIDFINAL_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public String agencyFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[19]);
        }
    }
    public bool agencyFINAL_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public String associatedprimevendorFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[20]);
        }
    }
    public bool associatedprimevendorFINAL_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public String capitalprojectFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[21]);
        }
    }
    public bool capitalprojectFINAL_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public String contractidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[22]);
        }
    }
    public bool contractidFINAL_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public String contractpurposeFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[23]);
        }
    }
    public bool contractpurposeFINAL_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    public Decimal checkamountFINAL
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[24]);
        }
    }
    public bool checkamountFINAL_IsNull
    {
        get
        {
            return IsNull(24);
        }
    }

    public String departmentFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[25]);
        }
    }
    public bool departmentFINAL_IsNull
    {
        get
        {
            return IsNull(25);
        }
    }

    public String documentidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[26]);
        }
    }
    public bool documentidFINAL_IsNull
    {
        get
        {
            return IsNull(26);
        }
    }

    public String expensecategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[27]);
        }
    }
    public bool expensecategoryFINAL_IsNull
    {
        get
        {
            return IsNull(27);
        }
    }

    public Int32 fiscalyearFINAL
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[28]);
        }
    }
    public bool fiscalyearFINAL_IsNull
    {
        get
        {
            return IsNull(28);
        }
    }

    public String industryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[29]);
        }
    }
    public bool industryFINAL_IsNull
    {
        get
        {
            return IsNull(29);
        }
    }

    public DateTime issuedateFINAL
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[30]);
        }
    }
    public bool issuedateFINAL_IsNull
    {
        get
        {
            return IsNull(30);
        }
    }

    public String mwbecategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[31]);
        }
    }
    public bool mwbecategoryFINAL_IsNull
    {
        get
        {
            return IsNull(31);
        }
    }

    public String payeenameFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[32]);
        }
    }
    public bool payeenameFINAL_IsNull
    {
        get
        {
            return IsNull(32);
        }
    }

    public String spendingcategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[33]);
        }
    }
    public bool spendingcategoryFINAL_IsNull
    {
        get
        {
            return IsNull(33);
        }
    }

    public String subcontractreferenceidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[34]);
        }
    }
    public bool subcontractreferenceidFINAL_IsNull
    {
        get
        {
            return IsNull(34);
        }
    }

    public String subvendorFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[35]);
        }
    }
    public bool subvendorFINAL_IsNull
    {
        get
        {
            return IsNull(35);
        }
    }

    public DateTime LastUpdatedTimestampDerived
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[36]);
        }
    }
    public bool LastUpdatedTimestampDerived_IsNull
    {
        get
        {
            return IsNull(36);
        }
    }

    public String RegistrationSTAGINGDerived
    {
        set
        {
            this[37] = value;
        }
    }
    public bool RegistrationSTAGINGDerived_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(37);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DeptSTAGINGDerived
    {
        set
        {
            this[38] = value;
        }
    }
    public bool DeptSTAGINGDerived_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(38);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CodeSTAGINGDerived
    {
        set
        {
            this[39] = value;
        }
    }
    public bool CodeSTAGINGDerived_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(39);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OccSTAGINGDerived
    {
        set
        {
            this[40] = value;
        }
    }
    public bool OccSTAGINGDerived_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(40);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CapProjSTAGINGDerived
    {
        set
        {
            this[41] = value;
        }
    }
    public bool CapProjSTAGINGDerived_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(41);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProjectAgencySTAGINGDerived
    {
        set
        {
            this[42] = value;
        }
    }
    public bool ProjectAgencySTAGINGDerived_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(42);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fb028c57ea614638b8dd265863f2a053.Properties.Settings.get_Default():SC_fb028c57ea614638b8dd265863f2a053.Properties.Sett" +
    "ings")]

namespace SC_fb028c57ea614638b8dd265863f2a053.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_fb028c57ea614638b8dd265863f2a053</msb:CodeName>
		<msb:DisplayName>SC_fb028c57ea614638b8dd265863f2a053</msb:DisplayName>
		<msb:ProjectId>{23FD14D9-B3D3-4B01-A362-67C52E5017B3}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_fb028c57ea614638b8dd265863f2a053.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fb028c57ea614638b8dd265863f2a053")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fb028c57ea614638b8dd265863f2a053")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fb028c57ea614638b8dd265863f2a053.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fb028c57ea614638b8dd265863f2a053.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fb028c57ea614638b8dd265863f2a053.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fb028c57ea614638b8dd265863f2a053.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fb028c57ea614638b8dd265863f2a053.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_fb028c57ea614638b8dd265863f2a053.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAB0sH18AAAAAAAAAAOAAAiELAQsAADYAAAAIAAAAAAAAflUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADBVAABLAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhDUAAAAgAAAANgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAA4AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
VQAAAAAAAEgAAAACAAUA2CwAAFgoAAABAAAAAAAAACAsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnNiAAAGfQEAAAQCAnNjAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDb2AAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioAABswBQASBQAAAQAAEQNvEgAABgoGOYoDAAAGbxMAAAofCT99AwAABhYZ
bxQAAApyEQAAcCgVAAAKLC4DBhYZbxQAAApvWAAABgMGGRlvFAAACm9WAAAGAwYcbxYAAApvVAAA
BjimAwAABhYabxQAAApyGQAAcCgVAAAKLC4DBhYabxQAAApvWAAABgMGGhlvFAAACm9WAAAGAwYd
bxYAAApvVAAABjhkAwAABhYZbxQAAApyIwAAcCgVAAAKLC4DBhYZbxQAAApvWAAABgMGGRlvFAAA
Cm9WAAAGAwYcbxYAAApvVAAABjgiAwAABhYabxQAAApyKwAAcCgVAAAKLC4DBhYabxQAAApvWAAA
BgMGGhlvFAAACm9WAAAGAwYdbxYAAApvVAAABjjgAgAABhYabxQAAApyNQAAcCgVAAAKLC4DBhYa
bxQAAApvWAAABgMGGhlvFAAACm9WAAAGAwYdbxYAAApvVAAABjieAgAABhYabxQAAApyPwAAcCgV
AAAKLC4DBhYabxQAAApvWAAABgMGGhlvFAAACm9WAAAGAwYdbxYAAApvVAAABjhcAgAABhYZbxQA
AApySQAAcCgVAAAKLC4DBhYZbxQAAApvWAAABgMGGRlvFAAACm9WAAAGAwYcbxYAAApvVAAABjga
AgAABhYZbxQAAApyUQAAcCgVAAAKLC4DBhYZbxQAAApvWAAABgMGGRlvFAAACm9WAAAGAwYcbxYA
AApvVAAABjjYAQAABhYabxQAAApyWQAAcCgVAAAKLC4DBhYabxQAAApvWAAABgMGGhlvFAAACm9W
AAAGAwYdbxYAAApvVAAABjiWAQAABhYabxQAAApyYwAAcCgVAAAKLC4DBhYabxQAAApvWAAABgMG
GhlvFAAACm9WAAAGAwYdbxYAAApvVAAABjhUAQAABhYabxQAAApybQAAcCgVAAAKLC4DBhYabxQA
AApvWAAABgMGGhlvFAAACm9WAAAGAwYdbxYAAApvVAAABjgSAQAABhYabxQAAApydwAAcCgVAAAK
LC4DBhYabxQAAApvWAAABgMGGhlvFAAACm9WAAAGAwYdbxYAAApvVAAABjjQAAAABhYbbxQAAApy
gQAAcCgVAAAKLC4DBhYbbxQAAApvWAAABgMGGxlvFAAACm9WAAAGAwYebxYAAApvVAAABjiOAAAA
A3KNAABwb1gAAAYDco0AAHBvVgAABgNyjQAAcG9UAAAGK2sGLC0GbxMAAAofCS8jA3KNAABwb1gA
AAYDco0AAHBvVgAABgNyjQAAcG9UAAAGKzsGLRcDFG9YAAAGAxRvVgAABgMUb1QAAAYrIQNyjQAA
cG9YAAAGA3KNAABwb1YAAAYDco0AAHBvVAAABt4kJgNylQAAcG9YAAAGA3KVAABwb1YAAAYDcpUA
AHBvVAAABt4AA28QAAAGCwcsTgdvEwAACh8NMkQDBxYZbxQAAApvXgAABgMHGR8JbxQAAAoWjRoA
AAFvFwAACm9cAAAGAwcWB28TAAAKGVkoGAAACm8WAAAKb1oAAAYrawcsLQdvEwAACh8NLyMDco0A
AHBvXgAABgNyjQAAcG9cAAAGA3KNAABwb1oAAAYrOwctFwMUb14AAAYDFG9cAAAGAxRvWgAABish
A3KNAABwb14AAAYDco0AAHBvXAAABgNyjQAAcG9aAAAG3iQmA3KVAABwb14AAAYDcpUAAHBvXAAA
BgNylQAAcG9aAAAG3gAqAABBNAAAAAAAAAcAAAD9AwAABAQAACQAAAAcAAABAAAAAC8EAAC+AAAA
7QQAACQAAAAcAAABHgIoAQAABioqAgMEBSgZAAAKKlICexoAAAoCexsAAAoWlG8cAAAKKiICFigd
AAAKKlICexoAAAoCexsAAAoXlG8eAAAKKiICFygdAAAKKlICexoAAAoCexsAAAoYlG8eAAAKKiIC
GCgdAAAKKlICexoAAAoCexsAAAoZlG8eAAAKKiICGSgdAAAKKlICexoAAAoCexsAAAoalG8eAAAK
KiICGigdAAAKKlICexoAAAoCexsAAAoblG8eAAAKKiICGygdAAAKKlICexoAAAoCexsAAAoclG8f
AAAKKiICHCgdAAAKKlICexoAAAoCexsAAAodlG8eAAAKKiICHSgdAAAKKlICexoAAAoCexsAAAoe
lG8eAAAKKiICHigdAAAKKlYCexoAAAoCexsAAAofCZRvHgAACiomAh8JKB0AAAoqVgJ7GgAACgJ7
GwAACh8KlG8cAAAKKiYCHwooHQAACipWAnsaAAAKAnsbAAAKHwuUbx4AAAoqJgIfCygdAAAKKlYC
exoAAAoCexsAAAofDJRvIAAACiomAh8MKB0AAAoqVgJ7GgAACgJ7GwAACh8NlG8eAAAKKiYCHw0o
HQAACipWAnsaAAAKAnsbAAAKHw6Ubx4AAAoqJgIfDigdAAAKKlYCexoAAAoCexsAAAofD5RvHgAA
CiomAh8PKB0AAAoqVgJ7GgAACgJ7GwAACh8QlG8eAAAKKiYCHxAoHQAACipWAnsaAAAKAnsbAAAK
HxGUbx4AAAoqJgIfESgdAAAKKlYCexoAAAoCexsAAAofEpRvHAAACiomAh8SKB0AAAoqVgJ7GgAA
CgJ7GwAACh8TlG8eAAAKKiYCHxMoHQAACipWAnsaAAAKAnsbAAAKHxSUbx4AAAoqJgIfFCgdAAAK
KlYCexoAAAoCexsAAAofFZRvHgAACiomAh8VKB0AAAoqVgJ7GgAACgJ7GwAACh8WlG8eAAAKKiYC
HxYoHQAACipWAnsaAAAKAnsbAAAKHxeUbx4AAAoqJgIfFygdAAAKKlYCexoAAAoCexsAAAofGJRv
HwAACiomAh8YKB0AAAoqVgJ7GgAACgJ7GwAACh8ZlG8eAAAKKiYCHxkoHQAACipWAnsaAAAKAnsb
AAAKHxqUbx4AAAoqJgIfGigdAAAKKlYCexoAAAoCexsAAAofG5RvHgAACiomAh8bKB0AAAoqVgJ7
GgAACgJ7GwAACh8clG8cAAAKKiYCHxwoHQAACipWAnsaAAAKAnsbAAAKHx2Ubx4AAAoqJgIfHSgd
AAAKKlYCexoAAAoCexsAAAofHpRvIAAACiomAh8eKB0AAAoqVgJ7GgAACgJ7GwAACh8flG8eAAAK
KiYCHx8oHQAACipWAnsaAAAKAnsbAAAKHyCUbx4AAAoqJgIfICgdAAAKKlYCexoAAAoCexsAAAof
IZRvHgAACiomAh8hKB0AAAoqVgJ7GgAACgJ7GwAACh8ilG8eAAAKKiYCHyIoHQAACipWAnsaAAAK
AnsbAAAKHyOUbx4AAAoqJgIfIygdAAAKKlYCexoAAAoCexsAAAofJJRvIQAACiomAh8kKB0AAAoq
KgIfJQMoIgAACipeAywJAh8lKCMAAAoqctUAAHBzJAAACnoqAh8mAygiAAAKKl4DLAkCHyYoIwAA
Cipy1QAAcHMkAAAKeioCHycDKCIAAAoqXgMsCQIfJygjAAAKKnLVAABwcyQAAAp6KgIfKAMoIgAA
CipeAywJAh8oKCMAAAoqctUAAHBzJAAACnoqAh8pAygiAAAKKl4DLAkCHykoIwAACipy1QAAcHMk
AAAKeioCHyoDKCIAAAoqXgMsCQIfKigjAAAKKnLVAABwcyQAAAp6HgIoJQAACioeAigmAAAKKjoC
KCcAAAoCA30DAAAEKjoCKCcAAAoCA30EAAAEKh4CKCcAAAoqAAAAEzACAC0AAAACAAARfgUAAAQt
IHJyAQBw0AcAAAIoKQAACm8qAAAKcysAAAoKBoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4H
AAAEKi5zaQAABoAHAAAEKh4CKC4AAAoqALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQu
MC4zMDMxOQAAAAAFAGwAAABYDgAAI34AAMQOAAC0FQAAI1N0cmluZ3MAAAAAeCQAAOQBAAAjVVMA
XCYAABAAAAAjR1VJRAAAAGwmAADsAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAAB
AAAAJAAAAAgAAAAHAAAAagAAABkAAAAuAAAADwAAAAIAAAADAAAAWQAAAFoAAAABAAAABAAAAAEA
AAAAAAoAAQAAAAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgB2Ac0ABgCFAc0ACgDQAhQBCgC+
AxQBCgD6EOkQCgArERYRCgAEEuoRCgAvEh0SCgBGEh0SCgBjEh0SCgCCEh0SCgCbEh0SCgC0Eh0S
CgDPEh0SCgDqEh0SCgADEx0SCgA8ExwTCgBcExwTCgCeExQBCgClExQBBgDOE80ACgAWFBQBCgAj
FBQBCgAsFBQBCgCAFBQBCgCtFJoUCgDKFBQBCgDPFBQBCgDzFB0SDgAfFQkVDgA4FQkVCgBNFRwT
AAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABAAAAACAADAAUAAQAQAEsAAAAJAAMACQAB
ABAAWAAAAA0AAwBiAAEAEABkAAAADQAEAGMAAAAQAG4AeAANAAUAZAAAARAApwB4ABEABwBoAAYA
WAATAAYAZAAXAAEA2RBvAAEA2RBvABEAChF5ABEANxF9ABEAexGbAFAgAAAAAIYYTwEbAAEAcCAA
AAAAxgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYBtAEpAAYAqiAAAAAAxgDLARsABwCyIAAA
AADGANYBGwAHALwgAAAAAMYAtAEpAAcAECYAAAAAhhhPARsACAAYJgAAAACGGE8BLwAIACMmAAAA
AIYI4gE5AAsAOCYAAAAAhgjpAT0ACwBBJgAAAACGCPcBQQALAFYmAAAAAIYIAgI9AAsAXyYAAAAA
hggUAkEACwB0JgAAAACGCC4CPQALAH0mAAAAAIYITwJBAAsAkiYAAAAAhghiAj0ACwCbJgAAAACG
CHwCQQALALAmAAAAAIYIiwI9AAsAuSYAAAAAhgihAkEACwDOJgAAAACGCLUCPQALANcmAAAAAIYI
2AJFAAsA7CYAAAAAhgjoAj0ACwD1JgAAAACGCP8CQQALAAonAAAAAIYIDgM9AAsAEycAAAAAhggk
A0EACwAoJwAAAACGCDMDPQALADEnAAAAAIYISQNBAAsARycAAAAAhghdAz0ACwBRJwAAAACGCHgD
OQALAGcnAAAAAIYIhwM9AAsAcScAAAAAhgidA0EACwCHJwAAAACGCKoDPQALAJEnAAAAAIYIxwNK
AAsApycAAAAAhgjVAz0ACwCxJwAAAACGCOoDQQALAMcnAAAAAIYI+wM9AAsA0ScAAAAAhggTBEEA
CwDnJwAAAACGCCEEPQALAPEnAAAAAIYINgRBAAsABygAAAAAhghLBD0ACwARKAAAAACGCGcEQQAL
ACcoAAAAAIYIggQ9AAsAMSgAAAAAhgikBEEACwBHKAAAAACGCLIEPQALAFEoAAAAAIYIxwQ5AAsA
ZygAAAAAhgjaBD0ACwBxKAAAAACGCPQEQQALAIcoAAAAAIYIBAU9AAsAkSgAAAAAhggbBUEACwCn
KAAAAACGCDoFPQALALEoAAAAAIYIYAVBAAsAxygAAAAAhgh4BT0ACwDRKAAAAACGCJcFQQALAOco
AAAAAIYIqwU9AAsA8SgAAAAAhgjGBUEACwAHKQAAAACGCN8FPQALABEpAAAAAIYI/wVFAAsAJykA
AAAAhggUBj0ACwAxKQAAAACGCDAGQQALAEcpAAAAAIYIRAY9AAsAUSkAAAAAhghfBkEACwBnKQAA
AACGCHMGPQALAHEpAAAAAIYIjgZBAAsAhykAAAAAhginBj0ACwCRKQAAAACGCMcGOQALAKcpAAAA
AIYI2wY9AAsAsSkAAAAAhgj2BkEACwDHKQAAAACGCAgHPQALANEpAAAAAIYIIQdKAAsA5ykAAAAA
hgg0Bz0ACwDxKQAAAACGCE4HQQALAAcqAAAAAIYIZAc9AAsAESoAAAAAhgiBB0EACwAnKgAAAACG
CJQHPQALADEqAAAAAIYIrgdBAAsARyoAAAAAhgjIBz0ACwBRKgAAAACGCOkHQQALAGcqAAAAAIYI
CQg9AAsAcSoAAAAAhggwCEEACwCHKgAAAACGCEMIPQALAJEqAAAAAIYIXQhKAAsApyoAAAAAhgh9
CD0ACwCxKgAAAACGCKQITwALALwqAAAAAIYIwwhUAAwA1CoAAAAAhgjpCE8ADQDfKgAAAACGCAAJ
VAAOAPcqAAAAAIYIHglPAA8AAisAAAAAhgg1CVQAEAAaKwAAAACGCFMJTwARACUrAAAAAIYIaQlU
ABIAPSsAAAAAhgiGCU8AEwBIKwAAAACGCKAJVAAUAGArAAAAAIYIwQlPABUAaysAAAAAhgjhCVQA
FgCDKwAAAACGAAgKPQAXAIsrAAAAAIYAEAo9ABcAkysAAAAAhhhPAXMAFwCiKwAAAACGGE8BcwAY
ALErAAAAAIMYTwEbABkAvCsAAAAAkwhHEYEAGQD1KwAAAACTCFsRhgAZAPwrAAAAAJMIZxGLABkA
BCwAAAAAlgiLEZ8AGgAXLAAAAACGGE8BGwAaAAssAAAAAJEYaBUxARoAAAABAJ8RAAACAKcRAAAD
ALERAAAEALgRAAABALERAAABAMIRAAABAMIRAAABALERAAACAMYRAAADALgRAAABANoRAAABANoR
AAABANoRAAABANoRAAABANoRAAABANoRAAABANoRAAABANoRAAABANoRAAABANoRAAABANoRAAAB
ANoRAAABAOARAAABAOARAAABANoRWQBPAU8AYQBPAU8AaQBPAU8AcQBPAU8AeQBPAU8AgQBPAU8A
iQBPAU8AkQBPAU8AmQBPAU8AoQBPAU8AqQBPAakAsQBPARsACQBPARsAuQC2E64ACQC9E7UAyQBP
ARsACQDLARsACQDWARsAuQD1EzkAuQAAFMAAuQAKFMYAuQAAFMwAuQAbFNEA2QAoFNcAEQBPAS8A
EQCxEeIAEQDGEeYAKQA2FOoAEQA/FO8AKQBGFMwAKQBQFPQAKQBbFPoAKQBjFPoAEQBvFAABEQB4
FKkA6QBPAU8AEQAICj0AEQAQCj0AGQBPARsA8QBPARsA+QDhFAYB+QD8FA4BSQBPARQBEQFPASEB
IQFPARsAIQBPARsALgAbAKYBLgBjAMwBLgALADUBLgATAH0BLgAjAKYBLgArAKYBLgAzAH0BLgA7
AKwBLgBDAKYBLgBbAMMBYwCDALsA4QBrAbsA4wBDAbsA6QpjASgBCQtjASgB3QAcAQQAAQAHAFcA
CABZAAAAHApZAAAAHwpdAAAAKQphAAAAMApdAAAAPgphAAAAVApdAAAAcQphAAAAgApdAAAAlgph
AAAAoQpdAAAAswphAAAAwwpdAAAA2gplAAAA5gpdAAAA+QphAAAABAtdAAAAFgthAAAAIQtdAAAA
MwthAAAAQwtdAAAAWgtZAAAAZQtdAAAAdwthAAAAgAtdAAAAkAtqAAAAmgtdAAAAqwthAAAAuAtd
AAAAzAthAAAA1gtdAAAA5wthAAAA+AtdAAAAEAxhAAAAJwxdAAAARQxhAAAATwxdAAAAYAxZAAAA
bwxdAAAAhQxhAAAAkQxdAAAApAxhAAAAvwxdAAAA4QxhAAAA9QxdAAAAEA1hAAAAIA1dAAAANw1h
AAAATA1dAAAAaA1lAAAAeQ1dAAAAkQ1hAAAAoQ1dAAAAuA1hAAAAyA1dAAAA3w1hAAAA9A1dAAAA
EA5ZAAAAIA5dAAAANw5hAAAARQ5dAAAAWg5qAAAAaQ5dAAAAfw5hAAAAkQ5dAAAAqg5hAAAAuQ5d
AAAAzw5hAAAA5Q5dAAAAAg9hAAAAHg9dAAAAQQ9hAAAAUA9dAAAAZg9qAAAAgg9dAAAApQ9hAAAA
wA9dAAAA4g9hAAAA9Q9dAAAADxBhAAAAIhBdAAAAPBBhAAAAThBdAAAAZxBhAAAAfRBdAAAAmhBh
AAAAthBdAAAA+hCRAAAAcxGWAAAAlxGkAAIACgADAAIACwAFAAIADAAHAAIADQAJAAIADgALAAIA
DwANAAIAEAAPAAIAEQARAAIAEgATAAIAEwAVAAIAFAAXAAIAFQAZAAIAFgAbAAIAFwAdAAIAGAAf
AAIAGQAhAAIAGgAjAAIAGwAlAAIAHAAnAAIAHQApAAIAHgArAAIAHwAtAAIAIAAvAAIAIQAxAAIA
IgAzAAIAIwA1AAIAJAA3AAIAJQA5AAIAJgA7AAIAJwA9AAIAKAA/AAIAKQBBAAIAKgBDAAIAKwBF
AAIALABHAAIALQBJAAIALgBLAAIALwBNAAIAMABPAAIAMQBRAAIAMgBTAAIAMwBVAAIANABXAAIA
NQBZAAIANgBbAAIANwBdAAIAOABfAAIAOQBhAAIAOgBjAAIAOwBlAAIAPABnAAIAPQBpAAIAPgBr
AAIAPwBtAAIAQABvAAIAQQBxAAIAQgBzAAIAQwB1AAIARAB3AAIARQB5AAIARgB7AAIARwB9AAIA
SAB/AAIASQCBAAIASgCDAAIASwCFAAIATACHAAIATQCJAAIATgCLAAIATwCNAAIAUACPAAIAUQCR
AAIAUgCTAAIAUwCVAAEAVACXAAEAVQCZAAEAVgCbAAEAVwCdAAEAWACfAAEAWQChAAEAWgCjAAEA
WwClAAEAXACnAAEAXQCpAAEAXgCrAAEAXwCtAAIAZQCvAAIAZgCxAAEAZwCxAAIAaACzAASAAAAB
AAAAWR1mZgAAAAAAAHoTAAAMAAAAAAAAAAAAAAABALAAAAAAAAQAAAAAAAAAAAAAAAoACwEAAAAA
BAAAAAAAAAAAAAAACgAUAQAAAAAMAAAAAAAAAAAAAAABAFUBAAAAAAAAAAABAAAAbxUAAAAAAAAA
PE1vZHVsZT4AU0NfZmIwMjhjNTdlYTYxNDYzOGI4ZGQyNjU4NjNmMmEwNTMuZGxsAFVzZXJDb21w
b25lbnQAU2NyaXB0TWFpbgBJbnB1dDBCdWZmZXIAQ29ubmVjdGlvbnMAVmFyaWFibGVzAFJlc291
cmNlcwBTQ19mYjAyOGM1N2VhNjE0NjM4YjhkZDI2NTg2M2YyYTA1My5Qcm9wZXJ0aWVzAFNldHRp
bmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UGlwZWxpbmUAU2NyaXB0Q29tcG9uZW50AFNjcmlwdEJ1ZmZlcgBtc2NvcmxpYgBTeXN0ZW0AT2Jq
ZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAC5jdG9yAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91dHB1dE5hbWVN
YXAAUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJv
dwBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAGdldF9JRABnZXRfSURfSXNOdWxsAGdldF9hZ2VuY3kA
Z2V0X2FnZW5jeV9Jc051bGwAZ2V0X2Fzc29jaWF0ZWRwcmltZXZlbmRvcgBnZXRfYXNzb2NpYXRl
ZHByaW1ldmVuZG9yX0lzTnVsbABnZXRfY2FwaXRhbHByb2plY3QAZ2V0X2NhcGl0YWxwcm9qZWN0
X0lzTnVsbABnZXRfY29udHJhY3RpZABnZXRfY29udHJhY3RpZF9Jc051bGwAZ2V0X2NvbnRyYWN0
cHVycG9zZQBnZXRfY29udHJhY3RwdXJwb3NlX0lzTnVsbABEZWNpbWFsAGdldF9jaGVja2Ftb3Vu
dABnZXRfY2hlY2thbW91bnRfSXNOdWxsAGdldF9kZXBhcnRtZW50AGdldF9kZXBhcnRtZW50X0lz
TnVsbABnZXRfZG9jdW1lbnRpZABnZXRfZG9jdW1lbnRpZF9Jc051bGwAZ2V0X2V4cGVuc2VjYXRl
Z29yeQBnZXRfZXhwZW5zZWNhdGVnb3J5X0lzTnVsbABnZXRfZmlzY2FseWVhcgBnZXRfZmlzY2Fs
eWVhcl9Jc051bGwAZ2V0X2luZHVzdHJ5AGdldF9pbmR1c3RyeV9Jc051bGwARGF0ZVRpbWUAZ2V0
X2lzc3VlZGF0ZQBnZXRfaXNzdWVkYXRlX0lzTnVsbABnZXRfbXdiZWNhdGVnb3J5AGdldF9td2Jl
Y2F0ZWdvcnlfSXNOdWxsAGdldF9wYXllZW5hbWUAZ2V0X3BheWVlbmFtZV9Jc051bGwAZ2V0X3Nw
ZW5kaW5nY2F0ZWdvcnkAZ2V0X3NwZW5kaW5nY2F0ZWdvcnlfSXNOdWxsAGdldF9zdWJjb250cmFj
dHJlZmVyZW5jZWlkAGdldF9zdWJjb250cmFjdHJlZmVyZW5jZWlkX0lzTnVsbABnZXRfc3VidmVu
ZG9yAGdldF9zdWJ2ZW5kb3JfSXNOdWxsAGdldF9TdGFnaW5nSURGSU5BTABnZXRfU3RhZ2luZ0lE
RklOQUxfSXNOdWxsAGdldF9hZ2VuY3lGSU5BTABnZXRfYWdlbmN5RklOQUxfSXNOdWxsAGdldF9h
c3NvY2lhdGVkcHJpbWV2ZW5kb3JGSU5BTABnZXRfYXNzb2NpYXRlZHByaW1ldmVuZG9yRklOQUxf
SXNOdWxsAGdldF9jYXBpdGFscHJvamVjdEZJTkFMAGdldF9jYXBpdGFscHJvamVjdEZJTkFMX0lz
TnVsbABnZXRfY29udHJhY3RpZEZJTkFMAGdldF9jb250cmFjdGlkRklOQUxfSXNOdWxsAGdldF9j
b250cmFjdHB1cnBvc2VGSU5BTABnZXRfY29udHJhY3RwdXJwb3NlRklOQUxfSXNOdWxsAGdldF9j
aGVja2Ftb3VudEZJTkFMAGdldF9jaGVja2Ftb3VudEZJTkFMX0lzTnVsbABnZXRfZGVwYXJ0bWVu
dEZJTkFMAGdldF9kZXBhcnRtZW50RklOQUxfSXNOdWxsAGdldF9kb2N1bWVudGlkRklOQUwAZ2V0
X2RvY3VtZW50aWRGSU5BTF9Jc051bGwAZ2V0X2V4cGVuc2VjYXRlZ29yeUZJTkFMAGdldF9leHBl
bnNlY2F0ZWdvcnlGSU5BTF9Jc051bGwAZ2V0X2Zpc2NhbHllYXJGSU5BTABnZXRfZmlzY2FseWVh
ckZJTkFMX0lzTnVsbABnZXRfaW5kdXN0cnlGSU5BTABnZXRfaW5kdXN0cnlGSU5BTF9Jc051bGwA
Z2V0X2lzc3VlZGF0ZUZJTkFMAGdldF9pc3N1ZWRhdGVGSU5BTF9Jc051bGwAZ2V0X213YmVjYXRl
Z29yeUZJTkFMAGdldF9td2JlY2F0ZWdvcnlGSU5BTF9Jc051bGwAZ2V0X3BheWVlbmFtZUZJTkFM
AGdldF9wYXllZW5hbWVGSU5BTF9Jc051bGwAZ2V0X3NwZW5kaW5nY2F0ZWdvcnlGSU5BTABnZXRf
c3BlbmRpbmdjYXRlZ29yeUZJTkFMX0lzTnVsbABnZXRfc3ViY29udHJhY3RyZWZlcmVuY2VpZEZJ
TkFMAGdldF9zdWJjb250cmFjdHJlZmVyZW5jZWlkRklOQUxfSXNOdWxsAGdldF9zdWJ2ZW5kb3JG
SU5BTABnZXRfc3VidmVuZG9yRklOQUxfSXNOdWxsAGdldF9MYXN0VXBkYXRlZFRpbWVzdGFtcERl
cml2ZWQAZ2V0X0xhc3RVcGRhdGVkVGltZXN0YW1wRGVyaXZlZF9Jc051bGwAc2V0X1JlZ2lzdHJh
dGlvblNUQUdJTkdEZXJpdmVkAHNldF9SZWdpc3RyYXRpb25TVEFHSU5HRGVyaXZlZF9Jc051bGwA
c2V0X0RlcHRTVEFHSU5HRGVyaXZlZABzZXRfRGVwdFNUQUdJTkdEZXJpdmVkX0lzTnVsbABzZXRf
Q29kZVNUQUdJTkdEZXJpdmVkAHNldF9Db2RlU1RBR0lOR0Rlcml2ZWRfSXNOdWxsAHNldF9PY2NT
VEFHSU5HRGVyaXZlZABzZXRfT2NjU1RBR0lOR0Rlcml2ZWRfSXNOdWxsAHNldF9DYXBQcm9qU1RB
R0lOR0Rlcml2ZWQAc2V0X0NhcFByb2pTVEFHSU5HRGVyaXZlZF9Jc051bGwAc2V0X1Byb2plY3RB
Z2VuY3lTVEFHSU5HRGVyaXZlZABzZXRfUHJvamVjdEFnZW5jeVNUQUdJTkdEZXJpdmVkX0lzTnVs
bABOZXh0Um93AEVuZE9mUm93c2V0AElEAElEX0lzTnVsbABhZ2VuY3kAYWdlbmN5X0lzTnVsbABh
c3NvY2lhdGVkcHJpbWV2ZW5kb3IAYXNzb2NpYXRlZHByaW1ldmVuZG9yX0lzTnVsbABjYXBpdGFs
cHJvamVjdABjYXBpdGFscHJvamVjdF9Jc051bGwAY29udHJhY3RpZABjb250cmFjdGlkX0lzTnVs
bABjb250cmFjdHB1cnBvc2UAY29udHJhY3RwdXJwb3NlX0lzTnVsbABjaGVja2Ftb3VudABjaGVj
a2Ftb3VudF9Jc051bGwAZGVwYXJ0bWVudABkZXBhcnRtZW50X0lzTnVsbABkb2N1bWVudGlkAGRv
Y3VtZW50aWRfSXNOdWxsAGV4cGVuc2VjYXRlZ29yeQBleHBlbnNlY2F0ZWdvcnlfSXNOdWxsAGZp
c2NhbHllYXIAZmlzY2FseWVhcl9Jc051bGwAaW5kdXN0cnkAaW5kdXN0cnlfSXNOdWxsAGlzc3Vl
ZGF0ZQBpc3N1ZWRhdGVfSXNOdWxsAG13YmVjYXRlZ29yeQBtd2JlY2F0ZWdvcnlfSXNOdWxsAHBh
eWVlbmFtZQBwYXllZW5hbWVfSXNOdWxsAHNwZW5kaW5nY2F0ZWdvcnkAc3BlbmRpbmdjYXRlZ29y
eV9Jc051bGwAc3ViY29udHJhY3RyZWZlcmVuY2VpZABzdWJjb250cmFjdHJlZmVyZW5jZWlkX0lz
TnVsbABzdWJ2ZW5kb3IAc3VidmVuZG9yX0lzTnVsbABTdGFnaW5nSURGSU5BTABTdGFnaW5nSURG
SU5BTF9Jc051bGwAYWdlbmN5RklOQUwAYWdlbmN5RklOQUxfSXNOdWxsAGFzc29jaWF0ZWRwcmlt
ZXZlbmRvckZJTkFMAGFzc29jaWF0ZWRwcmltZXZlbmRvckZJTkFMX0lzTnVsbABjYXBpdGFscHJv
amVjdEZJTkFMAGNhcGl0YWxwcm9qZWN0RklOQUxfSXNOdWxsAGNvbnRyYWN0aWRGSU5BTABjb250
cmFjdGlkRklOQUxfSXNOdWxsAGNvbnRyYWN0cHVycG9zZUZJTkFMAGNvbnRyYWN0cHVycG9zZUZJ
TkFMX0lzTnVsbABjaGVja2Ftb3VudEZJTkFMAGNoZWNrYW1vdW50RklOQUxfSXNOdWxsAGRlcGFy
dG1lbnRGSU5BTABkZXBhcnRtZW50RklOQUxfSXNOdWxsAGRvY3VtZW50aWRGSU5BTABkb2N1bWVu
dGlkRklOQUxfSXNOdWxsAGV4cGVuc2VjYXRlZ29yeUZJTkFMAGV4cGVuc2VjYXRlZ29yeUZJTkFM
X0lzTnVsbABmaXNjYWx5ZWFyRklOQUwAZmlzY2FseWVhckZJTkFMX0lzTnVsbABpbmR1c3RyeUZJ
TkFMAGluZHVzdHJ5RklOQUxfSXNOdWxsAGlzc3VlZGF0ZUZJTkFMAGlzc3VlZGF0ZUZJTkFMX0lz
TnVsbABtd2JlY2F0ZWdvcnlGSU5BTABtd2JlY2F0ZWdvcnlGSU5BTF9Jc051bGwAcGF5ZWVuYW1l
RklOQUwAcGF5ZWVuYW1lRklOQUxfSXNOdWxsAHNwZW5kaW5nY2F0ZWdvcnlGSU5BTABzcGVuZGlu
Z2NhdGVnb3J5RklOQUxfSXNOdWxsAHN1YmNvbnRyYWN0cmVmZXJlbmNlaWRGSU5BTABzdWJjb250
cmFjdHJlZmVyZW5jZWlkRklOQUxfSXNOdWxsAHN1YnZlbmRvckZJTkFMAHN1YnZlbmRvckZJTkFM
X0lzTnVsbABMYXN0VXBkYXRlZFRpbWVzdGFtcERlcml2ZWQATGFzdFVwZGF0ZWRUaW1lc3RhbXBE
ZXJpdmVkX0lzTnVsbABSZWdpc3RyYXRpb25TVEFHSU5HRGVyaXZlZABSZWdpc3RyYXRpb25TVEFH
SU5HRGVyaXZlZF9Jc051bGwARGVwdFNUQUdJTkdEZXJpdmVkAERlcHRTVEFHSU5HRGVyaXZlZF9J
c051bGwAQ29kZVNUQUdJTkdEZXJpdmVkAENvZGVTVEFHSU5HRGVyaXZlZF9Jc051bGwAT2NjU1RB
R0lOR0Rlcml2ZWQAT2NjU1RBR0lOR0Rlcml2ZWRfSXNOdWxsAENhcFByb2pTVEFHSU5HRGVyaXZl
ZABDYXBQcm9qU1RBR0lOR0Rlcml2ZWRfSXNOdWxsAFByb2plY3RBZ2VuY3lTVEFHSU5HRGVyaXZl
ZABQcm9qZWN0QWdlbmN5U1RBR0lOR0Rlcml2ZWRfSXNOdWxsAFBhcmVudENvbXBvbmVudABTeXN0
ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABE
ZWZhdWx0AElucHV0SUQASW5wdXROYW1lAEJ1ZmZlcgBPdXRwdXRNYXAAUm93AEJ1ZmZlckNvbHVt
bkluZGV4ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3Nl
bWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ19mYjAyOGM1N2VhNjE0NjM4YjhkZDI2NTg2M2Yy
YTA1MwBTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBTU0lT
U2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBnZXRfTGVuZ3RoAFN1YnN0cmluZwBv
cF9FcXVhbGl0eQBDaGFyAFRyaW1FbmQATWF0aABNYXgARXhjZXB0aW9uAEdldEludDMyAElzTnVs
bABHZXRTdHJpbmcAR2V0RGVjaW1hbABHZXREYXRlAEdldERhdGVUaW1lAHNldF9JdGVtAFNldE51
bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAC5jY3RvcgBTQ19mYjAyOGM1N2VhNjE0NjM4YjhkZDI2NTg2M2YyYTA1My5Qcm9wZXJ0
aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAD0kAbgBwAHUAdAAgADAAAAdDAFQAMQAACUMAVABB
ADEAAAdEAE8AMQAACU0ATQBBADEAAAlSAEMAVAAxAAAJUABSAEMAMgAAB1AATwBEAAAHUABPAEMA
AAlQAE8ATgAxAAAJUABSAE0AMQAACVAAQwBDADEAAAlDAFQAQQAyAAALUgBUAEcAUABGAAAHTgAv
AEEAAD9FAFIAUgBPAFIAOgAgAGEAbgAgAGUAeABjAGUAcAB0AGkAbwBuACAAaABhAHMAIABvAGMA
YwB1AHIAZQBkAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQA
IABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBh
AGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAcVMA
QwBfAGYAYgAwADIAOABjADUANwBlAGEANgAxADQANgAzADgAYgA4AGQAZAAyADYANQA4ADYAMwBm
ADIAYQAwADUAMwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAANxiE
WQrZr0C0rFX4t/lajAAIiYRdzYCAzJEIt3pcVhk04IkDBhIUAwYSGAMgAAEJIAQBCA4SFRIZBSAB
ARIQCSADARIVHQgSGQMgAAgDIAACAyAADgQgABEdBCAAESEEIAEBDgQgAQECAygACAMoAAIDKAAO
BCgAER0EKAARIQMGEgUFIAEBEgUDBhIlAwYSKQQAABIlBAAAEikFAAEBEikECAASJQQIABIpAwYS
IAQAABIgBAgAEiAEIAEBCAYgAgIOEWEFIAEdCAgEAQAAAAUgAg4ICAUAAgIODgQgAQ4IBSABDh0D
BQACCAgIBAcCDg4DBhIVAwYdCAQgAQgIBCABAggFIAERHQgFIAERIQgFIAIBCBwHAAESfRGAgQUg
ABKAhQcgAgEOEoCFBAcBEiUGIAEBEYCNCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNT
Q19mYjAyOGM1N2VhNjE0NjM4YjhkZDI2NTg2M2YyYTA1MwAABQEAAAAAFgEAEUNvcHlyaWdodCBA
ICAyMDIwAAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAFhVAAAAAAAA
AAAAAG5VAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgVQAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMAAAAAAAAA
AAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAGZm
WR0AAAEAZmZZHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBADAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAAAHAAJAAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBmAGIAMAAyADgAYwA1ADcA
ZQBhADYAMQA0ADYAMwA4AGIAOABkAGQAMgA2ADUAOAA2ADMAZgAyAGEAMAA1ADMAAABAAA8AAQBG
AGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA1ADEAMwAuADIANgAyADEANAAAAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmAGIAMAAyADgAYwA1ADcAZQBh
ADYAMQA0ADYAMwA4AGIAOABkAGQAMgA2ADUAOAA2ADMAZgAyAGEAMAA1ADMALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIAMAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMA
XwBmAGIAMAAyADgAYwA1ADcAZQBhADYAMQA0ADYAMwA4AGIAOABkAGQAMgA2ADUAOAA2ADMAZgAy
AGEAMAA1ADMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8A
ZgBiADAAMgA4AGMANQA3AGUAYQA2ADEANAA2ADMAOABiADgAZABkADIANgA1ADgANgAzAGYAMgBh
ADAANQAzAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADUA
MQAzAC4AMgA2ADIAMQA0AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA3ADUAMQAzAC4AMgA2ADIAMQA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAIA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_fb028c57ea614638b8dd265863f2a053</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">39de178a02af8e7dd66a665c38bcf735</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">ce9dc3ec074e07c1f51096eb53aed429a985b21a</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[associated_prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[capital_project]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[check_amount]"
                      cachedDataType="cy"
                      cachedName="check_amount"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[department]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[document_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[expense_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[fiscal_year]"
                      cachedDataType="i4"
                      cachedName="fiscal_year"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[issue_date]"
                      cachedDataType="dbDate"
                      cachedName="issue_date"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[payee_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[spending_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[agency_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[associated_prime_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[capital_project_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[contract_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[contract_purpose_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[check_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="check_amount_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[department_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[document_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[expense_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[fiscal_year_FINAL]"
                      cachedDataType="i4"
                      cachedName="fiscal_year_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[industry_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[issue_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="issue_date_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[mwbe_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[payee_name_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[spending_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[sub_contract_reference_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[sub_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[RegistrationSTAGING_Derived]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[RegistrationSTAGING_Derived]"
                      name="RegistrationSTAGING_Derived" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[DeptSTAGING_Derived]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[DeptSTAGING_Derived]"
                      name="DeptSTAGING_Derived" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CodeSTAGING_Derived]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CodeSTAGING_Derived]"
                      name="CodeSTAGING_Derived" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[OccSTAGING_Derived]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[OccSTAGING_Derived]"
                      name="OccSTAGING_Derived" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CapProjSTAGING_Derived]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CapProjSTAGING_Derived]"
                      name="CapProjSTAGING_Derived" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[ProjectAgencySTAGING_Derived]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[ProjectAgencySTAGING_Derived]"
                      name="ProjectAgencySTAGING_Derived" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derive Current Datetime for Final Spending table"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]"
                      name="LastUpdatedTimestamp_Derived"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Final - Spending Sorted ASC"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Spending]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT
       [StagingID] AS StagingID_FINAL
      ,[agency] AS agency_FINAL
      ,[associated_prime_vendor] AS associated_prime_vendor_FINAL
      ,[capital_project] AS capital_project_FINAL
      ,[contract_id] AS contract_id_FINAL
      ,[contract_purpose] AS contract_purpose_FINAL
      ,[check_amount] AS check_amount_FINAL
      ,[department] AS department_FINAL
      ,[document_id] AS document_id_FINAL
      ,[expense_category] AS expense_category_FINAL
      ,[fiscal_year] AS fiscal_year_FINAL
      ,[industry] AS industry_FINAL
      ,[issue_date] AS issue_date_FINAL
      ,[mwbe_category] AS mwbe_category_FINAL
      ,[payee_name] AS payee_name_FINAL
      ,[spending_category] AS spending_category_FINAL
      ,[sub_contract_reference_id] AS sub_contract_reference_id_FINAL
      ,[sub_vendor] AS sub_vendor_FINAL
  FROM [CheckBookNYC].[dbo].[Spending]
  ORDER BY
      [StagingID] ASC</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output]"
                  isSorted="true"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[StagingID_FINAL]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[StagingID_FINAL]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[StagingID_FINAL]"
                      name="StagingID_FINAL"
                      sortKeyPosition="1"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[agency_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[agency_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[agency_FINAL]"
                      name="agency_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[associated_prime_vendor_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[associated_prime_vendor_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[associated_prime_vendor_FINAL]"
                      name="associated_prime_vendor_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[capital_project_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[capital_project_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[capital_project_FINAL]"
                      name="capital_project_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_id_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_id_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_id_FINAL]"
                      name="contract_id_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_purpose_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_purpose_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_purpose_FINAL]"
                      name="contract_purpose_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[check_amount_FINAL]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[check_amount_FINAL]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[check_amount_FINAL]"
                      name="check_amount_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[department_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[department_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[department_FINAL]"
                      name="department_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[document_id_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[document_id_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[document_id_FINAL]"
                      name="document_id_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[expense_category_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[expense_category_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[expense_category_FINAL]"
                      name="expense_category_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[fiscal_year_FINAL]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[fiscal_year_FINAL]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[fiscal_year_FINAL]"
                      name="fiscal_year_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[industry_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[industry_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[industry_FINAL]"
                      name="industry_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[issue_date_FINAL]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[issue_date_FINAL]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[issue_date_FINAL]"
                      name="issue_date_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[mwbe_category_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[mwbe_category_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[mwbe_category_FINAL]"
                      name="mwbe_category_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[payee_name_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[payee_name_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[payee_name_FINAL]"
                      name="payee_name_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[spending_category_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[spending_category_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[spending_category_FINAL]"
                      name="spending_category_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_reference_id_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id_FINAL]"
                      name="sub_contract_reference_id_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_vendor_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_vendor_FINAL]"
                      name="sub_vendor_FINAL"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[StagingID_FINAL]"
                      dataType="i4"
                      name="StagingID_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[agency_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="agency_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[associated_prime_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="associated_prime_vendor_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[capital_project_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="capital_project_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="contract_id_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_purpose_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="contract_purpose_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[check_amount_FINAL]"
                      dataType="cy"
                      name="check_amount_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[department_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="department_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[document_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="document_id_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[expense_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="expense_category_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[fiscal_year_FINAL]"
                      dataType="i4"
                      name="fiscal_year_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[industry_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="industry_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[issue_date_FINAL]"
                      dataType="dbDate"
                      name="issue_date_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[mwbe_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="mwbe_category_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[payee_name_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="payee_name_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[spending_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="spending_category_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_reference_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_reference_id_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor_FINAL" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[StagingID_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[StagingID_FINAL]"
                      name="StagingID_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[agency_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[agency_FINAL]"
                      name="agency_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[associated_prime_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[associated_prime_vendor_FINAL]"
                      name="associated_prime_vendor_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[capital_project_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[capital_project_FINAL]"
                      name="capital_project_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_id_FINAL]"
                      name="contract_id_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_purpose_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_purpose_FINAL]"
                      name="contract_purpose_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[check_amount_FINAL]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[check_amount_FINAL]"
                      name="check_amount_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[department_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[department_FINAL]"
                      name="department_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[document_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[document_id_FINAL]"
                      name="document_id_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[expense_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[expense_category_FINAL]"
                      name="expense_category_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[fiscal_year_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[fiscal_year_FINAL]"
                      name="fiscal_year_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[industry_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[industry_FINAL]"
                      name="industry_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[issue_date_FINAL]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[issue_date_FINAL]"
                      name="issue_date_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[mwbe_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[mwbe_category_FINAL]"
                      name="mwbe_category_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[payee_name_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[payee_name_FINAL]"
                      name="payee_name_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[spending_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[spending_category_FINAL]"
                      name="spending_category_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_contract_reference_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_contract_reference_id_FINAL]"
                      name="sub_contract_reference_id_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_vendor_FINAL]"
                      name="sub_vendor_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Find Update-able record"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[contract_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Update-able Records]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Update-able Records"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">(![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]})) || ([ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]})) || (![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]}) &amp;&amp; (#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]} != #{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]}))</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">(!ISNULL(contract_id_FINAL) &amp;&amp; ISNULL(contract_id)) || (ISNULL(contract_id_FINAL) &amp;&amp; !ISNULL(contract_id)) || (!ISNULL(contract_id_FINAL) &amp;&amp; !ISNULL(contract_id) &amp;&amp; (contract_id_FINAL != contract_id))</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert records (Final - Spending) - Batch 100,000"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Spending]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">100000</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[agency]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[associated_prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[associated_prime_vendor]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[capital_project]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[capital_project]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[contract_id]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[contract_purpose]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[department]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[department]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[document_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[document_id]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[expense_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[expense_category]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[industry]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[mwbe_category]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[payee_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[payee_name]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[spending_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[spending_category]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_reference_id]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_vendor]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[StagingID]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[LastUpdatedTimestamp]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[check_amount_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="check_amount_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[check_amount]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[check_amount_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[fiscal_year_DataTypeConverted]"
                      cachedDataType="i4"
                      cachedName="fiscal_year_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[fiscal_year]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[fiscal_year_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[issue_date_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="issue_date_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[issue_date]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[issue_date_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[CodeSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CodeSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Code]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CodeSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[DeptSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DeptSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Dept]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[DeptSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[RegistrationSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RegistrationSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Registration]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[RegistrationSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[ProjectAgencySTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProjectAgencySTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[ProjectAgency]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[ProjectAgencySTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[CapProjSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CapProjSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[CapProj]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CapProjSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[OccSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="OccSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Occ]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[OccSTAGING_Derived]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[StagingID]"
                      dataType="i4"
                      name="StagingID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      name="LastUpdatedTimestamp" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[agency]"
                      dataType="wstr"
                      length="255"
                      name="agency" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[associated_prime_vendor]"
                      dataType="wstr"
                      length="255"
                      name="associated_prime_vendor" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[capital_project]"
                      dataType="wstr"
                      length="255"
                      name="capital_project" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[contract_id]"
                      dataType="wstr"
                      length="255"
                      name="contract_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[contract_purpose]"
                      dataType="wstr"
                      length="255"
                      name="contract_purpose" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[check_amount]"
                      dataType="cy"
                      name="check_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[department]"
                      dataType="wstr"
                      length="255"
                      name="department" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[document_id]"
                      dataType="wstr"
                      length="255"
                      name="document_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[expense_category]"
                      dataType="wstr"
                      length="255"
                      name="expense_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[fiscal_year]"
                      dataType="i4"
                      name="fiscal_year" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[industry]"
                      dataType="wstr"
                      length="255"
                      name="industry" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[issue_date]"
                      dataType="dbDate"
                      name="issue_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[mwbe_category]"
                      dataType="wstr"
                      length="255"
                      name="mwbe_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[payee_name]"
                      dataType="wstr"
                      length="255"
                      name="payee_name" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[spending_category]"
                      dataType="wstr"
                      length="255"
                      name="spending_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_reference_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Code]"
                      dataType="wstr"
                      length="255"
                      name="Code" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Dept]"
                      dataType="wstr"
                      length="255"
                      name="Dept" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Registration]"
                      dataType="wstr"
                      length="255"
                      name="Registration" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[ProjectAgency]"
                      dataType="wstr"
                      length="255"
                      name="ProjectAgency" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[CapProj]"
                      dataType="wstr"
                      length="255"
                      name="CapProj" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Occ]"
                      dataType="wstr"
                      length="255"
                      name="Occ" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[agency]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[associated_prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[associated_prime_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[capital_project]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[capital_project]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_purpose]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[check_amount]"
                      cachedDataType="cy"
                      cachedName="check_amount"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[check_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[department]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[department]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[document_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[document_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[expense_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[expense_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[fiscal_year]"
                      cachedDataType="i4"
                      cachedName="fiscal_year"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[fiscal_year]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[industry]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[issue_date]"
                      cachedDataType="dbDate"
                      cachedName="issue_date"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[issue_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[mwbe_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[payee_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[payee_name]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[spending_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[spending_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_vendor]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[StagingID_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[agency_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[agency_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[associated_prime_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[associated_prime_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[capital_project_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[capital_project_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[contract_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[contract_purpose_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_purpose_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[check_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="check_amount_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[check_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[department_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[department_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[document_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[document_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[expense_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[expense_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[fiscal_year_FINAL]"
                      cachedDataType="i4"
                      cachedName="fiscal_year_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[fiscal_year_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[industry_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[industry_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[issue_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="issue_date_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[issue_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[mwbe_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[mwbe_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[payee_name_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[payee_name_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[spending_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[spending_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_reference_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_vendor_FINAL]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]"
                      name="ID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[ID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency]"
                      name="agency">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[agency]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor]"
                      name="associated_prime_vendor">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[associated_prime_vendor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project]"
                      name="capital_project">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[capital_project]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]"
                      name="contract_id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[contract_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose]"
                      name="contract_purpose">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[contract_purpose]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount]"
                      name="check_amount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[check_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department]"
                      name="department">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[department]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id]"
                      name="document_id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[document_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category]"
                      name="expense_category">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[expense_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year]"
                      name="fiscal_year">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[fiscal_year]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry]"
                      name="industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date]"
                      name="issue_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[issue_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category]"
                      name="mwbe_category">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[mwbe_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name]"
                      name="payee_name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[payee_name]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category]"
                      name="spending_category">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[spending_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id]"
                      name="sub_contract_reference_id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_reference_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor]"
                      name="sub_vendor">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_vendor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]"
                      name="StagingID_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[StagingID_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]"
                      name="agency_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[agency_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor_FINAL]"
                      name="associated_prime_vendor_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[associated_prime_vendor_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project_FINAL]"
                      name="capital_project_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[capital_project_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]"
                      name="contract_id_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[contract_id_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose_FINAL]"
                      name="contract_purpose_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[contract_purpose_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount_FINAL]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount_FINAL]"
                      name="check_amount_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[check_amount_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]"
                      name="department_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[department_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id_FINAL]"
                      name="document_id_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[document_id_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]"
                      name="expense_category_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[expense_category_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year_FINAL]"
                      name="fiscal_year_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[fiscal_year_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry_FINAL]"
                      name="industry_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[industry_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date_FINAL]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date_FINAL]"
                      name="issue_date_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[issue_date_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category_FINAL]"
                      name="mwbe_category_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[mwbe_category_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name_FINAL]"
                      name="payee_name_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[payee_name_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category_FINAL]"
                      name="spending_category_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[spending_category_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]"
                      name="sub_contract_reference_id_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_reference_id_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]"
                      name="sub_vendor_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_vendor_FINAL]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Replace any column that is &quot;-&quot; with NULL"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        try
        {
            Row.agency = (Row.agency == "-" ? null : Row.agency);
            Row.associatedprimevendor = (Row.associatedprimevendor == "-" ? null : Row.associatedprimevendor);
            Row.capitalproject = (Row.capitalproject == "-" ? null : Row.capitalproject);
            Row.contractid = (Row.contractid == "-" ? null : Row.contractid);
            Row.contractpurpose = (Row.contractpurpose == "-" ? null : Row.contractpurpose);
            Row.department = (Row.department == "-" ? null : Row.department);
            Row.documentid = (Row.documentid == "-" ? null : Row.documentid);
            Row.expensecategory = (Row.expensecategory == "-" ? null : Row.expensecategory);
            Row.industry = (Row.industry == "-" ? null : Row.industry);
            Row.mwbecategory = (Row.mwbecategory == "-" ? null : Row.mwbecategory);
            Row.payeename = (Row.payeename == "-" ? null : Row.payeename);
            Row.spendingcategory = (Row.spendingcategory == "-" ? null : Row.spendingcategory);
            Row.subcontractreferenceid = (Row.subcontractreferenceid == "-" ? null : Row.subcontractreferenceid);
            Row.subvendor = (Row.subvendor == "-" ? null : Row.subvendor);
        }
        catch (Exception ex)
        {
            Row.agency = "ERROR";
            Row.associatedprimevendor = "ERROR";
            Row.capitalproject = "ERROR";
            Row.contractid = "ERROR";
            Row.contractpurpose = "ERROR";
            Row.department = "ERROR";
            Row.documentid = "ERROR";
            Row.expensecategory = "ERROR";
            Row.industry = "ERROR";
            Row.mwbecategory = "ERROR";
            Row.payeename = "ERROR";
            Row.spendingcategory = "ERROR";
            Row.subcontractreferenceid = "ERROR";
            Row.subvendor = "ERROR";
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String agency
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool agency_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String associatedprimevendor
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool associatedprimevendor_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String capitalproject
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool capitalproject_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String contractid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
        set
        {
            this[4] = value;
        }
    }
    public bool contractid_IsNull
    {
        get
        {
            return IsNull(4);
        }
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String contractpurpose
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
        set
        {
            this[5] = value;
        }
    }
    public bool contractpurpose_IsNull
    {
        get
        {
            return IsNull(5);
        }
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal checkamount
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[6]);
        }
        set
        {
            this[6] = value;
        }
    }
    public bool checkamount_IsNull
    {
        get
        {
            return IsNull(6);
        }
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String department
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
        set
        {
            this[7] = value;
        }
    }
    public bool department_IsNull
    {
        get
        {
            return IsNull(7);
        }
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String documentid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
        set
        {
            this[8] = value;
        }
    }
    public bool documentid_IsNull
    {
        get
        {
            return IsNull(8);
        }
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String expensecategory
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
        set
        {
            this[9] = value;
        }
    }
    public bool expensecategory_IsNull
    {
        get
        {
            return IsNull(9);
        }
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 fiscalyear
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[10]);
        }
        set
        {
            this[10] = value;
        }
    }
    public bool fiscalyear_IsNull
    {
        get
        {
            return IsNull(10);
        }
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String industry
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
        set
        {
            this[11] = value;
        }
    }
    public bool industry_IsNull
    {
        get
        {
            return IsNull(11);
        }
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime issuedate
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[12]);
        }
        set
        {
            this[12] = value;
        }
    }
    public bool issuedate_IsNull
    {
        get
        {
            return IsNull(12);
        }
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String mwbecategory
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
        set
        {
            this[13] = value;
        }
    }
    public bool mwbecategory_IsNull
    {
        get
        {
            return IsNull(13);
        }
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String payeename
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
        set
        {
            this[14] = value;
        }
    }
    public bool payeename_IsNull
    {
        get
        {
            return IsNull(14);
        }
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String spendingcategory
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
        set
        {
            this[15] = value;
        }
    }
    public bool spendingcategory_IsNull
    {
        get
        {
            return IsNull(15);
        }
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subcontractreferenceid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[16]);
        }
        set
        {
            this[16] = value;
        }
    }
    public bool subcontractreferenceid_IsNull
    {
        get
        {
            return IsNull(16);
        }
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subvendor
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[17]);
        }
        set
        {
            this[17] = value;
        }
    }
    public bool subvendor_IsNull
    {
        get
        {
            return IsNull(17);
        }
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 StagingIDFINAL
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[18]);
        }
    }
    public bool StagingIDFINAL_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public String agencyFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[19]);
        }
    }
    public bool agencyFINAL_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public String associatedprimevendorFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[20]);
        }
    }
    public bool associatedprimevendorFINAL_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public String capitalprojectFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[21]);
        }
    }
    public bool capitalprojectFINAL_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public String contractidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[22]);
        }
    }
    public bool contractidFINAL_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public String contractpurposeFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[23]);
        }
    }
    public bool contractpurposeFINAL_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    public Decimal checkamountFINAL
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[24]);
        }
    }
    public bool checkamountFINAL_IsNull
    {
        get
        {
            return IsNull(24);
        }
    }

    public String departmentFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[25]);
        }
    }
    public bool departmentFINAL_IsNull
    {
        get
        {
            return IsNull(25);
        }
    }

    public String documentidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[26]);
        }
    }
    public bool documentidFINAL_IsNull
    {
        get
        {
            return IsNull(26);
        }
    }

    public String expensecategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[27]);
        }
    }
    public bool expensecategoryFINAL_IsNull
    {
        get
        {
            return IsNull(27);
        }
    }

    public Int32 fiscalyearFINAL
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[28]);
        }
    }
    public bool fiscalyearFINAL_IsNull
    {
        get
        {
            return IsNull(28);
        }
    }

    public String industryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[29]);
        }
    }
    public bool industryFINAL_IsNull
    {
        get
        {
            return IsNull(29);
        }
    }

    public DateTime issuedateFINAL
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[30]);
        }
    }
    public bool issuedateFINAL_IsNull
    {
        get
        {
            return IsNull(30);
        }
    }

    public String mwbecategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[31]);
        }
    }
    public bool mwbecategoryFINAL_IsNull
    {
        get
        {
            return IsNull(31);
        }
    }

    public String payeenameFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[32]);
        }
    }
    public bool payeenameFINAL_IsNull
    {
        get
        {
            return IsNull(32);
        }
    }

    public String spendingcategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[33]);
        }
    }
    public bool spendingcategoryFINAL_IsNull
    {
        get
        {
            return IsNull(33);
        }
    }

    public String subcontractreferenceidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[34]);
        }
    }
    public bool subcontractreferenceidFINAL_IsNull
    {
        get
        {
            return IsNull(34);
        }
    }

    public String subvendorFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[35]);
        }
    }
    public bool subvendorFINAL_IsNull
    {
        get
        {
            return IsNull(35);
        }
    }

    public DateTime LastUpdatedTimestampDerived
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[36]);
        }
    }
    public bool LastUpdatedTimestampDerived_IsNull
    {
        get
        {
            return IsNull(36);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a653ed6b2323468986cb6b49af9d1cf0.Properties.Settings.get_Default():SC_a653ed6b2323468986cb6b49af9d1cf0.Properties.Sett" +
    "ings")]

namespace SC_a653ed6b2323468986cb6b49af9d1cf0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a653ed6b2323468986cb6b49af9d1cf0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a653ed6b2323468986cb6b49af9d1cf0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a653ed6b2323468986cb6b49af9d1cf0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a653ed6b2323468986cb6b49af9d1cf0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a653ed6b2323468986cb6b49af9d1cf0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_a653ed6b2323468986cb6b49af9d1cf0</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_a653ed6b2323468986cb6b49af9d1cf0</msb:DisplayName>
		<msb:ProjectId>{7C9E3A3C-3297-4FC7-B0C7-C1C2077BE204}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_a653ed6b2323468986cb6b49af9d1cf0.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a653ed6b2323468986cb6b49af9d1cf0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_a653ed6b2323468986cb6b49af9d1cf0")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a653ed6b2323468986cb6b49af9d1cf0.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{51bb80d1-8ec5-48c2-ad25-05f4682b0a38}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a653ed6b2323468986cb6b49af9d1cf0</RootNamespace>
    <AssemblyName>SC_a653ed6b2323468986cb6b49af9d1cf0</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_a653ed6b2323468986cb6b49af9d1cf0" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a653ed6b2323468986cb6b49af9d1cf0.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHUFEV8AAAAAAAAAAOAAAiELAQsAADYAAAAIAAAAAAAAXlUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAARVAABXAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZDUAAAAgAAAANgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAA4AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
VQAAAAAAAEgAAAACAAUAoCsAAGQpAAABAAAAAAAAAOgqAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnN4AAAGfQEAAAQCAnN5AAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDb3YAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioAAAswAwBxAgAAAAAAAAMDbwwAAAZyEQAAcCgTAAAKLQgDbwwAAAYrARRv
DQAABgMDbxAAAAZyEQAAcCgTAAAKLQgDbxAAAAYrARRvEQAABgMDbxQAAAZyEQAAcCgTAAAKLQgD
bxQAAAYrARRvFQAABgMDbxgAAAZyEQAAcCgTAAAKLQgDbxgAAAYrARRvGQAABgMDbxwAAAZyEQAA
cCgTAAAKLQgDbxwAAAYrARRvHQAABgMDbyQAAAZyEQAAcCgTAAAKLQgDbyQAAAYrARRvJQAABgMD
bygAAAZyEQAAcCgTAAAKLQgDbygAAAYrARRvKQAABgMDbywAAAZyEQAAcCgTAAAKLQgDbywAAAYr
ARRvLQAABgMDbzQAAAZyEQAAcCgTAAAKLQgDbzQAAAYrARRvNQAABgMDbzwAAAZyEQAAcCgTAAAK
LQgDbzwAAAYrARRvPQAABgMDb0AAAAZyEQAAcCgTAAAKLQgDb0AAAAYrARRvQQAABgMDb0QAAAZy
EQAAcCgTAAAKLQgDb0QAAAYrARRvRQAABgMDb0gAAAZyEQAAcCgTAAAKLQgDb0gAAAYrARRvSQAA
BgMDb0wAAAZyEQAAcCgTAAAKLQgDb0wAAAYrARRvTQAABt2dAAAAJgNyFQAAcG8NAAAGA3IVAABw
bxEAAAYDchUAAHBvFQAABgNyFQAAcG8ZAAAGA3IVAABwbx0AAAYDchUAAHBvJQAABgNyFQAAcG8p
AAAGA3IVAABwby0AAAYDchUAAHBvNQAABgNyFQAAcG89AAAGA3IVAABwb0EAAAYDchUAAHBvRQAA
BgNyFQAAcG9JAAAGA3IVAABwb00AAAbeACoAAABBHAAAAAAAAAAAAADTAQAA0wEAAJ0AAAAaAAAB
HgIoAQAABioqAgMEBSgUAAAKKlICexUAAAoCexYAAAoWlG8XAAAKKiICFigYAAAKKlICexUAAAoC
exYAAAoXlG8ZAAAKKiYCFwMoGgAACioiAhcoGAAACipaAywIAhcoGwAACipyIQAAcHMcAAAKelIC
exUAAAoCexYAAAoYlG8ZAAAKKiYCGAMoGgAACioiAhgoGAAACipaAywIAhgoGwAACipyIQAAcHMc
AAAKelICexUAAAoCexYAAAoZlG8ZAAAKKiYCGQMoGgAACioiAhkoGAAACipaAywIAhkoGwAACipy
IQAAcHMcAAAKelICexUAAAoCexYAAAoalG8ZAAAKKiYCGgMoGgAACioiAhooGAAACipaAywIAhoo
GwAACipyIQAAcHMcAAAKelICexUAAAoCexYAAAoblG8ZAAAKKiYCGwMoGgAACioiAhsoGAAACipa
AywIAhsoGwAACipyIQAAcHMcAAAKelICexUAAAoCexYAAAoclG8dAAAKKjoCHAOMBwAAASgaAAAK
KiICHCgYAAAKKloDLAgCHCgbAAAKKnIhAABwcxwAAAp6UgJ7FQAACgJ7FgAACh2UbxkAAAoqJgId
AygaAAAKKiICHSgYAAAKKloDLAgCHSgbAAAKKnIhAABwcxwAAAp6UgJ7FQAACgJ7FgAACh6UbxkA
AAoqJgIeAygaAAAKKiICHigYAAAKKloDLAgCHigbAAAKKnIhAABwcxwAAAp6VgJ7FQAACgJ7FgAA
Ch8JlG8ZAAAKKioCHwkDKBoAAAoqJgIfCSgYAAAKKl4DLAkCHwkoGwAACipyIQAAcHMcAAAKelYC
exUAAAoCexYAAAofCpRvFwAACio+Ah8KA4wcAAABKBoAAAoqJgIfCigYAAAKKl4DLAkCHwooGwAA
CipyIQAAcHMcAAAKelYCexUAAAoCexYAAAofC5RvGQAACioqAh8LAygaAAAKKiYCHwsoGAAACipe
AywJAh8LKBsAAAoqciEAAHBzHAAACnpWAnsVAAAKAnsWAAAKHwyUbx4AAAoqPgIfDAOMCAAAASga
AAAKKiYCHwwoGAAACipeAywJAh8MKBsAAAoqciEAAHBzHAAACnpWAnsVAAAKAnsWAAAKHw2UbxkA
AAoqKgIfDQMoGgAACiomAh8NKBgAAAoqXgMsCQIfDSgbAAAKKnIhAABwcxwAAAp6VgJ7FQAACgJ7
FgAACh8OlG8ZAAAKKioCHw4DKBoAAAoqJgIfDigYAAAKKl4DLAkCHw4oGwAACipyIQAAcHMcAAAK
elYCexUAAAoCexYAAAofD5RvGQAACioqAh8PAygaAAAKKiYCHw8oGAAACipeAywJAh8PKBsAAAoq
ciEAAHBzHAAACnpWAnsVAAAKAnsWAAAKHxCUbxkAAAoqKgIfEAMoGgAACiomAh8QKBgAAAoqXgMs
CQIfECgbAAAKKnIhAABwcxwAAAp6VgJ7FQAACgJ7FgAACh8RlG8ZAAAKKioCHxEDKBoAAAoqJgIf
ESgYAAAKKl4DLAkCHxEoGwAACipyIQAAcHMcAAAKelYCexUAAAoCexYAAAofEpRvFwAACiomAh8S
KBgAAAoqVgJ7FQAACgJ7FgAACh8TlG8ZAAAKKiYCHxMoGAAACipWAnsVAAAKAnsWAAAKHxSUbxkA
AAoqJgIfFCgYAAAKKlYCexUAAAoCexYAAAofFZRvGQAACiomAh8VKBgAAAoqVgJ7FQAACgJ7FgAA
Ch8WlG8ZAAAKKiYCHxYoGAAACipWAnsVAAAKAnsWAAAKHxeUbxkAAAoqJgIfFygYAAAKKlYCexUA
AAoCexYAAAofGJRvHQAACiomAh8YKBgAAAoqVgJ7FQAACgJ7FgAACh8ZlG8ZAAAKKiYCHxkoGAAA
CipWAnsVAAAKAnsWAAAKHxqUbxkAAAoqJgIfGigYAAAKKlYCexUAAAoCexYAAAofG5RvGQAACiom
Ah8bKBgAAAoqVgJ7FQAACgJ7FgAACh8clG8XAAAKKiYCHxwoGAAACipWAnsVAAAKAnsWAAAKHx2U
bxkAAAoqJgIfHSgYAAAKKlYCexUAAAoCexYAAAofHpRvHgAACiomAh8eKBgAAAoqVgJ7FQAACgJ7
FgAACh8flG8ZAAAKKiYCHx8oGAAACipWAnsVAAAKAnsWAAAKHyCUbxkAAAoqJgIfICgYAAAKKlYC
exUAAAoCexYAAAofIZRvGQAACiomAh8hKBgAAAoqVgJ7FQAACgJ7FgAACh8ilG8ZAAAKKiYCHyIo
GAAACipWAnsVAAAKAnsWAAAKHyOUbxkAAAoqJgIfIygYAAAKKlYCexUAAAoCexYAAAofJJRvHwAA
CiomAh8kKBgAAAoqHgIoIAAACioeAighAAAKKjoCKCIAAAoCA30DAAAEKjoCKCIAAAoCA30EAAAE
Kh4CKCIAAAoqAAAAEzACAC0AAAABAAARfgUAAAQtIHK+AABw0AcAAAIoJAAACm8lAAAKcyYAAAoK
BoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKi5zfwAABoAHAAAEKh4CKCkAAAoqALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAkEAAAI34AAJAQ
AAC0FQAAI1N0cmluZ3MAAAAARCYAADABAAAjVVMAdCcAABAAAAAjR1VJRAAAAIQnAADgAQAAI0Js
b2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAABAAAAIwAAAAgAAAAHAAAAgAAAAC8AAAApAAAA
DwAAAAEAAAADAAAATQAAAHAAAAABAAAABAAAAAEAAAAAAAoAAQAAAAAABgDuAM0ABgD+AM0ACgAb
ARQBDgA3ASIBEgB2Ac0ABgCFAc0ACgCpAxQBCgB9BRQBCgAhERARCgBSET0RCgArEhESCgBWEkQS
CgBtEkQSCgCKEkQSCgCpEkQSCgDCEkQSCgDbEkQSCgD2EkQSCgARE0QSCgAqE0QSCgBjE0MTCgCD
E0MTCgDFExQBCgDMExQBBgD1E80ACgAoFBQBCgBdFBQBCgCCFBQBCgCvFJwUCgDMFBQBCgDRFBQB
CgD1FEQSDgAhFQsVDgA6FQsVCgBPFUMTAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABA
AAAACAADAAUAAQAQAEsAAAAJAAMACQABABAAWAAAAA0AAwB4AAEAEABkAAAADQAEAHkAAAAQAG4A
eAANAAUAegAAARAApwB4ABEABwB+AAYAWAATAAYAZAAXAAEAABGAAAEAABGAABEAMRGKABEAXhGO
ABEAohGsAFAgAAAAAIYYTwEbAAEAcCAAAAAAxgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYB
tAEpAAYAqiAAAAAAxgDLARsABwCyIAAAAADGANYBGwAHALwgAAAAAMYAtAEpAAcAWCMAAAAAhhhP
ARsACABgIwAAAACGGE8BLwAIAGsjAAAAAIYI4gE5AAsAgCMAAAAAhgjpAT0ACwCJIwAAAACGCPcB
QQALAJ4jAAAAAIYIAgJFAAsAqCMAAAAAhggNAj0ADACxIwAAAACGCB8CSgAMAMgjAAAAAIYIMQJB
AA0A3SMAAAAAhghLAkUADQDnIwAAAACGCGUCPQAOAPAjAAAAAIYIhgJKAA4AByQAAAAAhginAkEA
DwAcJAAAAACGCLoCRQAPACYkAAAAAIYIzQI9ABAALyQAAAAAhgjnAkoAEABGJAAAAACGCAEDQQAR
AFskAAAAAIYIEANFABEAZSQAAAAAhggfAz0AEgBuJAAAAACGCDUDSgASAIUkAAAAAIYISwNBABMA
miQAAAAAhghfA0UAEwCkJAAAAACGCHMDPQAUAK0kAAAAAIYIjgNKABQAxCQAAAAAhgixA08AFQDZ
JAAAAACGCMEDVAAVAOgkAAAAAIYI0QM9ABYA8SQAAAAAhgjoA0oAFgAIJQAAAACGCP8DQQAXAB0l
AAAAAIYIDgRFABcAJyUAAAAAhggdBD0AGAAwJQAAAACGCDMESgAYAEclAAAAAIYISQRBABkAXCUA
AAAAhghYBEUAGQBmJQAAAACGCGcEPQAaAG8lAAAAAIYIfQRKABoAhiUAAAAAhgiTBEEAGwCcJQAA
AACGCKcERQAbAKclAAAAAIYIuwQ9ABwAsSUAAAAAhgjWBEoAHADJJQAAAACGCPEEOQAdAN8lAAAA
AIYIAAVaAB0A7yUAAAAAhggPBT0AHgD5JQAAAACGCCUFSgAeABEmAAAAAIYIOwVBAB8AJyYAAAAA
hghIBUUAHwAyJgAAAACGCFUFPQAgADwmAAAAAIYIaQVKACAAVCYAAAAAhgiGBV8AIQBqJgAAAACG
CJQFZAAhAHomAAAAAIYIogU9ACIAhCYAAAAAhgi3BUoAIgCcJgAAAACGCMwFQQAjALImAAAAAIYI
3QVFACMAvSYAAAAAhgjuBT0AJADHJgAAAACGCAYGSgAkAN8mAAAAAIYIHgZBACUA9SYAAAAAhggs
BkUAJQAAJwAAAACGCDoGPQAmAAonAAAAAIYITwZKACYAIicAAAAAhghkBkEAJwA4JwAAAACGCHkG
RQAnAEMnAAAAAIYIjgY9ACgATScAAAAAhgiqBkoAKABlJwAAAACGCMYGQQApAHsnAAAAAIYI4QZF
ACkAhicAAAAAhgj8Bj0AKgCQJwAAAACGCB4HSgAqAKgnAAAAAIYIQAdBACsAvicAAAAAhghOB0UA
KwDJJwAAAACGCFwHPQAsANMnAAAAAIYIcQdKACwA6ycAAAAAhgiGBzkALQABKAAAAACGCJkHPQAt
AAsoAAAAAIYIswdBAC0AISgAAAAAhgjDBz0ALQArKAAAAACGCNoHQQAtAEEoAAAAAIYI+Qc9AC0A
SygAAAAAhggfCEEALQBhKAAAAACGCDcIPQAtAGsoAAAAAIYIVghBAC0AgSgAAAAAhghqCD0ALQCL
KAAAAACGCIUIQQAtAKEoAAAAAIYIngg9AC0AqygAAAAAhgi+CE8ALQDBKAAAAACGCNMIPQAtAMso
AAAAAIYI7whBAC0A4SgAAAAAhggDCT0ALQDrKAAAAACGCB4JQQAtAAEpAAAAAIYIMgk9AC0ACykA
AAAAhghNCUEALQAhKQAAAACGCGYJPQAtACspAAAAAIYIhgk5AC0AQSkAAAAAhgiaCT0ALQBLKQAA
AACGCLUJQQAtAGEpAAAAAIYIxwk9AC0AaykAAAAAhgjgCV8ALQCBKQAAAACGCPMJPQAtAIspAAAA
AIYIDQpBAC0AoSkAAAAAhggjCj0ALQCrKQAAAACGCEAKQQAtAMEpAAAAAIYIUwo9AC0AyykAAAAA
hghtCkEALQDhKQAAAACGCIcKPQAtAOspAAAAAIYIqApBAC0AASoAAAAAhgjICj0ALQALKgAAAACG
CO8KQQAtACEqAAAAAIYIAgs9AC0AKyoAAAAAhggcC18ALQBBKgAAAACGCDwLPQAtAEsqAAAAAIYA
Yws9AC0AUyoAAAAAhgBrCz0ALQBbKgAAAACGGE8BhAAtAGoqAAAAAIYYTwGEAC4AeSoAAAAAgxhP
ARsALwCEKgAAAACTCG4RkgAvAL0qAAAAAJMIghGXAC8AxCoAAAAAkwiOEZwALwDMKgAAAACWCLIR
sAAwAN8qAAAAAIYYTwEbADAA0yoAAAAAkRhqFSUBMAAAAAEAxhEAAAIAzhEAAAMA2BEAAAQA3xEA
AAEA2BEAAAEA6REAAAEA6REAAAEA2BEAAAIA7REAAAMA3xEAAAEAARIAAAEAARIAAAEAARIAAAEA
ARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIA
AAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEA
ARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIA
AAEAARIAAAEAARIAAAEABxIAAAEABxIAAAEAARJZAE8BRQBhAE8BRQBpAE8BRQBxAE8BRQB5AE8B
RQCBAE8BRQCJAE8BRQCRAE8BRQCZAE8BRQChAE8BRQCpAE8BWgCxAE8BGwAJAE8BGwC5AN0TugAJ
AOQTwQDJAE8BGwAJAMsBGwAJANYBGwC5ABwUzAARAE8BLwARANgR0gARAO0R1gApADIU2gARADsU
3wApAEIU5AARAEwU6QARAFUUWgDZAE8BRQApAHcU7wApAIgU9QApAJAU9QARAGMLPQARAGsLPQAZ
AE8BGwDpAE8BGwDxAOMU+wDxAP4UAgFJAE8BCAEJAU8BFQEZAU8BGwAhAE8BGwAuABsAmgEuAGMA
wAEuAAsAKQEuABMAcQEuACMAmgEuACsAmgEuADMAcQEuADsAoAEuAEMAmgEuAFsAtwFjAIMAxwDh
AEMBxwDjABsBxwBpCTsBHAGJCTsBHAEQAQQAAQAHAEsACABNAAAAdwtqAAAAegtuAAAAhAtyAAAA
iwtuAAAAmQtyAAAArwtuAAAAzAtyAAAA2wtuAAAA8QtyAAAA/AtuAAAADgxyAAAAHgxuAAAANQx2
AAAAQQxuAAAAVAxyAAAAXwxuAAAAcQxyAAAAfAxuAAAAjgxyAAAAngxuAAAAtQxqAAAAwAxuAAAA
0gxyAAAA2wxuAAAA6wx7AAAA9QxuAAAABg1yAAAAEw1uAAAAJw1yAAAAMQ1uAAAAQg1yAAAAUw1u
AAAAaw1yAAAAgg1uAAAAoA1yAAAAqg1uAAAAuw1qAAAAyg1uAAAA4A1yAAAA7A1uAAAA/w1yAAAA
Gg5uAAAAPA5yAAAAUA5uAAAAaw5yAAAAew5uAAAAkg5yAAAApw5uAAAAww52AAAA1A5uAAAA7A5y
AAAA/A5uAAAAEw9yAAAAIw9uAAAAOg9yAAAATw9uAAAAaw9qAAAAew9uAAAAkg9yAAAAoA9uAAAA
tQ97AAAAxA9uAAAA2g9yAAAA7A9uAAAABRByAAAAFBBuAAAAKhByAAAAQBBuAAAAXRByAAAAeRBu
AAAAnBByAAAAqxBuAAAAwRB7AAAA3RBuAAAAIRGiAAAAmhGnAAAAvhG1AAIACgADAAIACwAFAAIA
DAAHAAEADQAHAAEADwAJAAIADgAJAAIAEAALAAEAEQALAAIAEgANAAEAEwANAAIAFAAPAAEAFQAP
AAIAFgARAAEAFwARAAEAGQATAAIAGAATAAIAGgAVAAEAGwAVAAEAHQAXAAIAHAAXAAIAHgAZAAEA
HwAZAAIAIAAbAAEAIQAbAAIAIgAdAAEAIwAdAAIAJAAfAAEAJQAfAAEAJwAhAAIAJgAhAAIAKAAj
AAEAKQAjAAEAKwAlAAIAKgAlAAIALAAnAAEALQAnAAIALgApAAEALwApAAIAMAArAAEAMQArAAIA
MgAtAAEAMwAtAAEANQAvAAIANAAvAAIANgAxAAEANwAxAAEAOQAzAAIAOAAzAAIAOgA1AAEAOwA1
AAIAPAA3AAEAPQA3AAIAPgA5AAEAPwA5AAEAQQA7AAIAQAA7AAEAQwA9AAIAQgA9AAIARAA/AAEA
RQA/AAEARwBBAAIARgBBAAIASABDAAEASQBDAAIASgBFAAEASwBFAAIATABHAAEATQBHAAIATgBJ
AAEATwBJAAIAUABLAAIAUQBNAAIAUgBPAAIAUwBRAAIAVABTAAIAVQBVAAIAVgBXAAIAVwBZAAIA
WABbAAIAWQBdAAIAWgBfAAIAWwBhAAIAXABjAAIAXQBlAAIAXgBnAAIAXwBpAAIAYABrAAIAYQBt
AAIAYgBvAAIAYwBxAAIAZABzAAIAZQB1AAIAZgB3AAIAZwB5AAIAaAB7AAIAaQB9AAIAagB/AAIA
awCBAAIAbACDAAIAbQCFAAIAbgCHAAIAbwCJAAIAcACLAAIAcQCNAAIAcgCPAAIAcwCRAAIAdACT
AAIAdQCVAAIAewCXAAIAfACZAAEAfQCZAAIAfgCbAASAAAABAAAATh1SkwAAAAAAAKETAAAMAAAA
AAAAAAAAAAABALAAAAAAAAQAAAAAAAAAAAAAAAoACwEAAAAABAAAAAAAAAAAAAAACgAUAQAAAAAM
AAAAAAAAAAAAAAABAFUBAAAAAAAAAAABAAAAcRUAAAAAADxNb2R1bGU+AFNDX2E2NTNlZDZiMjMy
MzQ2ODk4NmNiNmI0OWFmOWQxY2YwLmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4ASW5wdXQw
QnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfYTY1M2VkNmIyMzIzNDY4
OTg2Y2I2YjQ5YWY5ZDFjZjAuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVy
LlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBvbmVu
dABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlv
bgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVs
aW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1dDBf
UHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQBnZXRfSUQAZ2V0X0lEX0lzTnVsbABnZXRfYWdlbmN5AHNldF9hZ2VuY3kAZ2V0X2FnZW5jeV9J
c051bGwAc2V0X2FnZW5jeV9Jc051bGwAZ2V0X2Fzc29jaWF0ZWRwcmltZXZlbmRvcgBzZXRfYXNz
b2NpYXRlZHByaW1ldmVuZG9yAGdldF9hc3NvY2lhdGVkcHJpbWV2ZW5kb3JfSXNOdWxsAHNldF9h
c3NvY2lhdGVkcHJpbWV2ZW5kb3JfSXNOdWxsAGdldF9jYXBpdGFscHJvamVjdABzZXRfY2FwaXRh
bHByb2plY3QAZ2V0X2NhcGl0YWxwcm9qZWN0X0lzTnVsbABzZXRfY2FwaXRhbHByb2plY3RfSXNO
dWxsAGdldF9jb250cmFjdGlkAHNldF9jb250cmFjdGlkAGdldF9jb250cmFjdGlkX0lzTnVsbABz
ZXRfY29udHJhY3RpZF9Jc051bGwAZ2V0X2NvbnRyYWN0cHVycG9zZQBzZXRfY29udHJhY3RwdXJw
b3NlAGdldF9jb250cmFjdHB1cnBvc2VfSXNOdWxsAHNldF9jb250cmFjdHB1cnBvc2VfSXNOdWxs
AERlY2ltYWwAZ2V0X2NoZWNrYW1vdW50AHNldF9jaGVja2Ftb3VudABnZXRfY2hlY2thbW91bnRf
SXNOdWxsAHNldF9jaGVja2Ftb3VudF9Jc051bGwAZ2V0X2RlcGFydG1lbnQAc2V0X2RlcGFydG1l
bnQAZ2V0X2RlcGFydG1lbnRfSXNOdWxsAHNldF9kZXBhcnRtZW50X0lzTnVsbABnZXRfZG9jdW1l
bnRpZABzZXRfZG9jdW1lbnRpZABnZXRfZG9jdW1lbnRpZF9Jc051bGwAc2V0X2RvY3VtZW50aWRf
SXNOdWxsAGdldF9leHBlbnNlY2F0ZWdvcnkAc2V0X2V4cGVuc2VjYXRlZ29yeQBnZXRfZXhwZW5z
ZWNhdGVnb3J5X0lzTnVsbABzZXRfZXhwZW5zZWNhdGVnb3J5X0lzTnVsbABnZXRfZmlzY2FseWVh
cgBzZXRfZmlzY2FseWVhcgBnZXRfZmlzY2FseWVhcl9Jc051bGwAc2V0X2Zpc2NhbHllYXJfSXNO
dWxsAGdldF9pbmR1c3RyeQBzZXRfaW5kdXN0cnkAZ2V0X2luZHVzdHJ5X0lzTnVsbABzZXRfaW5k
dXN0cnlfSXNOdWxsAERhdGVUaW1lAGdldF9pc3N1ZWRhdGUAc2V0X2lzc3VlZGF0ZQBnZXRfaXNz
dWVkYXRlX0lzTnVsbABzZXRfaXNzdWVkYXRlX0lzTnVsbABnZXRfbXdiZWNhdGVnb3J5AHNldF9t
d2JlY2F0ZWdvcnkAZ2V0X213YmVjYXRlZ29yeV9Jc051bGwAc2V0X213YmVjYXRlZ29yeV9Jc051
bGwAZ2V0X3BheWVlbmFtZQBzZXRfcGF5ZWVuYW1lAGdldF9wYXllZW5hbWVfSXNOdWxsAHNldF9w
YXllZW5hbWVfSXNOdWxsAGdldF9zcGVuZGluZ2NhdGVnb3J5AHNldF9zcGVuZGluZ2NhdGVnb3J5
AGdldF9zcGVuZGluZ2NhdGVnb3J5X0lzTnVsbABzZXRfc3BlbmRpbmdjYXRlZ29yeV9Jc051bGwA
Z2V0X3N1YmNvbnRyYWN0cmVmZXJlbmNlaWQAc2V0X3N1YmNvbnRyYWN0cmVmZXJlbmNlaWQAZ2V0
X3N1YmNvbnRyYWN0cmVmZXJlbmNlaWRfSXNOdWxsAHNldF9zdWJjb250cmFjdHJlZmVyZW5jZWlk
X0lzTnVsbABnZXRfc3VidmVuZG9yAHNldF9zdWJ2ZW5kb3IAZ2V0X3N1YnZlbmRvcl9Jc051bGwA
c2V0X3N1YnZlbmRvcl9Jc051bGwAZ2V0X1N0YWdpbmdJREZJTkFMAGdldF9TdGFnaW5nSURGSU5B
TF9Jc051bGwAZ2V0X2FnZW5jeUZJTkFMAGdldF9hZ2VuY3lGSU5BTF9Jc051bGwAZ2V0X2Fzc29j
aWF0ZWRwcmltZXZlbmRvckZJTkFMAGdldF9hc3NvY2lhdGVkcHJpbWV2ZW5kb3JGSU5BTF9Jc051
bGwAZ2V0X2NhcGl0YWxwcm9qZWN0RklOQUwAZ2V0X2NhcGl0YWxwcm9qZWN0RklOQUxfSXNOdWxs
AGdldF9jb250cmFjdGlkRklOQUwAZ2V0X2NvbnRyYWN0aWRGSU5BTF9Jc051bGwAZ2V0X2NvbnRy
YWN0cHVycG9zZUZJTkFMAGdldF9jb250cmFjdHB1cnBvc2VGSU5BTF9Jc051bGwAZ2V0X2NoZWNr
YW1vdW50RklOQUwAZ2V0X2NoZWNrYW1vdW50RklOQUxfSXNOdWxsAGdldF9kZXBhcnRtZW50RklO
QUwAZ2V0X2RlcGFydG1lbnRGSU5BTF9Jc051bGwAZ2V0X2RvY3VtZW50aWRGSU5BTABnZXRfZG9j
dW1lbnRpZEZJTkFMX0lzTnVsbABnZXRfZXhwZW5zZWNhdGVnb3J5RklOQUwAZ2V0X2V4cGVuc2Vj
YXRlZ29yeUZJTkFMX0lzTnVsbABnZXRfZmlzY2FseWVhckZJTkFMAGdldF9maXNjYWx5ZWFyRklO
QUxfSXNOdWxsAGdldF9pbmR1c3RyeUZJTkFMAGdldF9pbmR1c3RyeUZJTkFMX0lzTnVsbABnZXRf
aXNzdWVkYXRlRklOQUwAZ2V0X2lzc3VlZGF0ZUZJTkFMX0lzTnVsbABnZXRfbXdiZWNhdGVnb3J5
RklOQUwAZ2V0X213YmVjYXRlZ29yeUZJTkFMX0lzTnVsbABnZXRfcGF5ZWVuYW1lRklOQUwAZ2V0
X3BheWVlbmFtZUZJTkFMX0lzTnVsbABnZXRfc3BlbmRpbmdjYXRlZ29yeUZJTkFMAGdldF9zcGVu
ZGluZ2NhdGVnb3J5RklOQUxfSXNOdWxsAGdldF9zdWJjb250cmFjdHJlZmVyZW5jZWlkRklOQUwA
Z2V0X3N1YmNvbnRyYWN0cmVmZXJlbmNlaWRGSU5BTF9Jc051bGwAZ2V0X3N1YnZlbmRvckZJTkFM
AGdldF9zdWJ2ZW5kb3JGSU5BTF9Jc051bGwAZ2V0X0xhc3RVcGRhdGVkVGltZXN0YW1wRGVyaXZl
ZABnZXRfTGFzdFVwZGF0ZWRUaW1lc3RhbXBEZXJpdmVkX0lzTnVsbABOZXh0Um93AEVuZE9mUm93
c2V0AElEAElEX0lzTnVsbABhZ2VuY3kAYWdlbmN5X0lzTnVsbABhc3NvY2lhdGVkcHJpbWV2ZW5k
b3IAYXNzb2NpYXRlZHByaW1ldmVuZG9yX0lzTnVsbABjYXBpdGFscHJvamVjdABjYXBpdGFscHJv
amVjdF9Jc051bGwAY29udHJhY3RpZABjb250cmFjdGlkX0lzTnVsbABjb250cmFjdHB1cnBvc2UA
Y29udHJhY3RwdXJwb3NlX0lzTnVsbABjaGVja2Ftb3VudABjaGVja2Ftb3VudF9Jc051bGwAZGVw
YXJ0bWVudABkZXBhcnRtZW50X0lzTnVsbABkb2N1bWVudGlkAGRvY3VtZW50aWRfSXNOdWxsAGV4
cGVuc2VjYXRlZ29yeQBleHBlbnNlY2F0ZWdvcnlfSXNOdWxsAGZpc2NhbHllYXIAZmlzY2FseWVh
cl9Jc051bGwAaW5kdXN0cnkAaW5kdXN0cnlfSXNOdWxsAGlzc3VlZGF0ZQBpc3N1ZWRhdGVfSXNO
dWxsAG13YmVjYXRlZ29yeQBtd2JlY2F0ZWdvcnlfSXNOdWxsAHBheWVlbmFtZQBwYXllZW5hbWVf
SXNOdWxsAHNwZW5kaW5nY2F0ZWdvcnkAc3BlbmRpbmdjYXRlZ29yeV9Jc051bGwAc3ViY29udHJh
Y3RyZWZlcmVuY2VpZABzdWJjb250cmFjdHJlZmVyZW5jZWlkX0lzTnVsbABzdWJ2ZW5kb3IAc3Vi
dmVuZG9yX0lzTnVsbABTdGFnaW5nSURGSU5BTABTdGFnaW5nSURGSU5BTF9Jc051bGwAYWdlbmN5
RklOQUwAYWdlbmN5RklOQUxfSXNOdWxsAGFzc29jaWF0ZWRwcmltZXZlbmRvckZJTkFMAGFzc29j
aWF0ZWRwcmltZXZlbmRvckZJTkFMX0lzTnVsbABjYXBpdGFscHJvamVjdEZJTkFMAGNhcGl0YWxw
cm9qZWN0RklOQUxfSXNOdWxsAGNvbnRyYWN0aWRGSU5BTABjb250cmFjdGlkRklOQUxfSXNOdWxs
AGNvbnRyYWN0cHVycG9zZUZJTkFMAGNvbnRyYWN0cHVycG9zZUZJTkFMX0lzTnVsbABjaGVja2Ft
b3VudEZJTkFMAGNoZWNrYW1vdW50RklOQUxfSXNOdWxsAGRlcGFydG1lbnRGSU5BTABkZXBhcnRt
ZW50RklOQUxfSXNOdWxsAGRvY3VtZW50aWRGSU5BTABkb2N1bWVudGlkRklOQUxfSXNOdWxsAGV4
cGVuc2VjYXRlZ29yeUZJTkFMAGV4cGVuc2VjYXRlZ29yeUZJTkFMX0lzTnVsbABmaXNjYWx5ZWFy
RklOQUwAZmlzY2FseWVhckZJTkFMX0lzTnVsbABpbmR1c3RyeUZJTkFMAGluZHVzdHJ5RklOQUxf
SXNOdWxsAGlzc3VlZGF0ZUZJTkFMAGlzc3VlZGF0ZUZJTkFMX0lzTnVsbABtd2JlY2F0ZWdvcnlG
SU5BTABtd2JlY2F0ZWdvcnlGSU5BTF9Jc051bGwAcGF5ZWVuYW1lRklOQUwAcGF5ZWVuYW1lRklO
QUxfSXNOdWxsAHNwZW5kaW5nY2F0ZWdvcnlGSU5BTABzcGVuZGluZ2NhdGVnb3J5RklOQUxfSXNO
dWxsAHN1YmNvbnRyYWN0cmVmZXJlbmNlaWRGSU5BTABzdWJjb250cmFjdHJlZmVyZW5jZWlkRklO
QUxfSXNOdWxsAHN1YnZlbmRvckZJTkFMAHN1YnZlbmRvckZJTkFMX0lzTnVsbABMYXN0VXBkYXRl
ZFRpbWVzdGFtcERlcml2ZWQATGFzdFVwZGF0ZWRUaW1lc3RhbXBEZXJpdmVkX0lzTnVsbABQYXJl
bnRDb21wb25lbnQAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4A
U3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNv
dXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFu
Y2UAZ2V0X0RlZmF1bHQARGVmYXVsdABJbnB1dElEAElucHV0TmFtZQBCdWZmZXIAT3V0cHV0TWFw
AFJvdwBCdWZmZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJp
YnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfYTY1M2VkNmIyMzIz
NDY4OTg2Y2I2YjQ5YWY5ZDFjZjAAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENv
bHVtbkluZGV4ZXMAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAb3BfRXF1
YWxpdHkARXhjZXB0aW9uAEdldEludDMyAElzTnVsbABHZXRTdHJpbmcAc2V0X0l0ZW0AU2V0TnVs
bABJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAEdldERlY2ltYWwASW50MzIAR2V0RGF0ZQBHZXRE
YXRlVGltZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBU
eXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3Nl
bWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ19hNjUz
ZWQ2YjIzMjM0Njg5ODZjYjZiNDlhZjlkMWNmMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMAAA9JAG4AcAB1AHQAIAAwAAADLQABC0UAUgBSAE8AUgAAgJtJAHMATgB1AGwAbAAgAHAAcgBv
AHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUA
LgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBt
AG4AIABpAG4AcwB0AGUAYQBkAC4AAHFTAEMAXwBhADYANQAzAGUAZAA2AGIAMgAzADIAMwA0ADYA
OAA5ADgANgBjAGIANgBiADQAOQBhAGYAOQBkADEAYwBmADAALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAAAKl6qN0jqpNr37NrwBpCXkACImEXc2AgMyRCLd6XFYZNOCJ
AwYSFAMGEhgDIAABCSAEAQgOEhUSGQUgAQESEAkgAwESFR0IEhkDIAAIAyAAAgMgAA4EIAEBDgQg
AQECBCAAER0FIAEBER0EIAEBCAQgABEhBSABAREhAygACAMoAAIDKAAOBCgAER0EKAARIQMGEgUF
IAEBEgUDBhIlAwYSKQQAABIlBAAAEikFAAEBEikECAASJQQIABIpAwYSIAQAABIgBAgAEiAGIAIC
DhFhBSABHQgIBAEAAAAFAAICDg4DBhIVAwYdCAQgAQgIBCABAggEIAEOCAUgAgEIHAUgAREdCAUg
AREhCAYAARJ5EX0FIAASgIEHIAIBDhKAgQQHARIlBiABARGAiQgBAAIAAAAAAAMAAAFHAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJh
bWV3b3JrIDQoAQAjU0NfYTY1M2VkNmIyMzIzNDY4OTg2Y2I2YjQ5YWY5ZDFjZjAAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAyMAAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhy
b3dzAQAsVQAAAAAAAAAAAABOVQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQFUAAAAAAAAAAAAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMAAAAAAAAA
AAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAFKT
Th0AAAEAUpNOHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBADAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAAAHAAJAAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBhADYANQAzAGUAZAA2AGIA
MgAzADIAMwA0ADYAOAA5ADgANgBjAGIANgBiADQAOQBhAGYAOQBkADEAYwBmADAAAABAAA8AAQBG
AGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA1ADAAMgAuADMANwA3ADEANAAAAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBhADYANQAzAGUAZAA2AGIAMgAz
ADIAMwA0ADYAOAA5ADgANgBjAGIANgBiADQAOQBhAGYAOQBkADEAYwBmADAALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIAMAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMA
XwBhADYANQAzAGUAZAA2AGIAMgAzADIAMwA0ADYAOAA5ADgANgBjAGIANgBiADQAOQBhAGYAOQBk
ADEAYwBmADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8A
YQA2ADUAMwBlAGQANgBiADIAMwAyADMANAA2ADgAOQA4ADYAYwBiADYAYgA0ADkAYQBmADkAZAAx
AGMAZgAwAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADUA
MAAyAC4AMwA3ADcAMQA0AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA3ADUAMAAyAC4AMwA3ADcAMQA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAGA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_a653ed6b2323468986cb6b49af9d1cf0</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">68d9f870c1ce8057fbf021ce5c1aaba3</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">ec6d828b7716cbbea0232e75c677d84cc05d255c</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[associated_prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[capital_project]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[check_amount]"
                      cachedDataType="cy"
                      cachedName="check_amount"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[department]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[document_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[expense_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[fiscal_year]"
                      cachedDataType="i4"
                      cachedName="fiscal_year"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[issue_date]"
                      cachedDataType="dbDate"
                      cachedName="issue_date"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[payee_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[spending_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[agency_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[associated_prime_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[capital_project_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[contract_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[contract_purpose_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[check_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="check_amount_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[department_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[document_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[expense_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[fiscal_year_FINAL]"
                      cachedDataType="i4"
                      cachedName="fiscal_year_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[industry_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[issue_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="issue_date_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[mwbe_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[payee_name_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[spending_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_reference_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Staging - Spending_Staging Sorted ASC"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Spending_Staging]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT
       [ID]
      ,[agency]
      ,[associated_prime_vendor]
      ,[capital_project]
      ,[contract_id]
      ,[contract_purpose]
      ,[check_amount]
      ,[department]
      ,[document_id]
      ,[expense_category]
      ,[fiscal_year]
      ,[industry]
      ,[issue_date]
      ,[mwbe_category]
      ,[payee_name]
      ,[spending_category]
      ,[sub_contract_reference_id]
      ,[sub_vendor]
  FROM [dbo].[Spending_Staging]
ORDER BY
     [ID] ASC</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output]"
                  isSorted="true"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[ID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[ID]"
                      name="ID"
                      sortKeyPosition="1"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[agency]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[agency]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[agency]"
                      name="agency"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[associated_prime_vendor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[associated_prime_vendor]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[associated_prime_vendor]"
                      name="associated_prime_vendor"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[capital_project]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[capital_project]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[capital_project]"
                      name="capital_project"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_id]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_id]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_id]"
                      name="contract_id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_purpose]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_purpose]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_purpose]"
                      name="contract_purpose"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[check_amount]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[check_amount]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[check_amount]"
                      name="check_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[department]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[department]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[department]"
                      name="department"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[document_id]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[document_id]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[document_id]"
                      name="document_id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[expense_category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[expense_category]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[expense_category]"
                      name="expense_category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[fiscal_year]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[fiscal_year]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[fiscal_year]"
                      name="fiscal_year"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[industry]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[industry]"
                      name="industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[issue_date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[issue_date]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[issue_date]"
                      name="issue_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[mwbe_category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[mwbe_category]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[mwbe_category]"
                      name="mwbe_category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[payee_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[payee_name]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[payee_name]"
                      name="payee_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[spending_category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[spending_category]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[spending_category]"
                      name="spending_category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_reference_id]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]"
                      name="sub_contract_reference_id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_vendor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_vendor]"
                      name="sub_vendor"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[agency]"
                      dataType="wstr"
                      length="255"
                      name="agency" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[associated_prime_vendor]"
                      dataType="wstr"
                      length="255"
                      name="associated_prime_vendor" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[capital_project]"
                      dataType="wstr"
                      length="255"
                      name="capital_project" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_id]"
                      dataType="wstr"
                      length="255"
                      name="contract_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_purpose]"
                      dataType="wstr"
                      length="255"
                      name="contract_purpose" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[check_amount]"
                      dataType="cy"
                      name="check_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[department]"
                      dataType="wstr"
                      length="255"
                      name="department" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[document_id]"
                      dataType="wstr"
                      length="255"
                      name="document_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[expense_category]"
                      dataType="wstr"
                      length="255"
                      name="expense_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[fiscal_year]"
                      dataType="i4"
                      name="fiscal_year" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[industry]"
                      dataType="wstr"
                      length="255"
                      name="industry" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[issue_date]"
                      dataType="dbDate"
                      name="issue_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[mwbe_category]"
                      dataType="wstr"
                      length="255"
                      name="mwbe_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[payee_name]"
                      dataType="wstr"
                      length="255"
                      name="payee_name" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[spending_category]"
                      dataType="wstr"
                      length="255"
                      name="spending_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_reference_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[agency]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[agency]"
                      name="agency" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[associated_prime_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[associated_prime_vendor]"
                      name="associated_prime_vendor" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[capital_project]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[capital_project]"
                      name="capital_project" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_id]"
                      name="contract_id" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_purpose]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_purpose]"
                      name="contract_purpose" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[check_amount]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[check_amount]"
                      name="check_amount" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[department]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[department]"
                      name="department" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[document_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[document_id]"
                      name="document_id" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[expense_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[expense_category]"
                      name="expense_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[fiscal_year]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[fiscal_year]"
                      name="fiscal_year" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[industry]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[industry]"
                      name="industry" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[issue_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[issue_date]"
                      name="issue_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[mwbe_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[mwbe_category]"
                      name="mwbe_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[payee_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[payee_name]"
                      name="payee_name" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[spending_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[spending_category]"
                      name="spending_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_contract_reference_id]"
                      name="sub_contract_reference_id" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_vendor]"
                      name="sub_vendor" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending)"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update changed records (Final - Spending)"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE
    dbo.Spending
SET
    dbo.Spending.[LastUpdatedTimestamp] = ?,
    dbo.Spending.[agency] = ?,
    dbo.Spending.[associated_prime_vendor] = ?,
    dbo.Spending.[capital_project] = ?,
    dbo.Spending.[contract_id] = ?,
    dbo.Spending.[contract_purpose] = ?,
    dbo.Spending.[check_amount] = ?,
    dbo.Spending.[department] = ?,
    dbo.Spending.[document_id] = ?,
    dbo.Spending.[expense_category] = ?,
    dbo.Spending.[fiscal_year] = ?,
    dbo.Spending.[industry] = ?,
    dbo.Spending.[issue_date] = ?,
    dbo.Spending.[mwbe_category] = ?,
    dbo.Spending.[payee_name] = ?,
    dbo.Spending.[spending_category] = ?,
    dbo.Spending.[sub_contract_reference_id] = ?,
    dbo.Spending.[sub_vendor] = ?,
    dbo.Spending.[Code] = ?,
    dbo.Spending.[Dept] = ?,
    dbo.Spending.[Registration] = ?,
    dbo.Spending.[ProjectAgency] = ?,
    dbo.Spending.[CapProj] = ?,
    dbo.Spending.[Occ] = ?
WHERE
    dbo.Spending.[StagingID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[capital_project]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[associated_prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[check_amount_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="check_amount_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[check_amount_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[department]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[document_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[expense_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[fiscal_year_DataTypeConverted]"
                      cachedDataType="i4"
                      cachedName="fiscal_year_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[fiscal_year_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[issue_date_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="issue_date_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[issue_date_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[payee_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[spending_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[CodeSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CodeSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CodeSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[DeptSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DeptSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[DeptSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[RegistrationSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RegistrationSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_20]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[RegistrationSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_24]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[ProjectAgencySTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProjectAgencySTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_21]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[ProjectAgencySTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[CapProjSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CapProjSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_22]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CapProjSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[OccSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="OccSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_23]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[OccSTAGING_Derived]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="dbTimeStamp"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="wstr"
                      length="255"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="wstr"
                      length="255"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="wstr"
                      length="255"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="wstr"
                      length="255"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="wstr"
                      length="255"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="cy"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      dataType="wstr"
                      length="255"
                      name="Param_7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      dataType="wstr"
                      length="255"
                      name="Param_8">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      dataType="wstr"
                      length="255"
                      name="Param_9">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                      dataType="i4"
                      name="Param_10">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                      dataType="wstr"
                      length="255"
                      name="Param_11">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                      dataType="dbDate"
                      name="Param_12">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                      dataType="wstr"
                      length="255"
                      name="Param_13">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                      dataType="wstr"
                      length="255"
                      name="Param_14">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                      dataType="wstr"
                      length="255"
                      name="Param_15">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                      dataType="wstr"
                      length="255"
                      name="Param_16">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                      dataType="wstr"
                      length="255"
                      name="Param_17">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                      dataType="wstr"
                      length="255"
                      name="Param_18">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                      dataType="wstr"
                      length="255"
                      name="Param_19">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_20]"
                      dataType="wstr"
                      length="255"
                      name="Param_20">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_21]"
                      dataType="wstr"
                      length="255"
                      name="Param_21">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_22]"
                      dataType="wstr"
                      length="255"
                      name="Param_22">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_23]"
                      dataType="wstr"
                      length="255"
                      name="Param_23">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_24]"
                      dataType="i4"
                      name="Param_24">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Data Conversion Output]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
              name="Data Conversion Output"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Delete(StagingID_FINAL not Match any in ID_STAGING)]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input]"
              name="Delete(StagingID_FINAL not Match any in ID_STAGING)"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Delete(StagingID_FINAL not Match any in ID_STAGING)]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Derived Column Output]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Insert(ID_STAGING not Match any in StagingID_FINAL)]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input]"
              name="Insert(ID_STAGING not Match any in StagingID_FINAL)"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Insert(ID_STAGING not Match any in StagingID_FINAL)]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Merge Join Output]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Inputs[Derived Column Input]"
              name="Merge Join Output"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input]"
              name="OLE DB Source Output"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output1]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input]"
              name="OLE DB Source Output"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Output 0]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0]"
              name="Output 0"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Outputs[Output 0]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Output 01]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input]"
              name="Output 0"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Update(ID Match)]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]"
              name="Update(ID Match)"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Update(ID Match)]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Update-able Records]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input]"
              name="Update-able Records"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Update-able Records]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="526,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final"
          TopLeft="359,470" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="309,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table"
          TopLeft="260,363" />
        <NodeLayout
          Size="266,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC"
          TopLeft="80.5,60.5" />
        <NodeLayout
          Size="281,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending)"
          TopLeft="274.5,976.5" />
        <NodeLayout
          Size="156,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion"
          TopLeft="336,621" />
        <NodeLayout
          Size="504,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table"
          TopLeft="164.5,550.5" />
        <NodeLayout
          Size="311,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000"
          TopLeft="0,834" />
        <NodeLayout
          Size="273,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL"
          TopLeft="279.5,453.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join"
          TopLeft="347,226" />
        <NodeLayout
          Size="211,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC"
          TopLeft="584,60" />
        <NodeLayout
          Size="235,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending)"
          TopLeft="559.5,829.5" />
        <NodeLayout
          Size="192,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record"
          TopLeft="322,876" />
        <NodeLayout
          Size="155,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split"
          TopLeft="335,701" />
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output]"
          TopLeft="213.5,102.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="178.166666666667,123.5"
              Start="0,0"
              End="178.166666666667,116">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.1990881458967" />
                  <mssgle:CubicBezierSegment
                    Point1="0,69.1990881458967"
                    Point2="0,73.1990881458967"
                    Point3="4,73.1990881458967" />
                  <mssgle:LineSegment
                    End="174.166666666667,73.1990881458967" />
                  <mssgle:CubicBezierSegment
                    Point1="174.166666666667,73.1990881458967"
                    Point2="178.166666666667,73.1990881458967"
                    Point3="178.166666666667,77.1990881458967" />
                  <mssgle:LineSegment
                    End="178.166666666667,116" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Merge Join Output]"
          TopLeft="413.25,268">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,95"
              Start="0,0"
              End="0,87.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,87.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Insert(ID_STAGING not Match any in StagingID_FINAL)]"
          TopLeft="375.75,743">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-220.25,91"
              Start="0,0"
              End="-220.25,83.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.3594080338266" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.3594080338266"
                    Point2="0,31.3594080338266"
                    Point3="-4,31.3594080338266" />
                  <mssgle:LineSegment
                    End="-216.25,31.3594080338266" />
                  <mssgle:CubicBezierSegment
                    Point1="-216.25,31.3594080338266"
                    Point2="-220.25,31.3594080338266"
                    Point3="-220.25,35.3594080338266" />
                  <mssgle:LineSegment
                    End="-220.25,83.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-233.91833984375,36.3594080338266,247.5866796875,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Derived Column Output]"
          TopLeft="415.25,405">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.5"
              Start="0,0"
              End="0,41">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Delete(StagingID_FINAL not Match any in ID_STAGING)]"
          TopLeft="449.25,743">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="227.75,86.5"
              Start="0,0"
              End="227.75,79">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8086680761099" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.8086680761099"
                    Point2="0,29.8086680761099"
                    Point3="4,29.8086680761099" />
                  <mssgle:LineSegment
                    End="223.75,29.8086680761099" />
                  <mssgle:CubicBezierSegment
                    Point1="223.75,29.8086680761099"
                    Point2="227.75,29.8086680761099"
                    Point3="227.75,33.8086680761099" />
                  <mssgle:LineSegment
                    End="227.75,79" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-10.88673828125,34.8086680761099,249.5234765625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Data Conversion Output]"
          TopLeft="413.25,663">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Update-able Records]"
          TopLeft="416.5,918">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.5"
              Start="0,0"
              End="0,51">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-46.4115234375,19.6953125,92.823046875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Update(ID Match)]"
          TopLeft="415.25,743">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,133"
              Start="0,0"
              End="0,125.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,125.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-40.04068359375,56.9453125,80.0813671875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Output 01]"
          TopLeft="415.25,592.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.5"
              Start="0,0"
              End="0,21">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Output 0]"
          TopLeft="416.25,495.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output1]"
          TopLeft="689.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-257.166666666667,124"
              Start="0,0"
              End="-257.166666666667,116.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.4954407294833" />
                  <mssgle:CubicBezierSegment
                    Point1="0,69.4954407294833"
                    Point2="0,73.4954407294833"
                    Point3="-4,73.4954407294833" />
                  <mssgle:LineSegment
                    End="-253.166666666667,73.4954407294833" />
                  <mssgle:CubicBezierSegment
                    Point1="-253.166666666667,73.4954407294833"
                    Point2="-257.166666666667,73.4954407294833"
                    Point3="-257.166666666667,77.4954407294833" />
                  <mssgle:LineSegment
                    End="-257.166666666667,116.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>