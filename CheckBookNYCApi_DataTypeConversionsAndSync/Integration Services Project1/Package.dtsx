<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/10/2020 5:11:34 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DOT-JCKWHB2"
  DTS:CreatorName="DOT\ykuang"
  DTS:DTSID="{6B353E58-A202-4BC2-B46F-93CD68600CF1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.5626.31"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="139"
  DTS:VersionGUID="{FAA20F9D-FC98-4656-84F9-9F7E48092F65}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{FCA46042-184A-4048-B9D6-000F61268699}"
      DTS:ObjectName="DOTDEV55SQLEE03.CheckBookNYC">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DOTDEV55SQLEE03;Initial Catalog=CheckBookNYC;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{652B05F1-3B36-4A09-AB11-B782E1E9C30D}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Budget - Sort StagingID ASC"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Inputs[Sort Input].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[StagingID_FINAL]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Inputs[Sort Input].Columns[agency_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[agency_FINAL]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Inputs[Sort Input].Columns[year_FINAL]"
                      cachedDataType="i4"
                      cachedName="year_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[year_FINAL]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Inputs[Sort Input].Columns[department_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[department_FINAL]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Inputs[Sort Input].Columns[expense_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[expense_category_FINAL]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Inputs[Sort Input].Columns[budget_code_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_code_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[budget_code_FINAL]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Inputs[Sort Input].Columns[budget_name_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_name_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[budget_name_FINAL]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Inputs[Sort Input].Columns[budget_amounts_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_amounts_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[budget_amounts_FINAL]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Inputs[Sort Input].Columns[expenditure_amounts_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expenditure_amounts_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[expenditure_amounts_FINAL]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[StagingID_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[StagingID_FINAL]"
                      name="StagingID_FINAL"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[StagingID_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[agency_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[agency_FINAL]"
                      name="agency_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[agency_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[year_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[year_FINAL]"
                      name="year_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[year_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[department_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[department_FINAL]"
                      name="department_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[department_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[expense_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[expense_category_FINAL]"
                      name="expense_category_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[expense_category_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[budget_code_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[budget_code_FINAL]"
                      name="budget_code_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[budget_code_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[budget_name_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[budget_name_FINAL]"
                      name="budget_name_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[budget_name_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[budget_amounts_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[budget_amounts_FINAL]"
                      name="budget_amounts_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[budget_amounts_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[expenditure_amounts_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[expenditure_amounts_FINAL]"
                      name="expenditure_amounts_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[expenditure_amounts_FINAL]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Budget_Staging - Sort ID ASC"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Inputs[Sort Input].Columns[ID_STAGING]"
                      cachedDataType="i4"
                      cachedName="ID_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[ID_STAGING]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Inputs[Sort Input].Columns[agency_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[agency_STAGING]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Inputs[Sort Input].Columns[year_STAGING]"
                      cachedDataType="i4"
                      cachedName="year_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[year_STAGING]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Inputs[Sort Input].Columns[department_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[department_STAGING]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Inputs[Sort Input].Columns[expense_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[expense_category_STAGING]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Inputs[Sort Input].Columns[budget_code_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_code_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[budget_code_STAGING]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Inputs[Sort Input].Columns[budget_name_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_name_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[budget_name_STAGING]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Inputs[Sort Input].Columns[budget_amounts_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_amounts_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[budget_amounts_STAGING]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Inputs[Sort Input].Columns[expenditure_amounts_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expenditure_amounts_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[expenditure_amounts_STAGING]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[ID_STAGING]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[ID_STAGING]"
                      name="ID_STAGING"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[ID_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[agency_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[agency_STAGING]"
                      name="agency_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[agency_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[year_STAGING]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[year_STAGING]"
                      name="year_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[year_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[department_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[department_STAGING]"
                      name="department_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[department_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[expense_category_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[expense_category_STAGING]"
                      name="expense_category_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[expense_category_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[budget_code_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[budget_code_STAGING]"
                      name="budget_code_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[budget_code_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[budget_name_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[budget_name_STAGING]"
                      name="budget_name_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[budget_name_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[budget_amounts_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[budget_amounts_STAGING]"
                      name="budget_amounts_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[budget_amounts_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[expenditure_amounts_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[expenditure_amounts_STAGING]"
                      name="expenditure_amounts_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[expenditure_amounts_STAGING]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input].Columns[ID_STAGING]"
                      cachedDataType="i4"
                      cachedName="ID_STAGING"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Update(ID Match)]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Update(ID Match)"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(ID_STAGING) &amp;&amp; !ISNULL(StagingID_FINAL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Insert(ID_STAGING not Match any in StagingID_FINAL)]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Insert(ID_STAGING not Match any in StagingID_FINAL)"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(ID_STAGING) &amp;&amp; ISNULL(StagingID_FINAL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Delete(StagingID_FINAL not Match any in ID_STAGING)]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Delete(StagingID_FINAL not Match any in ID_STAGING)"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(ID_STAGING) &amp;&amp; !ISNULL(StagingID_FINAL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Data Conversion - NOT IN USER AT THE MOMENT"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion - NOT IN USER AT THE MOMENT"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Data Conversion - NOT IN USER AT THE MOMENT.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Data Conversion - NOT IN USER AT THE MOMENT.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Data Conversion - NOT IN USER AT THE MOMENT.Inputs[Data Conversion Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Data Conversion - NOT IN USER AT THE MOMENT.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Data Conversion - NOT IN USER AT THE MOMENT.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Data Conversion - NOT IN USER AT THE MOMENT.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Data Conversion - NOT IN USER AT THE MOMENT.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Data Conversion - NOT IN USER AT THE MOMENT.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Data Conversion - NOT IN USER AT THE MOMENT.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget)"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Delete records (Final - Budget)"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">DELETE FROM dbo.Budget
WHERE dbo.Budget.[StagingID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Inputs[OLE DB Command Input].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derive Current Datetime for Final Budget table"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]"
                      name="LastUpdatedTimestamp_Derived"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Final - Budget"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Budget]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[StagingID_FINAL]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[StagingID]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[StagingID_FINAL]"
                      name="StagingID_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[agency_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[agency]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[agency_FINAL]"
                      name="agency_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[year_FINAL]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[year]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[year_FINAL]"
                      name="year_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[department_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[department]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[department_FINAL]"
                      name="department_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[expense_category_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[expense_category]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[expense_category_FINAL]"
                      name="expense_category_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[budget_code_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[budget_code]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[budget_code_FINAL]"
                      name="budget_code_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[budget_name_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[budget_name]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[budget_name_FINAL]"
                      name="budget_name_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[budget_amounts_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[budget_amounts]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[budget_amounts_FINAL]"
                      name="budget_amounts_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[expenditure_amounts_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[expenditure_amounts]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].Columns[expenditure_amounts_FINAL]"
                      name="expenditure_amounts_FINAL"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[StagingID]"
                      dataType="i4"
                      name="StagingID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      name="LastUpdatedTimestamp" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[agency]"
                      dataType="wstr"
                      length="255"
                      name="agency" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[year]"
                      dataType="i4"
                      name="year" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[department]"
                      dataType="wstr"
                      length="255"
                      name="department" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[expense_category]"
                      dataType="wstr"
                      length="255"
                      name="expense_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[budget_code]"
                      dataType="wstr"
                      length="255"
                      name="budget_code" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[budget_name]"
                      dataType="wstr"
                      length="255"
                      name="budget_name" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[budget_amounts]"
                      dataType="wstr"
                      length="255"
                      name="budget_amounts" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output].ExternalColumns[expenditure_amounts]"
                      dataType="wstr"
                      length="255"
                      name="expenditure_amounts" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[StagingID]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[StagingID]"
                      name="StagingID" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[agency]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[agency]"
                      name="agency" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[year]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[year]"
                      name="year" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[department]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[department]"
                      name="department" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[expense_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[expense_category]"
                      name="expense_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[budget_code]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[budget_code]"
                      name="budget_code" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[budget_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[budget_name]"
                      name="budget_name" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[budget_amounts]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[budget_amounts]"
                      name="budget_amounts" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[expenditure_amounts]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[expenditure_amounts]"
                      name="expenditure_amounts" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Find Update-able record"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[agency_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[year_STAGING]"
                      cachedDataType="i4"
                      cachedName="year_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[department_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[expense_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[budget_code_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_code_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[budget_name_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_name_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[budget_amounts_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_amounts_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[expenditure_amounts_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expenditure_amounts_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[agency_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[year_FINAL]"
                      cachedDataType="i4"
                      cachedName="year_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[department_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[expense_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[budget_code_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_code_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[budget_name_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_name_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[budget_amounts_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_amounts_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[expenditure_amounts_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expenditure_amounts_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_FINAL]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Update-able Records]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Update-able Records"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">(![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]} != #{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_FINAL]} != #{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]} != #{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]} != #{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_FINAL]} != #{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_FINAL]} != #{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_FINAL]} != #{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_FINAL]} != #{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_STAGING]}))</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">(!ISNULL(agency_FINAL) &amp;&amp; ISNULL(agency_STAGING)) || (ISNULL(agency_FINAL) &amp;&amp; !ISNULL(agency_STAGING)) || (!ISNULL(agency_FINAL) &amp;&amp; !ISNULL(agency_STAGING) &amp;&amp; (agency_FINAL != agency_STAGING)) || (!ISNULL(year_FINAL) &amp;&amp; ISNULL(year_STAGING)) || (ISNULL(year_FINAL) &amp;&amp; !ISNULL(year_STAGING)) || (!ISNULL(year_FINAL) &amp;&amp; !ISNULL(year_STAGING) &amp;&amp; (year_FINAL != year_STAGING)) || (!ISNULL(department_FINAL) &amp;&amp; ISNULL(department_STAGING)) || (ISNULL(department_FINAL) &amp;&amp; !ISNULL(department_STAGING)) || (!ISNULL(department_FINAL) &amp;&amp; !ISNULL(department_STAGING) &amp;&amp; (department_FINAL != department_STAGING)) || (!ISNULL(expense_category_FINAL) &amp;&amp; ISNULL(expense_category_STAGING)) || (ISNULL(expense_category_FINAL) &amp;&amp; !ISNULL(expense_category_STAGING)) || (!ISNULL(expense_category_FINAL) &amp;&amp; !ISNULL(expense_category_STAGING) &amp;&amp; (expense_category_FINAL != expense_category_STAGING)) || (!ISNULL(budget_code_FINAL) &amp;&amp; ISNULL(budget_code_STAGING)) || (ISNULL(budget_code_FINAL) &amp;&amp; !ISNULL(budget_code_STAGING)) || (!ISNULL(budget_code_FINAL) &amp;&amp; !ISNULL(budget_code_STAGING) &amp;&amp; (budget_code_FINAL != budget_code_STAGING)) || (!ISNULL(budget_name_FINAL) &amp;&amp; ISNULL(budget_name_STAGING)) || (ISNULL(budget_name_FINAL) &amp;&amp; !ISNULL(budget_name_STAGING)) || (!ISNULL(budget_name_FINAL) &amp;&amp; !ISNULL(budget_name_STAGING) &amp;&amp; (budget_name_FINAL != budget_name_STAGING)) || (!ISNULL(budget_amounts_FINAL) &amp;&amp; ISNULL(budget_amounts_STAGING)) || (ISNULL(budget_amounts_FINAL) &amp;&amp; !ISNULL(budget_amounts_STAGING)) || (!ISNULL(budget_amounts_FINAL) &amp;&amp; !ISNULL(budget_amounts_STAGING) &amp;&amp; (budget_amounts_FINAL != budget_amounts_STAGING)) || (!ISNULL(expenditure_amounts_FINAL) &amp;&amp; ISNULL(expenditure_amounts_STAGING)) || (ISNULL(expenditure_amounts_FINAL) &amp;&amp; !ISNULL(expenditure_amounts_STAGING)) || (!ISNULL(expenditure_amounts_FINAL) &amp;&amp; !ISNULL(expenditure_amounts_STAGING) &amp;&amp; (expenditure_amounts_FINAL != expenditure_amounts_STAGING))</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert records (Final - Budget) - Batch 100,000"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Budget]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">100000</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[ID_STAGING]"
                      cachedDataType="i4"
                      cachedName="ID_STAGING"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[StagingID]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[LastUpdatedTimestamp]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[agency_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[agency]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[year_STAGING]"
                      cachedDataType="i4"
                      cachedName="year_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[department_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[department]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[expense_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[expense_category]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[budget_code_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_code_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[budget_code]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[budget_name_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_name_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[budget_name]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[budget_amounts_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_amounts_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[budget_amounts]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[expenditure_amounts_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expenditure_amounts_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[expenditure_amounts]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_STAGING]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[StagingID]"
                      dataType="i4"
                      name="StagingID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      name="LastUpdatedTimestamp" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[agency]"
                      dataType="wstr"
                      length="255"
                      name="agency" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      dataType="i4"
                      name="year" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[department]"
                      dataType="wstr"
                      length="255"
                      name="department" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[expense_category]"
                      dataType="wstr"
                      length="255"
                      name="expense_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[budget_code]"
                      dataType="wstr"
                      length="255"
                      name="budget_code" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[budget_name]"
                      dataType="wstr"
                      length="255"
                      name="budget_name" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[budget_amounts]"
                      dataType="wstr"
                      length="255"
                      name="budget_amounts" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[expenditure_amounts]"
                      dataType="wstr"
                      length="255"
                      name="expenditure_amounts" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[ID_STAGING]"
                      cachedDataType="i4"
                      cachedName="ID_STAGING"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[ID_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[agency_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[agency_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[year_STAGING]"
                      cachedDataType="i4"
                      cachedName="year_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[year_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[department_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[department_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[expense_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[expense_category_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[budget_code_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_code_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[budget_code_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[budget_name_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_name_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[budget_name_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[budget_amounts_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_amounts_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[budget_amounts_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[expenditure_amounts_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expenditure_amounts_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output].Columns[expenditure_amounts_STAGING]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[StagingID_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[agency_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[agency_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[year_FINAL]"
                      cachedDataType="i4"
                      cachedName="year_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[year_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[department_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[department_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[expense_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[expense_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[budget_code_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_code_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[budget_code_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[budget_name_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_name_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[budget_name_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[budget_amounts_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_amounts_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[budget_amounts_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[expenditure_amounts_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expenditure_amounts_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output].Columns[expenditure_amounts_FINAL]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]"
                      name="ID_STAGING"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[ID_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_STAGING]"
                      name="agency_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[agency_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_STAGING]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_STAGING]"
                      name="year_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[year_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_STAGING]"
                      name="department_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[department_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_STAGING]"
                      name="expense_category_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[expense_category_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_STAGING]"
                      name="budget_code_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[budget_code_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_STAGING]"
                      name="budget_name_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[budget_name_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_STAGING]"
                      name="budget_amounts_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[budget_amounts_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_STAGING]"
                      name="expenditure_amounts_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[expenditure_amounts_STAGING]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]"
                      name="StagingID_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[StagingID_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]"
                      name="agency_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[agency_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_FINAL]"
                      name="year_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[year_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]"
                      name="department_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[department_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]"
                      name="expense_category_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[expense_category_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_FINAL]"
                      name="budget_code_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[budget_code_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_FINAL]"
                      name="budget_name_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[budget_name_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_FINAL]"
                      name="budget_amounts_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[budget_amounts_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_FINAL]"
                      name="expenditure_amounts_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[expenditure_amounts_FINAL]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Replace any column that is &quot;-&quot; with NULL"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        try
        {
            Row.agencySTAGING = (Row.agencySTAGING == "-" ? null : Row.agencySTAGING);
            // Row.yearSTAGING = (Row.yearSTAGING == "-" ? null: Row.yearSTAGING);
            Row.departmentSTAGING = (Row.departmentSTAGING == "-" ? null : Row.departmentSTAGING);
            Row.expensecategorySTAGING = (Row.expensecategorySTAGING == "-" ? null : Row.expensecategorySTAGING);
            Row.budgetcodeSTAGING = (Row.budgetcodeSTAGING == "-" ? null : Row.budgetcodeSTAGING);
            Row.budgetnameSTAGING = (Row.budgetnameSTAGING == "-" ? null : Row.budgetnameSTAGING);
            Row.budgetamountsSTAGING = (Row.budgetamountsSTAGING == "-" ? null : Row.budgetamountsSTAGING);
            Row.expenditureamountsSTAGING = (Row.expenditureamountsSTAGING == "-" ? null : Row.expenditureamountsSTAGING);
        }
        catch (Exception ex)
        {
            Row.agencySTAGING = "ERROR";
            // Row.yearSTAGING = "ERROR";
            Row.departmentSTAGING = "ERROR";
            Row.expensecategorySTAGING = "ERROR";
            Row.budgetcodeSTAGING = "ERROR";
            Row.budgetnameSTAGING = "ERROR";
            Row.budgetamountsSTAGING = "ERROR";
            Row.expenditureamountsSTAGING = "ERROR";
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 IDSTAGING
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool IDSTAGING_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String agencySTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool agencySTAGING_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 yearSTAGING
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool yearSTAGING_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String departmentSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool departmentSTAGING_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String expensecategorySTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
        set
        {
            this[4] = value;
        }
    }
    public bool expensecategorySTAGING_IsNull
    {
        get
        {
            return IsNull(4);
        }
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String budgetcodeSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
        set
        {
            this[5] = value;
        }
    }
    public bool budgetcodeSTAGING_IsNull
    {
        get
        {
            return IsNull(5);
        }
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String budgetnameSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
        set
        {
            this[6] = value;
        }
    }
    public bool budgetnameSTAGING_IsNull
    {
        get
        {
            return IsNull(6);
        }
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String budgetamountsSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
        set
        {
            this[7] = value;
        }
    }
    public bool budgetamountsSTAGING_IsNull
    {
        get
        {
            return IsNull(7);
        }
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String expenditureamountsSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
        set
        {
            this[8] = value;
        }
    }
    public bool expenditureamountsSTAGING_IsNull
    {
        get
        {
            return IsNull(8);
        }
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 StagingIDFINAL
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[9]);
        }
    }
    public bool StagingIDFINAL_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String agencyFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool agencyFINAL_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public Int32 yearFINAL
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[11]);
        }
    }
    public bool yearFINAL_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String departmentFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool departmentFINAL_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String expensecategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool expensecategoryFINAL_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String budgetcodeFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool budgetcodeFINAL_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public String budgetnameFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
    }
    public bool budgetnameFINAL_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public String budgetamountsFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[16]);
        }
    }
    public bool budgetamountsFINAL_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public String expenditureamountsFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[17]);
        }
    }
    public bool expenditureamountsFINAL_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public DateTime LastUpdatedTimestampDerived
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[18]);
        }
    }
    public bool LastUpdatedTimestampDerived_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_3e1825733ec74b9bbbc62f8b450c30f3.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{d6261bad-e62e-483f-bca4-f40a32e70938}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_3e1825733ec74b9bbbc62f8b450c30f3</RootNamespace>
    <AssemblyName>SC_3e1825733ec74b9bbbc62f8b450c30f3</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_3e1825733ec74b9bbbc62f8b450c30f3" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3e1825733ec74b9bbbc62f8b450c30f3.Properties.Settings.get_Default():SC_3e1825733ec74b9bbbc62f8b450c30f3.Properties.Sett" +
    "ings")]

namespace SC_3e1825733ec74b9bbbc62f8b450c30f3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_3e1825733ec74b9bbbc62f8b450c30f3</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_3e1825733ec74b9bbbc62f8b450c30f3</msb:DisplayName>
		<msb:ProjectId>{86953A54-B584-4ABD-986B-BDE2E05034F2}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_3e1825733ec74b9bbbc62f8b450c30f3.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_3e1825733ec74b9bbbc62f8b450c30f3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_3e1825733ec74b9bbbc62f8b450c30f3")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3e1825733ec74b9bbbc62f8b450c30f3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3e1825733ec74b9bbbc62f8b450c30f3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3e1825733ec74b9bbbc62f8b450c30f3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_3e1825733ec74b9bbbc62f8b450c30f3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_3e1825733ec74b9bbbc62f8b450c30f3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_3e1825733ec74b9bbbc62f8b450c30f3.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPzp5l4AAAAAAAAAAOAAAiELAQsAACYAAAAIAAAAAAAA3kQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIxEAABPAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5CQAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
RAAAAAAAAEgAAAACAAUAACcAAIwdAAABAAAAAAAAAEgmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnNEAAAGfQEAAAQCAnNFAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDb0IAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioAAAswAwA6AQAAAAAAAAMDbw4AAAZyEQAAcCgTAAAKLQgDbw4AAAYrARRv
DwAABgMDbxYAAAZyEQAAcCgTAAAKLQgDbxYAAAYrARRvFwAABgMDbxoAAAZyEQAAcCgTAAAKLQgD
bxoAAAYrARRvGwAABgMDbx4AAAZyEQAAcCgTAAAKLQgDbx4AAAYrARRvHwAABgMDbyIAAAZyEQAA
cCgTAAAKLQgDbyIAAAYrARRvIwAABgMDbyYAAAZyEQAAcCgTAAAKLQgDbyYAAAYrARRvJwAABgMD
byoAAAZyEQAAcCgTAAAKLQgDbyoAAAYrARRvKwAABt5QJgNyFQAAcG8PAAAGA3IVAABwbxcAAAYD
chUAAHBvGwAABgNyFQAAcG8fAAAGA3IVAABwbyMAAAYDchUAAHBvJwAABgNyFQAAcG8rAAAG3gAq
AAABEAAAAAAAAOnpAFAZAAABHgIoAQAABioqAgMEBSgUAAAKKlICexUAAAoCexYAAAoWlG8XAAAK
KjoCFgOMGgAAASgYAAAKKiICFigZAAAKKloDLAgCFigaAAAKKnIhAABwcxsAAAp6UgJ7FQAACgJ7
FgAACheUbxwAAAoqJgIXAygYAAAKKiICFygZAAAKKloDLAgCFygaAAAKKnIhAABwcxsAAAp6UgJ7
FQAACgJ7FgAAChiUbxcAAAoqOgIYA4waAAABKBgAAAoqIgIYKBkAAAoqWgMsCAIYKBoAAAoqciEA
AHBzGwAACnpSAnsVAAAKAnsWAAAKGZRvHAAACiomAhkDKBgAAAoqIgIZKBkAAAoqWgMsCAIZKBoA
AAoqciEAAHBzGwAACnpSAnsVAAAKAnsWAAAKGpRvHAAACiomAhoDKBgAAAoqIgIaKBkAAAoqWgMs
CAIaKBoAAAoqciEAAHBzGwAACnpSAnsVAAAKAnsWAAAKG5RvHAAACiomAhsDKBgAAAoqIgIbKBkA
AAoqWgMsCAIbKBoAAAoqciEAAHBzGwAACnpSAnsVAAAKAnsWAAAKHJRvHAAACiomAhwDKBgAAAoq
IgIcKBkAAAoqWgMsCAIcKBoAAAoqciEAAHBzGwAACnpSAnsVAAAKAnsWAAAKHZRvHAAACiomAh0D
KBgAAAoqIgIdKBkAAAoqWgMsCAIdKBoAAAoqciEAAHBzGwAACnpSAnsVAAAKAnsWAAAKHpRvHAAA
CiomAh4DKBgAAAoqIgIeKBkAAAoqWgMsCAIeKBoAAAoqciEAAHBzGwAACnpWAnsVAAAKAnsWAAAK
HwmUbxcAAAoqJgIfCSgZAAAKKlYCexUAAAoCexYAAAofCpRvHAAACiomAh8KKBkAAAoqVgJ7FQAA
CgJ7FgAACh8LlG8XAAAKKiYCHwsoGQAACipWAnsVAAAKAnsWAAAKHwyUbxwAAAoqJgIfDCgZAAAK
KlYCexUAAAoCexYAAAofDZRvHAAACiomAh8NKBkAAAoqVgJ7FQAACgJ7FgAACh8OlG8cAAAKKiYC
Hw4oGQAACipWAnsVAAAKAnsWAAAKHw+UbxwAAAoqJgIfDygZAAAKKlYCexUAAAoCexYAAAofEJRv
HAAACiomAh8QKBkAAAoqVgJ7FQAACgJ7FgAACh8RlG8cAAAKKiYCHxEoGQAACipWAnsVAAAKAnsW
AAAKHxKUbx0AAAoqJgIfEigZAAAKKh4CKB4AAAoqHgIoHwAACio6AiggAAAKAgN9AwAABCo6Aigg
AAAKAgN9BAAABCoeAiggAAAKKgAAEzACAC0AAAABAAARfgUAAAQtIHK+AABw0AcAAAIoIgAACm8j
AAAKcyQAAAoKBoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKi5zSwAABoAHAAAEKh4C
KCcAAAoqAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAzAoAACN+AAA4CwAAUA8AACNTdHJpbmdzAAAAAIgaAAAwAQAAI1VTALgbAAAQAAAAI0dVSUQA
AADIGwAAxAEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6JTMAFgAAAQAAACIAAAAIAAAABwAA
AEwAAAAfAAAAJwAAAA8AAAABAAAAAwAAACkAAAA8AAAAAQAAAAQAAAABAAAAAAAKAAEAAAAAAAYA
7gDNAAYA/gDNAAoAGwEUAQ4ANwEiARIAdgHNAAYAhQHNAAoAIQcUAQoAzQq8CgoA/grpCgoA1wu9
CwoAAgzwCwoAGQzwCwoANgzwCwoAVQzwCwoAbgzwCwoAhwzwCwoAogzwCwoAvQzwCwoA1gzwCwoA
Dw3vDAoALw3vDAoAcQ0UAQoAeA0UAQYAoQ3NAAoA1A0UAQoA5w0UAQoABQ4UAQoASA41DgoAZQ4U
AQoAag4UAQoAjg7wCw4Aug6kDg4A0w6kDgoA6A7vDAAAAAABAAAAAAABAAEAAQAQADIAAAAFAAEA
AQABABAAQAAAAAgAAwAFAAEAEABLAAAACQADAAkAAQAQAFgAAAANAAMARAABABAAZAAAAA0ABABF
AAAAEABuAHgADQAFAEYAAAEQAKcAeAARAAcASgAGAFgAEwAGAGQAFwABAKwKagABAKwKagARAN0K
dAARAAoLeAARAE4LlgBQIAAAAACGGE8BGwABAHAgAAAAAMYAkwEfAAEAlSAAAAAAxgGgASkABQCo
IAAAAADGAbQBKQAGAKogAAAAAMYAywEbAAcAsiAAAAAAxgDWARsABwC8IAAAAADGALQBKQAHABQi
AAAAAIYYTwEbAAgAHCIAAAAAhhhPAS8ACAAnIgAAAACGCOIBOQALADwiAAAAAIYI8AE9AAsASyIA
AAAAhgj+AUIADABUIgAAAACGCBMCRgAMAGsiAAAAAIYIKAJLAA0AgCIAAAAAhgg6Ak8ADQCKIgAA
AACGCEwCQgAOAJMiAAAAAIYIZQJGAA4AqiIAAAAAhgh+AjkADwC/IgAAAACGCI4CPQAPAM4iAAAA
AIYIngJCABAA1yIAAAAAhgi1AkYAEADuIgAAAACGCMwCSwARAAMjAAAAAIYI4gJPABEADSMAAAAA
hgj4AkIAEgAWIwAAAACGCBUDRgASAC0jAAAAAIYIMgNLABMAQiMAAAAAhghNA08AEwBMIwAAAACG
CGgDQgAUAFUjAAAAAIYIigNGABQAbCMAAAAAhgisA0sAFQCBIwAAAACGCMIDTwAVAIsjAAAAAIYI
2ANCABYAlCMAAAAAhgj1A0YAFgCrIwAAAACGCBIESwAXAMAjAAAAAIYIKARPABcAyiMAAAAAhgg+
BEIAGADTIwAAAACGCFsERgAYAOojAAAAAIYIeARLABkA/yMAAAAAhgiRBE8AGQAJJAAAAACGCKoE
QgAaABIkAAAAAIYIygRGABoAKSQAAAAAhgjqBEsAGwA+JAAAAACGCAgFTwAbAEgkAAAAAIYIJgVC
ABwAUSQAAAAAhghLBUYAHABoJAAAAACGCHAFOQAdAH4kAAAAAIYIgwVCAB0AiCQAAAAAhgidBUsA
HQCeJAAAAACGCK0FQgAdAKgkAAAAAIYIxAU5AB0AviQAAAAAhgjSBUIAHQDIJAAAAACGCOcFSwAd
AN4kAAAAAIYI+wVCAB0A6CQAAAAAhggWBksAHQD+JAAAAACGCC8GQgAdAAglAAAAAIYITwZLAB0A
HiUAAAAAhghjBkIAHQAoJQAAAACGCH4GSwAdAD4lAAAAAIYIkgZCAB0ASCUAAAAAhgitBksAHQBe
JQAAAACGCMQGQgAdAGglAAAAAIYI4gZLAB0AfiUAAAAAhgj+BkIAHQCIJQAAAACGCCoHVAAdAJ4l
AAAAAIYISgdCAB0AqCUAAAAAhgBxB0IAHQCwJQAAAACGAHkHQgAdALglAAAAAIYYTwFuAB0AxyUA
AAAAhhhPAW4AHgDWJQAAAACDGE8BGwAfAOAlAAAAAJMIGgt8AB8AGSYAAAAAkwguC4EAHwAgJgAA
AACTCDoLhgAfACgmAAAAAJYIXguaACAAOyYAAAAAhhhPARsAIAAvJgAAAACRGAMPBwEgAAAAAQBy
CwAAAgB6CwAAAwCECwAABACLCwAAAQCECwAAAQCVCwAAAQCVCwAAAQCECwAAAgCZCwAAAwCLCwAA
AQCtCwAAAQCtCwAAAQCtCwAAAQCtCwAAAQCtCwAAAQCtCwAAAQCtCwAAAQCtCwAAAQCtCwAAAQCt
CwAAAQCtCwAAAQCtCwAAAQCtCwAAAQCtCwAAAQCtCwAAAQCtCwAAAQCtCwAAAQCtCwAAAQCzCwAA
AQCzCwAAAQCtC1EATwFPAFkATwFPAGEATwFPAGkATwFPAHEATwFPAHkATwFPAIEATwFPAIkATwFP
AJEATwFPAJkATwFPAKEATwE9AKkATwEbAAkATwEbALEAiQ2kAAkAkA2rAMEATwEbAAkAywEbAAkA
1gEbALEAyA22ABEATwEvABEAhAu8ABEAmQvAACkA3g3EABEA7Q3JABEA9g3PABEA/Q09ANkATwFP
ACkAHw7UACkAKQ7ZABEAcQdCABEAeQdCABkATwEbAOEATwEbAOkAfA7fAOkAlw7mAEEATwHrAAEB
TwH3ABEBTwEbACEATwEbAC4AGwB8AS4AYwCiAS4ACwALAS4AEwBTAS4AIwB8AS4AKwB8AS4AMwBT
AS4AOwCCAS4AQwB8AS4AWwCZAWMAgwCxAOEAMwGxAOMACwGxAOkEKwH+AAkFKwH+APIABAABAAcA
JwAIACkAAACFB1kAAACPB10AAACgB2EAAACuB10AAADDB1kAAADPB10AAADiB2EAAAD0B10AAAAN
CGEAAAAkCF0AAABCCGEAAABUCF0AAABtCGEAAAB/CF0AAACYCGEAAACtCF0AAADJCGEAAADjCF0A
AAAECVkAAAATCV0AAAApCWEAAAA1CV0AAABICVkAAABSCV0AAABjCWEAAABzCV0AAACKCWEAAACf
CV0AAAC7CWEAAADLCV0AAADiCWEAAADyCV0AAAAJCmEAAAAcCl0AAAA2CmEAAABOCl0AAABtCmUA
AACJCl0AAADNCowAAABGC5EAAABqC58AAgAKAAMAAQALAAMAAgAMAAUAAQANAAUAAQAPAAcAAgAO
AAcAAgAQAAkAAQARAAkAAgASAAsAAQATAAsAAgAUAA0AAQAVAA0AAQAXAA8AAgAWAA8AAgAYABEA
AQAZABEAAgAaABMAAQAbABMAAgAcABUAAQAdABUAAgAeABcAAQAfABcAAgAgABkAAQAhABkAAgAi
ABsAAQAjABsAAgAkAB0AAQAlAB0AAQAnAB8AAgAmAB8AAgAoACEAAQApACEAAgAqACMAAQArACMA
AgAsACUAAQAtACUAAgAuACcAAgAvACkAAgAwACsAAgAxAC0AAgAyAC8AAgAzADEAAgA0ADMAAgA1
ADUAAgA2ADcAAgA3ADkAAgA4ADsAAgA5AD0AAgA6AD8AAgA7AEEAAgA8AEMAAgA9AEUAAgA+AEcA
AgA/AEkAAgBAAEsAAgBBAE0AAgBHAE8AAgBIAFEAAQBJAFEAAgBKAFMABIAAAAEAAAAuHZadAAAA
AAAATQ0AAAwAAAAAAAAAAAAAAAEAsAAAAAAABAAAAAAAAAAAAAAACgALAQAAAAAEAAAAAAAAAAAA
AAAKABQBAAAAAAwAAAAAAAAAAAAAAAEAVQEAAAAAAAAAAAEAAAAKDwAAAAAAAAA8TW9kdWxlPgBT
Q18zZTE4MjU3MzNlYzc0YjliYmJjNjJmOGI0NTBjMzBmMy5kbGwAVXNlckNvbXBvbmVudABTY3Jp
cHRNYWluAElucHV0MEJ1ZmZlcgBDb25uZWN0aW9ucwBWYXJpYWJsZXMAUmVzb3VyY2VzAFNDXzNl
MTgyNTczM2VjNzRiOWJiYmM2MmY4YjQ1MGMzMGYzLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9z
b2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBT
Y3JpcHRDb21wb25lbnQAU2NyaXB0QnVmZmVyAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVt
LkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UALmN0b3IATWljcm9zb2Z0LlNx
bFNlcnZlci5QaXBlbGluZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcABQcm9jZXNz
SW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AFByZUV4ZWN1
dGUAUG9zdEV4ZWN1dGUAZ2V0X0lEU1RBR0lORwBzZXRfSURTVEFHSU5HAGdldF9JRFNUQUdJTkdf
SXNOdWxsAHNldF9JRFNUQUdJTkdfSXNOdWxsAGdldF9hZ2VuY3lTVEFHSU5HAHNldF9hZ2VuY3lT
VEFHSU5HAGdldF9hZ2VuY3lTVEFHSU5HX0lzTnVsbABzZXRfYWdlbmN5U1RBR0lOR19Jc051bGwA
Z2V0X3llYXJTVEFHSU5HAHNldF95ZWFyU1RBR0lORwBnZXRfeWVhclNUQUdJTkdfSXNOdWxsAHNl
dF95ZWFyU1RBR0lOR19Jc051bGwAZ2V0X2RlcGFydG1lbnRTVEFHSU5HAHNldF9kZXBhcnRtZW50
U1RBR0lORwBnZXRfZGVwYXJ0bWVudFNUQUdJTkdfSXNOdWxsAHNldF9kZXBhcnRtZW50U1RBR0lO
R19Jc051bGwAZ2V0X2V4cGVuc2VjYXRlZ29yeVNUQUdJTkcAc2V0X2V4cGVuc2VjYXRlZ29yeVNU
QUdJTkcAZ2V0X2V4cGVuc2VjYXRlZ29yeVNUQUdJTkdfSXNOdWxsAHNldF9leHBlbnNlY2F0ZWdv
cnlTVEFHSU5HX0lzTnVsbABnZXRfYnVkZ2V0Y29kZVNUQUdJTkcAc2V0X2J1ZGdldGNvZGVTVEFH
SU5HAGdldF9idWRnZXRjb2RlU1RBR0lOR19Jc051bGwAc2V0X2J1ZGdldGNvZGVTVEFHSU5HX0lz
TnVsbABnZXRfYnVkZ2V0bmFtZVNUQUdJTkcAc2V0X2J1ZGdldG5hbWVTVEFHSU5HAGdldF9idWRn
ZXRuYW1lU1RBR0lOR19Jc051bGwAc2V0X2J1ZGdldG5hbWVTVEFHSU5HX0lzTnVsbABnZXRfYnVk
Z2V0YW1vdW50c1NUQUdJTkcAc2V0X2J1ZGdldGFtb3VudHNTVEFHSU5HAGdldF9idWRnZXRhbW91
bnRzU1RBR0lOR19Jc051bGwAc2V0X2J1ZGdldGFtb3VudHNTVEFHSU5HX0lzTnVsbABnZXRfZXhw
ZW5kaXR1cmVhbW91bnRzU1RBR0lORwBzZXRfZXhwZW5kaXR1cmVhbW91bnRzU1RBR0lORwBnZXRf
ZXhwZW5kaXR1cmVhbW91bnRzU1RBR0lOR19Jc051bGwAc2V0X2V4cGVuZGl0dXJlYW1vdW50c1NU
QUdJTkdfSXNOdWxsAGdldF9TdGFnaW5nSURGSU5BTABnZXRfU3RhZ2luZ0lERklOQUxfSXNOdWxs
AGdldF9hZ2VuY3lGSU5BTABnZXRfYWdlbmN5RklOQUxfSXNOdWxsAGdldF95ZWFyRklOQUwAZ2V0
X3llYXJGSU5BTF9Jc051bGwAZ2V0X2RlcGFydG1lbnRGSU5BTABnZXRfZGVwYXJ0bWVudEZJTkFM
X0lzTnVsbABnZXRfZXhwZW5zZWNhdGVnb3J5RklOQUwAZ2V0X2V4cGVuc2VjYXRlZ29yeUZJTkFM
X0lzTnVsbABnZXRfYnVkZ2V0Y29kZUZJTkFMAGdldF9idWRnZXRjb2RlRklOQUxfSXNOdWxsAGdl
dF9idWRnZXRuYW1lRklOQUwAZ2V0X2J1ZGdldG5hbWVGSU5BTF9Jc051bGwAZ2V0X2J1ZGdldGFt
b3VudHNGSU5BTABnZXRfYnVkZ2V0YW1vdW50c0ZJTkFMX0lzTnVsbABnZXRfZXhwZW5kaXR1cmVh
bW91bnRzRklOQUwAZ2V0X2V4cGVuZGl0dXJlYW1vdW50c0ZJTkFMX0lzTnVsbABEYXRlVGltZQBn
ZXRfTGFzdFVwZGF0ZWRUaW1lc3RhbXBEZXJpdmVkAGdldF9MYXN0VXBkYXRlZFRpbWVzdGFtcERl
cml2ZWRfSXNOdWxsAE5leHRSb3cARW5kT2ZSb3dzZXQASURTVEFHSU5HAElEU1RBR0lOR19Jc051
bGwAYWdlbmN5U1RBR0lORwBhZ2VuY3lTVEFHSU5HX0lzTnVsbAB5ZWFyU1RBR0lORwB5ZWFyU1RB
R0lOR19Jc051bGwAZGVwYXJ0bWVudFNUQUdJTkcAZGVwYXJ0bWVudFNUQUdJTkdfSXNOdWxsAGV4
cGVuc2VjYXRlZ29yeVNUQUdJTkcAZXhwZW5zZWNhdGVnb3J5U1RBR0lOR19Jc051bGwAYnVkZ2V0
Y29kZVNUQUdJTkcAYnVkZ2V0Y29kZVNUQUdJTkdfSXNOdWxsAGJ1ZGdldG5hbWVTVEFHSU5HAGJ1
ZGdldG5hbWVTVEFHSU5HX0lzTnVsbABidWRnZXRhbW91bnRzU1RBR0lORwBidWRnZXRhbW91bnRz
U1RBR0lOR19Jc051bGwAZXhwZW5kaXR1cmVhbW91bnRzU1RBR0lORwBleHBlbmRpdHVyZWFtb3Vu
dHNTVEFHSU5HX0lzTnVsbABTdGFnaW5nSURGSU5BTABTdGFnaW5nSURGSU5BTF9Jc051bGwAYWdl
bmN5RklOQUwAYWdlbmN5RklOQUxfSXNOdWxsAHllYXJGSU5BTAB5ZWFyRklOQUxfSXNOdWxsAGRl
cGFydG1lbnRGSU5BTABkZXBhcnRtZW50RklOQUxfSXNOdWxsAGV4cGVuc2VjYXRlZ29yeUZJTkFM
AGV4cGVuc2VjYXRlZ29yeUZJTkFMX0lzTnVsbABidWRnZXRjb2RlRklOQUwAYnVkZ2V0Y29kZUZJ
TkFMX0lzTnVsbABidWRnZXRuYW1lRklOQUwAYnVkZ2V0bmFtZUZJTkFMX0lzTnVsbABidWRnZXRh
bW91bnRzRklOQUwAYnVkZ2V0YW1vdW50c0ZJTkFMX0lzTnVsbABleHBlbmRpdHVyZWFtb3VudHNG
SU5BTABleHBlbmRpdHVyZWFtb3VudHNGSU5BTF9Jc051bGwATGFzdFVwZGF0ZWRUaW1lc3RhbXBE
ZXJpdmVkAExhc3RVcGRhdGVkVGltZXN0YW1wRGVyaXZlZF9Jc051bGwAUGFyZW50Q29tcG9uZW50
AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9i
YWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZh
dWx0AERlZmF1bHQASW5wdXRJRABJbnB1dE5hbWUAQnVmZmVyAE91dHB1dE1hcABSb3cAQnVmZmVy
Q29sdW1uSW5kZXhlcwB2YWx1ZQBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBU
YXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmli
dXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDXzNlMTgyNTczM2VjNzRiOWJiYmM2MmY4
YjQ1MGMzMGYzAFN0cmluZwBTdHJpbmdDb21wYXJpc29uAEVxdWFscwBHZXRDb2x1bW5JbmRleGVz
AFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAG9wX0VxdWFsaXR5AEV4Y2Vw
dGlvbgBHZXRJbnQzMgBJbnQzMgBzZXRfSXRlbQBJc051bGwAU2V0TnVsbABJbnZhbGlkT3BlcmF0
aW9uRXhjZXB0aW9uAEdldFN0cmluZwBHZXREYXRlVGltZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRp
dG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAC5jY3RvcgBTQ18zZTE4MjU3MzNlYzc0YjliYmJjNjJmOGI0NTBjMzBmMy5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAAA9JAG4AcAB1AHQAIAAwAAADLQABC0UA
UgBSAE8AUgAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAA
YgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBs
AHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAHFTAEMA
XwAzAGUAMQA4ADIANQA3ADMAMwBlAGMANwA0AGIAOQBiAGIAYgBjADYAMgBmADgAYgA0ADUAMABj
ADMAMABmADMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAPBqSrF8
Q9JEsCc1/aZ2i1wACImEXc2AgMyRCLd6XFYZNOCJAwYSFAMGEhgDIAABCSAEAQgOEhUSGQUgAQES
EAkgAwESFR0IEhkDIAAIBCABAQgDIAACBCABAQIDIAAOBCABAQ4EIAARHQMoAAgDKAACAygADgQo
ABEdAwYSBQUgAQESBQMGEiEDBhIlBAAAEiEEAAASJQUAAQESJQQIABIhBAgAEiUDBhIgBAAAEiAE
CAASIAYgAgIOEV0FIAEdCAgEAQAAAAUAAgIODgMGEhUDBh0IBCABCAgFIAIBCBwEIAECCAQgAQ4I
BSABER0IBgABEnUReQQgABJ9BiACAQ4SfQQHARIhBiABARGAhQgBAAIAAAAAAAMAAAFHAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJh
bWV3b3JrIDQoAQAjU0NfM2UxODI1NzMzZWM3NGI5YmJiYzYyZjhiNDUwYzMwZjMAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAyMAAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhy
b3dzAQAAALREAAAAAAAAAAAAAM5EAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADARAAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACw
AwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAlp0uHQAAAQCWnS4dPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
EAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAw
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADMAZQAxADgA
MgA1ADcAMwAzAGUAYwA3ADQAYgA5AGIAYgBiAGMANgAyAGYAOABiADQANQAwAGMAMwAwAGYAMwAA
AEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADQANwAwAC4ANAAwADMA
NAAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADMAZQAxADgAMgA1
ADcAMwAzAGUAYwA3ADQAYgA5AGIAYgBiAGMANgAyAGYAOABiADQANQAwAGMAMwAwAGYAMwAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgAwAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAQwBfADMAZQAxADgAMgA1ADcAMwAzAGUAYwA3ADQAYgA5AGIAYgBiAGMANgAyAGYAOABi
ADQANQAwAGMAMwAwAGYAMwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAEMAXwAzAGUAMQA4ADIANQA3ADMAMwBlAGMANwA0AGIAOQBiAGIAYgBjADYAMgBmADgAYgA0
ADUAMABjADMAMABmADMAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADcANAA3ADAALgA0ADAAMwA0ADIAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADcANAA3ADAALgA0ADAAMwA0ADIAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA4DQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_3e1825733ec74b9bbbc62f8b450c30f3</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">26ce08dbc005fcf59eabf7caa4932210</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">a6d4c971f86e95042e591086a98a678a8e2cc6cb</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[ID_STAGING]"
                      cachedDataType="i4"
                      cachedName="ID_STAGING"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[agency_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[year_STAGING]"
                      cachedDataType="i4"
                      cachedName="year_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[department_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[expense_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[budget_code_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_code_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[budget_name_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_name_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[budget_amounts_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_amounts_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[expenditure_amounts_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expenditure_amounts_STAGING"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[agency_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[year_FINAL]"
                      cachedDataType="i4"
                      cachedName="year_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[department_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[expense_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[budget_code_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_code_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[budget_name_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_name_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[budget_amounts_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_amounts_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[expenditure_amounts_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expenditure_amounts_FINAL"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Staging - Budget_Staging"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Budget_Staging]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[ID_STAGING]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[ID_STAGING]"
                      name="ID_STAGING"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[agency_STAGING]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[agency]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[agency_STAGING]"
                      name="agency_STAGING"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[year_STAGING]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[year]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[year_STAGING]"
                      name="year_STAGING"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[department_STAGING]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[department]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[department_STAGING]"
                      name="department_STAGING"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[expense_category_STAGING]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[expense_category]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[expense_category_STAGING]"
                      name="expense_category_STAGING"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[budget_code_STAGING]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[budget_code]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[budget_code_STAGING]"
                      name="budget_code_STAGING"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[budget_name_STAGING]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[budget_name]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[budget_name_STAGING]"
                      name="budget_name_STAGING"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[budget_amounts_STAGING]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[budget_amounts]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[budget_amounts_STAGING]"
                      name="budget_amounts_STAGING"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[expenditure_amounts_STAGING]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[expenditure_amounts]"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].Columns[expenditure_amounts_STAGING]"
                      name="expenditure_amounts_STAGING"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      name="LastUpdatedTimestamp" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[agency]"
                      dataType="wstr"
                      length="255"
                      name="agency" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[year]"
                      dataType="i4"
                      name="year" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[department]"
                      dataType="wstr"
                      length="255"
                      name="department" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[expense_category]"
                      dataType="wstr"
                      length="255"
                      name="expense_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[budget_code]"
                      dataType="wstr"
                      length="255"
                      name="budget_code" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[budget_name]"
                      dataType="wstr"
                      length="255"
                      name="budget_name" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[budget_amounts]"
                      dataType="wstr"
                      length="255"
                      name="budget_amounts" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output].ExternalColumns[expenditure_amounts]"
                      dataType="wstr"
                      length="255"
                      name="expenditure_amounts" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[agency]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[agency]"
                      name="agency" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[year]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[year]"
                      name="year" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[department]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[department]"
                      name="department" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[expense_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[expense_category]"
                      name="expense_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[budget_code]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[budget_code]"
                      name="budget_code" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[budget_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[budget_name]"
                      name="budget_name" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[budget_amounts]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[budget_amounts]"
                      name="budget_amounts" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[expenditure_amounts]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[expenditure_amounts]"
                      name="expenditure_amounts" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget)"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update changed records (Final - Budget)"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE
    dbo.Budget
SET
    dbo.Budget.[LastUpdatedTimestamp] = ?,
    dbo.Budget.[agency] = ?,
    dbo.Budget.[year] = ?,
    dbo.Budget.[department] = ?,
    dbo.Budget.[expense_category] = ?,
    dbo.Budget.[budget_code] = ?,
    dbo.Budget.[budget_name] = ?,
    dbo.Budget.[budget_amounts] = ?,
    dbo.Budget.[expenditure_amounts] = ?
WHERE
    dbo.Budget.[StagingID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].Columns[agency_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].Columns[year_STAGING]"
                      cachedDataType="i4"
                      cachedName="year_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[year_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].Columns[department_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].Columns[expense_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].Columns[budget_code_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_code_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_code_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].Columns[budget_name_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_name_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_name_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].Columns[budget_amounts_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="budget_amounts_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[budget_amounts_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].Columns[expenditure_amounts_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expenditure_amounts_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expenditure_amounts_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].Columns[ID_STAGING]"
                      cachedDataType="i4"
                      cachedName="ID_STAGING"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="dbTimeStamp"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="wstr"
                      length="255"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="wstr"
                      length="255"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="wstr"
                      length="255"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="wstr"
                      length="255"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="wstr"
                      length="255"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      dataType="wstr"
                      length="255"
                      name="Param_7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      dataType="wstr"
                      length="255"
                      name="Param_8">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      dataType="i4"
                      name="Param_9">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Data Conversion Output]"
              endId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
              name="Data Conversion Output"
              startId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Data Conversion - NOT IN USER AT THE MOMENT.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Delete(StagingID_FINAL not Match any in ID_STAGING)]"
              endId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget).Inputs[OLE DB Command Input]"
              name="Delete(StagingID_FINAL not Match any in ID_STAGING)"
              startId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Delete(StagingID_FINAL not Match any in ID_STAGING)]" />
            <path
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Derived Column Output]"
              endId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Outputs[Derived Column Output]" />
            <path
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Insert(ID_STAGING not Match any in StagingID_FINAL)]"
              endId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000.Inputs[OLE DB Destination Input]"
              name="Insert(ID_STAGING not Match any in StagingID_FINAL)"
              startId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Insert(ID_STAGING not Match any in StagingID_FINAL)]" />
            <path
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Merge Join Output]"
              endId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table.Inputs[Derived Column Input]"
              name="Merge Join Output"
              startId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output]" />
            <path
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output]"
              endId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output1]"
              endId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Output 0]"
              endId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Data Conversion - NOT IN USER AT THE MOMENT.Inputs[Data Conversion Input]"
              name="Output 0"
              startId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Outputs[Output 0]" />
            <path
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Sort Output]"
              endId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC.Outputs[Sort Output]" />
            <path
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Sort Output1]"
              endId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC.Outputs[Sort Output]" />
            <path
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Update(ID Match)]"
              endId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]"
              name="Update(ID Match)"
              startId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Update(ID Match)]" />
            <path
              refId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Update-able Records]"
              endId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget).Inputs[OLE DB Command Input]"
              name="Update-able Records"
              startId="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Update-able Records]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{1E7A7445-8DB9-49F1-B54D-6EF7A7264E38}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input].Columns[ID_STAGING]"
                      cachedDataType="i4"
                      cachedName="ID_STAGING"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Update(ID Match)]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Update(ID Match)"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(ID_STAGING) &amp;&amp; !ISNULL(StagingID_FINAL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Insert(ID_STAGING not Match any in StagingID_FINAL)]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Insert(ID_STAGING not Match any in StagingID_FINAL)"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(ID_STAGING) &amp;&amp; ISNULL(StagingID_FINAL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Delete(StagingID_FINAL not Match any in ID_STAGING)]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Delete(StagingID_FINAL not Match any in ID_STAGING)"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(ID_STAGING) &amp;&amp; !ISNULL(StagingID_FINAL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Contracts - Sort StagingID ASC"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[LastUpdatedTimestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[LastUpdatedTimestamp]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[document_code]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_code"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[document_code]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_id"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_id]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[contract_includes_sub_vendors]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_includes_sub_vendors"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[contract_includes_sub_vendors]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[vendor_record_type]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_record_type"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[vendor_record_type]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_vendor]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_vendor_mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_mwbe_category"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_vendor_mwbe_category]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_purpose"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_purpose]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_current_amount]"
                      cachedDataType="cy"
                      cachedName="prime_contract_current_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_current_amount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_original_amount]"
                      cachedDataType="cy"
                      cachedName="prime_contract_original_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_original_amount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_vendor_spent_to_date]"
                      cachedDataType="cy"
                      cachedName="prime_vendor_spent_to_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_vendor_spent_to_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_start_date]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_start_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_start_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_end_date]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_end_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_end_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_registration_date]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_registration_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_registration_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contracting_agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contracting_agency"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contracting_agency]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_version]"
                      cachedDataType="i4"
                      cachedName="prime_contract_version"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_version]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[parent_contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="parent_contract_id"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[parent_contract_id]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_type]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_type"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_type]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_award_method]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_award_method"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_award_method]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_expense_category]"
                      cachedDataType="wstr"
                      cachedLength="265"
                      cachedName="prime_contract_expense_category"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_expense_category]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_industry"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_pin]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_pin"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_pin]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[prime_contract_apt_pin]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_apt_pin"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_apt_pin]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[sub_vendor_mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_mwbe_category"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor_mwbe_category]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[sub_contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="476"
                      cachedName="sub_contract_purpose"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_purpose]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[sub_vendor_status_in_pip]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_status_in_pip"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor_status_in_pip]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[sub_contract_industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_industry"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[sub_contract_current_amount]"
                      cachedDataType="cy"
                      cachedName="sub_contract_current_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_current_amount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[sub_contract_original_amount]"
                      cachedDataType="cy"
                      cachedName="sub_contract_original_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_original_amount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[sub_vendor_paid_to_date]"
                      cachedDataType="cy"
                      cachedName="sub_vendor_paid_to_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor_paid_to_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[sub_contract_start_date]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_start_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_start_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[sub_contract_end_date]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_end_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_end_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input].Columns[StagingID]"
                      cachedDataType="i4"
                      cachedName="StagingID"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[StagingID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[LastUpdatedTimestamp]"
                      name="LastUpdatedTimestamp">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[LastUpdatedTimestamp]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[document_code]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[document_code]"
                      name="document_code">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[document_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_id]"
                      name="prime_contract_id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[contract_includes_sub_vendors]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[contract_includes_sub_vendors]"
                      name="contract_includes_sub_vendors">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[contract_includes_sub_vendors]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[vendor_record_type]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[vendor_record_type]"
                      name="vendor_record_type">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[vendor_record_type]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_vendor]"
                      name="prime_vendor">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_vendor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_vendor_mwbe_category]"
                      name="prime_vendor_mwbe_category">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_vendor_mwbe_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_purpose]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_purpose]"
                      name="prime_contract_purpose">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_purpose]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_current_amount]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_current_amount]"
                      name="prime_contract_current_amount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_current_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_original_amount]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_original_amount]"
                      name="prime_contract_original_amount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_original_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_vendor_spent_to_date]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_vendor_spent_to_date]"
                      name="prime_vendor_spent_to_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_vendor_spent_to_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_start_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_start_date]"
                      name="prime_contract_start_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_start_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_end_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_end_date]"
                      name="prime_contract_end_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_end_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_registration_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_registration_date]"
                      name="prime_contract_registration_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_registration_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contracting_agency]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contracting_agency]"
                      name="prime_contracting_agency">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contracting_agency]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_version]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_version]"
                      name="prime_contract_version">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_version]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[parent_contract_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[parent_contract_id]"
                      name="parent_contract_id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[parent_contract_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_type]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_type]"
                      name="prime_contract_type">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_type]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_award_method]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_award_method]"
                      name="prime_contract_award_method">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_award_method]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_expense_category]"
                      dataType="wstr"
                      length="265"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_expense_category]"
                      name="prime_contract_expense_category">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_expense_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_industry]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_industry]"
                      name="prime_contract_industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_pin]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_pin]"
                      name="prime_contract_pin">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_pin]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_apt_pin]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_apt_pin]"
                      name="prime_contract_apt_pin">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_apt_pin]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_vendor]"
                      name="sub_vendor">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_vendor_mwbe_category]"
                      name="sub_vendor_mwbe_category">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor_mwbe_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_purpose]"
                      dataType="wstr"
                      length="476"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_purpose]"
                      name="sub_contract_purpose">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_purpose]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_vendor_status_in_pip]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_vendor_status_in_pip]"
                      name="sub_vendor_status_in_pip">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor_status_in_pip]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_industry]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_industry]"
                      name="sub_contract_industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_current_amount]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_current_amount]"
                      name="sub_contract_current_amount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_current_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_original_amount]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_original_amount]"
                      name="sub_contract_original_amount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_original_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_vendor_paid_to_date]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_vendor_paid_to_date]"
                      name="sub_vendor_paid_to_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor_paid_to_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_start_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_start_date]"
                      name="sub_contract_start_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_start_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_end_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_end_date]"
                      name="sub_contract_end_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_end_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_reference_id]"
                      name="sub_contract_reference_id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[StagingID]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[StagingID]"
                      name="StagingID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[StagingID]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Contracts_Staging - Sort ID ASC"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[ID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[LastUpdatedTimestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[LastUpdatedTimestamp]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[document_code]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_code"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[document_code]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_id"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_id]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[contract_includes_sub_vendors]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_includes_sub_vendors"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[contract_includes_sub_vendors]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[vendor_record_type]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_record_type"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[vendor_record_type]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_vendor]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_vendor_mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_mwbe_category"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_vendor_mwbe_category]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_purpose"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_purpose]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_current_amount]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_current_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_current_amount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_original_amount]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_original_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_original_amount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_vendor_spent_to_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_spent_to_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_vendor_spent_to_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_start_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_start_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_start_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_end_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_end_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_end_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_registration_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_registration_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_registration_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contracting_agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contracting_agency"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contracting_agency]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_version]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_version"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_version]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[parent_contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="parent_contract_id"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[parent_contract_id]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_type]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_type"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_type]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_award_method]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_award_method"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_award_method]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_expense_category]"
                      cachedDataType="wstr"
                      cachedLength="265"
                      cachedName="prime_contract_expense_category"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_expense_category]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_industry"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_pin]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_pin"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_pin]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[prime_contract_apt_pin]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_apt_pin"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_apt_pin]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[sub_vendor_mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_mwbe_category"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor_mwbe_category]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[sub_contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="476"
                      cachedName="sub_contract_purpose"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_purpose]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[sub_vendor_status_in_pip]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_status_in_pip"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor_status_in_pip]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[sub_contract_industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_industry"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_industry]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[sub_contract_current_amount]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_current_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_current_amount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[sub_contract_original_amount]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_original_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_original_amount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[sub_vendor_paid_to_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_paid_to_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor_paid_to_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[sub_contract_start_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_start_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_start_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[sub_contract_end_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_end_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_end_date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[ID]"
                      name="ID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[ID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[LastUpdatedTimestamp]"
                      name="LastUpdatedTimestamp">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[LastUpdatedTimestamp]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[document_code]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[document_code]"
                      name="document_code">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[document_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_id]"
                      name="prime_contract_id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[contract_includes_sub_vendors]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[contract_includes_sub_vendors]"
                      name="contract_includes_sub_vendors">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[contract_includes_sub_vendors]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[vendor_record_type]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[vendor_record_type]"
                      name="vendor_record_type">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[vendor_record_type]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_vendor]"
                      name="prime_vendor">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_vendor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_vendor_mwbe_category]"
                      name="prime_vendor_mwbe_category">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_vendor_mwbe_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_purpose]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_purpose]"
                      name="prime_contract_purpose">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_purpose]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_current_amount]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_current_amount]"
                      name="prime_contract_current_amount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_current_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_original_amount]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_original_amount]"
                      name="prime_contract_original_amount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_original_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_vendor_spent_to_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_vendor_spent_to_date]"
                      name="prime_vendor_spent_to_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_vendor_spent_to_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_start_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_start_date]"
                      name="prime_contract_start_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_start_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_end_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_end_date]"
                      name="prime_contract_end_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_end_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_registration_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_registration_date]"
                      name="prime_contract_registration_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_registration_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contracting_agency]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contracting_agency]"
                      name="prime_contracting_agency">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contracting_agency]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_version]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_version]"
                      name="prime_contract_version">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_version]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[parent_contract_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[parent_contract_id]"
                      name="parent_contract_id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[parent_contract_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_type]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_type]"
                      name="prime_contract_type">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_type]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_award_method]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_award_method]"
                      name="prime_contract_award_method">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_award_method]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_expense_category]"
                      dataType="wstr"
                      length="265"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_expense_category]"
                      name="prime_contract_expense_category">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_expense_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_industry]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_industry]"
                      name="prime_contract_industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_pin]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_pin]"
                      name="prime_contract_pin">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_pin]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_apt_pin]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_apt_pin]"
                      name="prime_contract_apt_pin">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_apt_pin]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_vendor]"
                      name="sub_vendor">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_vendor_mwbe_category]"
                      name="sub_vendor_mwbe_category">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor_mwbe_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_purpose]"
                      dataType="wstr"
                      length="476"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_purpose]"
                      name="sub_contract_purpose">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_purpose]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_vendor_status_in_pip]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_vendor_status_in_pip]"
                      name="sub_vendor_status_in_pip">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor_status_in_pip]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_industry]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_industry]"
                      name="sub_contract_industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_current_amount]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_current_amount]"
                      name="sub_contract_current_amount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_current_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_original_amount]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_original_amount]"
                      name="sub_contract_original_amount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_original_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_vendor_paid_to_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_vendor_paid_to_date]"
                      name="sub_vendor_paid_to_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor_paid_to_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_start_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_start_date]"
                      name="sub_contract_start_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_start_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_end_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_end_date]"
                      name="sub_contract_end_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_end_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_reference_id]"
                      name="sub_contract_reference_id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[prime_contract_current_amount_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_current_amount_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_current_amount_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[prime_contract_original_amount_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_original_amount_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_original_amount_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[prime_vendor_spent_to_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_spent_to_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_spent_to_date_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[prime_contract_start_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_start_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_start_date_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[prime_contract_end_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_end_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_end_date_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[prime_contract_registration_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_registration_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_registration_date_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[prime_contract_version_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_version_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_version_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[sub_contract_current_amount_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_current_amount_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_current_amount_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[sub_contract_original_amount_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_original_amount_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_original_amount_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[sub_vendor_paid_to_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_paid_to_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_paid_to_date_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[sub_contract_start_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_start_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_start_date_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[sub_contract_end_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_end_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_end_date_STAGING]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_current_amount_STAGING_DataTypeConverted]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_current_amount_STAGING_DataTypeConverted]"
                      name="prime_contract_current_amount_STAGING_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_current_amount_STAGING]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_original_amount_STAGING_DataTypeConverted]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_original_amount_STAGING_DataTypeConverted]"
                      name="prime_contract_original_amount_STAGING_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_original_amount_STAGING]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_vendor_spent_to_date_STAGING_DataTypeConverted]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_vendor_spent_to_date_STAGING_DataTypeConverted]"
                      name="prime_vendor_spent_to_date_STAGING_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_spent_to_date_STAGING]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_start_date_STAGING_DataTypeConverted]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_start_date_STAGING_DataTypeConverted]"
                      name="prime_contract_start_date_STAGING_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_start_date_STAGING]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_end_date_STAGING_DataTypeConverted]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_end_date_STAGING_DataTypeConverted]"
                      name="prime_contract_end_date_STAGING_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_end_date_STAGING]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_registration_date_STAGING_DataTypeConverted]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_registration_date_STAGING_DataTypeConverted]"
                      name="prime_contract_registration_date_STAGING_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_registration_date_STAGING]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_version_STAGING_DataTypeConverted]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_version_STAGING_DataTypeConverted]"
                      name="prime_contract_version_STAGING_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_version_STAGING]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_current_amount_STAGING_DataTypeConverted]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_current_amount_STAGING_DataTypeConverted]"
                      name="sub_contract_current_amount_STAGING_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_current_amount_STAGING]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_original_amount_STAGING_DataTypeConverted]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_original_amount_STAGING_DataTypeConverted]"
                      name="sub_contract_original_amount_STAGING_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_original_amount_STAGING]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_vendor_paid_to_date_STAGING_DataTypeConverted]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_vendor_paid_to_date_STAGING_DataTypeConverted]"
                      name="sub_vendor_paid_to_date_STAGING_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_paid_to_date_STAGING]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_start_date_STAGING_DataTypeConverted]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_start_date_STAGING_DataTypeConverted]"
                      name="sub_contract_start_date_STAGING_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_start_date_STAGING]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_end_date_STAGING_DataTypeConverted]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_end_date_STAGING_DataTypeConverted]"
                      name="sub_contract_end_date_STAGING_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_end_date_STAGING]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts)"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Delete records (Final - Contracts)"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">DELETE FROM dbo.Contracts
WHERE dbo.Contracts.[StagingID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Inputs[OLE DB Command Input].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derive Current Datetime for Final Contracts table"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]"
                      name="LastUpdatedTimestamp_Derived"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Final - Contracts"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Contracts]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[LastUpdatedTimestamp]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[LastUpdatedTimestamp]"
                      name="LastUpdatedTimestamp"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[document_code]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[document_code]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[document_code]"
                      name="document_code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_id]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_id]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_id]"
                      name="prime_contract_id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[contract_includes_sub_vendors]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[contract_includes_sub_vendors]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[contract_includes_sub_vendors]"
                      name="contract_includes_sub_vendors"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[vendor_record_type]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[vendor_record_type]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[vendor_record_type]"
                      name="vendor_record_type"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_vendor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_vendor]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_vendor]"
                      name="prime_vendor"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_vendor_mwbe_category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_vendor_mwbe_category]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_vendor_mwbe_category]"
                      name="prime_vendor_mwbe_category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_purpose]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_purpose]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_purpose]"
                      name="prime_contract_purpose"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_current_amount]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_current_amount]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_current_amount]"
                      name="prime_contract_current_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_original_amount]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_original_amount]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_original_amount]"
                      name="prime_contract_original_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_vendor_spent_to_date]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_vendor_spent_to_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_vendor_spent_to_date]"
                      name="prime_vendor_spent_to_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_start_date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_start_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_start_date]"
                      name="prime_contract_start_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_end_date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_end_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_end_date]"
                      name="prime_contract_end_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_registration_date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_registration_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_registration_date]"
                      name="prime_contract_registration_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contracting_agency]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contracting_agency]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contracting_agency]"
                      name="prime_contracting_agency"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_version]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_version]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_version]"
                      name="prime_contract_version"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[parent_contract_id]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[parent_contract_id]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[parent_contract_id]"
                      name="parent_contract_id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_type]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_type]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_type]"
                      name="prime_contract_type"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_award_method]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_award_method]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_award_method]"
                      name="prime_contract_award_method"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_expense_category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_expense_category]"
                      length="265"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_expense_category]"
                      name="prime_contract_expense_category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_industry]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_industry]"
                      name="prime_contract_industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_pin]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_pin]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_pin]"
                      name="prime_contract_pin"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_apt_pin]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_apt_pin]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[prime_contract_apt_pin]"
                      name="prime_contract_apt_pin"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor]"
                      name="sub_vendor"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor_mwbe_category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_mwbe_category]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor_mwbe_category]"
                      name="sub_vendor_mwbe_category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_purpose]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_purpose]"
                      length="476"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_purpose]"
                      name="sub_contract_purpose"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor_status_in_pip]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_status_in_pip]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor_status_in_pip]"
                      name="sub_vendor_status_in_pip"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_industry]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_industry]"
                      name="sub_contract_industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_current_amount]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_current_amount]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_current_amount]"
                      name="sub_contract_current_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_original_amount]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_original_amount]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_original_amount]"
                      name="sub_contract_original_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor_paid_to_date]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_paid_to_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_vendor_paid_to_date]"
                      name="sub_vendor_paid_to_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_start_date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_start_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_start_date]"
                      name="sub_contract_start_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_end_date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_end_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_end_date]"
                      name="sub_contract_end_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_reference_id]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]"
                      name="sub_contract_reference_id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[StagingID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[StagingID]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].Columns[StagingID]"
                      name="StagingID"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      name="LastUpdatedTimestamp" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[document_code]"
                      dataType="wstr"
                      length="255"
                      name="document_code" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_id]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[contract_includes_sub_vendors]"
                      dataType="wstr"
                      length="255"
                      name="contract_includes_sub_vendors" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[vendor_record_type]"
                      dataType="wstr"
                      length="255"
                      name="vendor_record_type" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_vendor]"
                      dataType="wstr"
                      length="255"
                      name="prime_vendor" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      name="prime_vendor_mwbe_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_purpose]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_purpose" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_current_amount]"
                      dataType="cy"
                      name="prime_contract_current_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_original_amount]"
                      dataType="cy"
                      name="prime_contract_original_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_vendor_spent_to_date]"
                      dataType="cy"
                      name="prime_vendor_spent_to_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_start_date]"
                      dataType="dbDate"
                      name="prime_contract_start_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_end_date]"
                      dataType="dbDate"
                      name="prime_contract_end_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_registration_date]"
                      dataType="dbDate"
                      name="prime_contract_registration_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contracting_agency]"
                      dataType="wstr"
                      length="255"
                      name="prime_contracting_agency" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_version]"
                      dataType="i4"
                      name="prime_contract_version" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[parent_contract_id]"
                      dataType="wstr"
                      length="255"
                      name="parent_contract_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_type]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_type" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_award_method]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_award_method" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_expense_category]"
                      dataType="wstr"
                      length="265"
                      name="prime_contract_expense_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_industry]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_industry" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_pin]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_pin" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_apt_pin]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_apt_pin" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor_mwbe_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_purpose]"
                      dataType="wstr"
                      length="476"
                      name="sub_contract_purpose" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_status_in_pip]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor_status_in_pip" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_industry]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_industry" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_current_amount]"
                      dataType="cy"
                      name="sub_contract_current_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_original_amount]"
                      dataType="cy"
                      name="sub_contract_original_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_paid_to_date]"
                      dataType="cy"
                      name="sub_vendor_paid_to_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_start_date]"
                      dataType="dbDate"
                      name="sub_contract_start_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_end_date]"
                      dataType="dbDate"
                      name="sub_contract_end_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_reference_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output].ExternalColumns[StagingID]"
                      dataType="i4"
                      name="StagingID" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[StagingID]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[StagingID]"
                      name="StagingID" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[LastUpdatedTimestamp]"
                      name="LastUpdatedTimestamp" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[document_code]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[document_code]"
                      name="document_code" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_id]"
                      name="prime_contract_id" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[contract_includes_sub_vendors]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[contract_includes_sub_vendors]"
                      name="contract_includes_sub_vendors" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[vendor_record_type]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[vendor_record_type]"
                      name="vendor_record_type" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_vendor]"
                      name="prime_vendor" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_vendor_mwbe_category]"
                      name="prime_vendor_mwbe_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_purpose]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_purpose]"
                      name="prime_contract_purpose" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_current_amount]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_current_amount]"
                      name="prime_contract_current_amount" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_original_amount]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_original_amount]"
                      name="prime_contract_original_amount" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_vendor_spent_to_date]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_vendor_spent_to_date]"
                      name="prime_vendor_spent_to_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_start_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_start_date]"
                      name="prime_contract_start_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_end_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_end_date]"
                      name="prime_contract_end_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_registration_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_registration_date]"
                      name="prime_contract_registration_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contracting_agency]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contracting_agency]"
                      name="prime_contracting_agency" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_version]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_version]"
                      name="prime_contract_version" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[parent_contract_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[parent_contract_id]"
                      name="parent_contract_id" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_type]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_type]"
                      name="prime_contract_type" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_award_method]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_award_method]"
                      name="prime_contract_award_method" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_expense_category]"
                      dataType="wstr"
                      length="265"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_expense_category]"
                      name="prime_contract_expense_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_industry]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_industry]"
                      name="prime_contract_industry" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_pin]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_pin]"
                      name="prime_contract_pin" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_apt_pin]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[prime_contract_apt_pin]"
                      name="prime_contract_apt_pin" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_vendor]"
                      name="sub_vendor" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_vendor_mwbe_category]"
                      name="sub_vendor_mwbe_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_purpose]"
                      dataType="wstr"
                      length="476"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_purpose]"
                      name="sub_contract_purpose" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_vendor_status_in_pip]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_vendor_status_in_pip]"
                      name="sub_vendor_status_in_pip" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_industry]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_industry]"
                      name="sub_contract_industry" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_current_amount]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_current_amount]"
                      name="sub_contract_current_amount" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_original_amount]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_original_amount]"
                      name="sub_contract_original_amount" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_vendor_paid_to_date]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_vendor_paid_to_date]"
                      name="sub_vendor_paid_to_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_start_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_start_date]"
                      name="sub_contract_start_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_end_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_end_date]"
                      name="sub_contract_end_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[sub_contract_reference_id]"
                      name="sub_contract_reference_id" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Find Update-able record"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[document_code_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_code_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[document_code_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_code_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_id_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_id_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[contract_includes_sub_vendors_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_includes_sub_vendors_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[vendor_record_type_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_record_type_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_vendor_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_vendor_mwbe_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_mwbe_category_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_purpose_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_purpose_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contracting_agency_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contracting_agency_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[parent_contract_id_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="parent_contract_id_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_type_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_type_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_award_method_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_award_method_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_expense_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="265"
                      cachedName="prime_contract_expense_category_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_industry_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_industry_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_pin_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_pin_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_apt_pin_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_apt_pin_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_vendor_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_vendor_mwbe_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_mwbe_category_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_purpose_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="476"
                      cachedName="sub_contract_purpose_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_vendor_status_in_pip_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_status_in_pip_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_industry_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_industry_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_reference_id_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_id_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[contract_includes_sub_vendors_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_includes_sub_vendors_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[vendor_record_type_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_record_type_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_vendor_mwbe_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_mwbe_category_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_purpose_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_purpose_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_current_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="prime_contract_current_amount_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_current_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_original_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="prime_contract_original_amount_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_original_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_vendor_spent_to_date_FINAL]"
                      cachedDataType="cy"
                      cachedName="prime_vendor_spent_to_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_spent_to_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_start_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_start_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_start_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_end_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_end_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_end_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_registration_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_registration_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_registration_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contracting_agency_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contracting_agency_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_version_FINAL]"
                      cachedDataType="i4"
                      cachedName="prime_contract_version_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_version_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[parent_contract_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="parent_contract_id_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_type_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_type_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_award_method_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_award_method_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_expense_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="265"
                      cachedName="prime_contract_expense_category_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_industry_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_industry_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_pin_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_pin_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_apt_pin_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_apt_pin_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_vendor_mwbe_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_mwbe_category_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_purpose_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="476"
                      cachedName="sub_contract_purpose_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_vendor_status_in_pip_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_status_in_pip_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_industry_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_industry_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_current_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="sub_contract_current_amount_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_current_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_original_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="sub_contract_original_amount_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_original_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_vendor_paid_to_date_FINAL]"
                      cachedDataType="cy"
                      cachedName="sub_vendor_paid_to_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_paid_to_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_start_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_start_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_start_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_end_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_end_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_end_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_reference_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_current_amount_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="prime_contract_current_amount_STAGING_DataTypeConverted"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_current_amount_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_original_amount_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="prime_contract_original_amount_STAGING_DataTypeConverted"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_original_amount_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_vendor_spent_to_date_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="prime_vendor_spent_to_date_STAGING_DataTypeConverted"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_vendor_spent_to_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_start_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_start_date_STAGING_DataTypeConverted"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_start_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_end_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_end_date_STAGING_DataTypeConverted"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_end_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_registration_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_registration_date_STAGING_DataTypeConverted"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_registration_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[prime_contract_version_STAGING_DataTypeConverted]"
                      cachedDataType="i4"
                      cachedName="prime_contract_version_STAGING_DataTypeConverted"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_version_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_current_amount_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="sub_contract_current_amount_STAGING_DataTypeConverted"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_current_amount_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_original_amount_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="sub_contract_original_amount_STAGING_DataTypeConverted"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_original_amount_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_vendor_paid_to_date_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="sub_vendor_paid_to_date_STAGING_DataTypeConverted"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_vendor_paid_to_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_start_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_start_date_STAGING_DataTypeConverted"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_start_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[sub_contract_end_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_end_date_STAGING_DataTypeConverted"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_end_date_STAGING_DataTypeConverted]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Update-able Records]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Update-able Records"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">(![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_current_amount_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_current_amount_STAGING_DataTypeConverted]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_current_amount_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_current_amount_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_current_amount_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_current_amount_STAGING_DataTypeConverted]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_current_amount_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_current_amount_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_original_amount_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_original_amount_STAGING_DataTypeConverted]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_original_amount_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_original_amount_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_original_amount_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_original_amount_STAGING_DataTypeConverted]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_original_amount_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_original_amount_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_spent_to_date_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_vendor_spent_to_date_STAGING_DataTypeConverted]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_spent_to_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_vendor_spent_to_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_spent_to_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_vendor_spent_to_date_STAGING_DataTypeConverted]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_spent_to_date_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_vendor_spent_to_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_start_date_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_start_date_STAGING_DataTypeConverted]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_start_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_start_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_start_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_start_date_STAGING_DataTypeConverted]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_start_date_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_start_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_end_date_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_end_date_STAGING_DataTypeConverted]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_end_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_end_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_end_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_end_date_STAGING_DataTypeConverted]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_end_date_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_end_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_registration_date_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_registration_date_STAGING_DataTypeConverted]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_registration_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_registration_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_registration_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_registration_date_STAGING_DataTypeConverted]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_registration_date_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_registration_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_version_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_version_STAGING_DataTypeConverted]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_version_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_version_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_version_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_version_STAGING_DataTypeConverted]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_version_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_version_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_current_amount_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_current_amount_STAGING_DataTypeConverted]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_current_amount_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_current_amount_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_current_amount_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_current_amount_STAGING_DataTypeConverted]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_current_amount_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_current_amount_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_original_amount_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_original_amount_STAGING_DataTypeConverted]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_original_amount_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_original_amount_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_original_amount_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_original_amount_STAGING_DataTypeConverted]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_original_amount_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_original_amount_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_paid_to_date_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_vendor_paid_to_date_STAGING_DataTypeConverted]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_paid_to_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_vendor_paid_to_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_paid_to_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_vendor_paid_to_date_STAGING_DataTypeConverted]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_paid_to_date_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_vendor_paid_to_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_start_date_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_start_date_STAGING_DataTypeConverted]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_start_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_start_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_start_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_start_date_STAGING_DataTypeConverted]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_start_date_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_start_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_end_date_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_end_date_STAGING_DataTypeConverted]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_end_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_end_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_end_date_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_end_date_STAGING_DataTypeConverted]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_end_date_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_end_date_STAGING_DataTypeConverted]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_STAGING]})) || ([ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_STAGING]})) || (![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_STAGING]}) &amp;&amp; (#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]} != #{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_STAGING]}))</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">(!ISNULL(document_code_FINAL) &amp;&amp; ISNULL(document_code_STAGING)) || (ISNULL(document_code_FINAL) &amp;&amp; !ISNULL(document_code_STAGING)) || (!ISNULL(document_code_FINAL) &amp;&amp; !ISNULL(document_code_STAGING) &amp;&amp; (document_code_FINAL != document_code_STAGING)) || (!ISNULL(prime_contract_id_FINAL) &amp;&amp; ISNULL(prime_contract_id_STAGING)) || (ISNULL(prime_contract_id_FINAL) &amp;&amp; !ISNULL(prime_contract_id_STAGING)) || (!ISNULL(prime_contract_id_FINAL) &amp;&amp; !ISNULL(prime_contract_id_STAGING) &amp;&amp; (prime_contract_id_FINAL != prime_contract_id_STAGING)) || (!ISNULL(contract_includes_sub_vendors_FINAL) &amp;&amp; ISNULL(contract_includes_sub_vendors_STAGING)) || (ISNULL(contract_includes_sub_vendors_FINAL) &amp;&amp; !ISNULL(contract_includes_sub_vendors_STAGING)) || (!ISNULL(contract_includes_sub_vendors_FINAL) &amp;&amp; !ISNULL(contract_includes_sub_vendors_STAGING) &amp;&amp; (contract_includes_sub_vendors_FINAL != contract_includes_sub_vendors_STAGING)) || (!ISNULL(vendor_record_type_FINAL) &amp;&amp; ISNULL(vendor_record_type_STAGING)) || (ISNULL(vendor_record_type_FINAL) &amp;&amp; !ISNULL(vendor_record_type_STAGING)) || (!ISNULL(vendor_record_type_FINAL) &amp;&amp; !ISNULL(vendor_record_type_STAGING) &amp;&amp; (vendor_record_type_FINAL != vendor_record_type_STAGING)) || (!ISNULL(prime_vendor_FINAL) &amp;&amp; ISNULL(prime_vendor_STAGING)) || (ISNULL(prime_vendor_FINAL) &amp;&amp; !ISNULL(prime_vendor_STAGING)) || (!ISNULL(prime_vendor_FINAL) &amp;&amp; !ISNULL(prime_vendor_STAGING) &amp;&amp; (prime_vendor_FINAL != prime_vendor_STAGING)) || (!ISNULL(prime_vendor_mwbe_category_FINAL) &amp;&amp; ISNULL(prime_vendor_mwbe_category_STAGING)) || (ISNULL(prime_vendor_mwbe_category_FINAL) &amp;&amp; !ISNULL(prime_vendor_mwbe_category_STAGING)) || (!ISNULL(prime_vendor_mwbe_category_FINAL) &amp;&amp; !ISNULL(prime_vendor_mwbe_category_STAGING) &amp;&amp; (prime_vendor_mwbe_category_FINAL != prime_vendor_mwbe_category_STAGING)) || (!ISNULL(prime_contract_purpose_FINAL) &amp;&amp; ISNULL(prime_contract_purpose_STAGING)) || (ISNULL(prime_contract_purpose_FINAL) &amp;&amp; !ISNULL(prime_contract_purpose_STAGING)) || (!ISNULL(prime_contract_purpose_FINAL) &amp;&amp; !ISNULL(prime_contract_purpose_STAGING) &amp;&amp; (prime_contract_purpose_FINAL != prime_contract_purpose_STAGING)) || (!ISNULL(prime_contract_current_amount_FINAL) &amp;&amp; ISNULL(prime_contract_current_amount_STAGING_DataTypeConverted)) || (ISNULL(prime_contract_current_amount_FINAL) &amp;&amp; !ISNULL(prime_contract_current_amount_STAGING_DataTypeConverted)) || (!ISNULL(prime_contract_current_amount_FINAL) &amp;&amp; !ISNULL(prime_contract_current_amount_STAGING_DataTypeConverted) &amp;&amp; (prime_contract_current_amount_FINAL != prime_contract_current_amount_STAGING_DataTypeConverted)) || (!ISNULL(prime_contract_original_amount_FINAL) &amp;&amp; ISNULL(prime_contract_original_amount_STAGING_DataTypeConverted)) || (ISNULL(prime_contract_original_amount_FINAL) &amp;&amp; !ISNULL(prime_contract_original_amount_STAGING_DataTypeConverted)) || (!ISNULL(prime_contract_original_amount_FINAL) &amp;&amp; !ISNULL(prime_contract_original_amount_STAGING_DataTypeConverted) &amp;&amp; (prime_contract_original_amount_FINAL != prime_contract_original_amount_STAGING_DataTypeConverted)) || (!ISNULL(prime_vendor_spent_to_date_FINAL) &amp;&amp; ISNULL(prime_vendor_spent_to_date_STAGING_DataTypeConverted)) || (ISNULL(prime_vendor_spent_to_date_FINAL) &amp;&amp; !ISNULL(prime_vendor_spent_to_date_STAGING_DataTypeConverted)) || (!ISNULL(prime_vendor_spent_to_date_FINAL) &amp;&amp; !ISNULL(prime_vendor_spent_to_date_STAGING_DataTypeConverted) &amp;&amp; (prime_vendor_spent_to_date_FINAL != prime_vendor_spent_to_date_STAGING_DataTypeConverted)) || (!ISNULL(prime_contract_start_date_FINAL) &amp;&amp; ISNULL(prime_contract_start_date_STAGING_DataTypeConverted)) || (ISNULL(prime_contract_start_date_FINAL) &amp;&amp; !ISNULL(prime_contract_start_date_STAGING_DataTypeConverted)) || (!ISNULL(prime_contract_start_date_FINAL) &amp;&amp; !ISNULL(prime_contract_start_date_STAGING_DataTypeConverted) &amp;&amp; (prime_contract_start_date_FINAL != prime_contract_start_date_STAGING_DataTypeConverted)) || (!ISNULL(prime_contract_end_date_FINAL) &amp;&amp; ISNULL(prime_contract_end_date_STAGING_DataTypeConverted)) || (ISNULL(prime_contract_end_date_FINAL) &amp;&amp; !ISNULL(prime_contract_end_date_STAGING_DataTypeConverted)) || (!ISNULL(prime_contract_end_date_FINAL) &amp;&amp; !ISNULL(prime_contract_end_date_STAGING_DataTypeConverted) &amp;&amp; (prime_contract_end_date_FINAL != prime_contract_end_date_STAGING_DataTypeConverted)) || (!ISNULL(prime_contract_registration_date_FINAL) &amp;&amp; ISNULL(prime_contract_registration_date_STAGING_DataTypeConverted)) || (ISNULL(prime_contract_registration_date_FINAL) &amp;&amp; !ISNULL(prime_contract_registration_date_STAGING_DataTypeConverted)) || (!ISNULL(prime_contract_registration_date_FINAL) &amp;&amp; !ISNULL(prime_contract_registration_date_STAGING_DataTypeConverted) &amp;&amp; (prime_contract_registration_date_FINAL != prime_contract_registration_date_STAGING_DataTypeConverted)) || (!ISNULL(prime_contracting_agency_FINAL) &amp;&amp; ISNULL(prime_contracting_agency_STAGING)) || (ISNULL(prime_contracting_agency_FINAL) &amp;&amp; !ISNULL(prime_contracting_agency_STAGING)) || (!ISNULL(prime_contracting_agency_FINAL) &amp;&amp; !ISNULL(prime_contracting_agency_STAGING) &amp;&amp; (prime_contracting_agency_FINAL != prime_contracting_agency_STAGING)) || (!ISNULL(prime_contract_version_FINAL) &amp;&amp; ISNULL(prime_contract_version_STAGING_DataTypeConverted)) || (ISNULL(prime_contract_version_FINAL) &amp;&amp; !ISNULL(prime_contract_version_STAGING_DataTypeConverted)) || (!ISNULL(prime_contract_version_FINAL) &amp;&amp; !ISNULL(prime_contract_version_STAGING_DataTypeConverted) &amp;&amp; (prime_contract_version_FINAL != prime_contract_version_STAGING_DataTypeConverted)) || (!ISNULL(parent_contract_id_FINAL) &amp;&amp; ISNULL(parent_contract_id_STAGING)) || (ISNULL(parent_contract_id_FINAL) &amp;&amp; !ISNULL(parent_contract_id_STAGING)) || (!ISNULL(parent_contract_id_FINAL) &amp;&amp; !ISNULL(parent_contract_id_STAGING) &amp;&amp; (parent_contract_id_FINAL != parent_contract_id_STAGING)) || (!ISNULL(prime_contract_type_FINAL) &amp;&amp; ISNULL(prime_contract_type_STAGING)) || (ISNULL(prime_contract_type_FINAL) &amp;&amp; !ISNULL(prime_contract_type_STAGING)) || (!ISNULL(prime_contract_type_FINAL) &amp;&amp; !ISNULL(prime_contract_type_STAGING) &amp;&amp; (prime_contract_type_FINAL != prime_contract_type_STAGING)) || (!ISNULL(prime_contract_award_method_FINAL) &amp;&amp; ISNULL(prime_contract_award_method_STAGING)) || (ISNULL(prime_contract_award_method_FINAL) &amp;&amp; !ISNULL(prime_contract_award_method_STAGING)) || (!ISNULL(prime_contract_award_method_FINAL) &amp;&amp; !ISNULL(prime_contract_award_method_STAGING) &amp;&amp; (prime_contract_award_method_FINAL != prime_contract_award_method_STAGING)) || (!ISNULL(prime_contract_expense_category_FINAL) &amp;&amp; ISNULL(prime_contract_expense_category_STAGING)) || (ISNULL(prime_contract_expense_category_FINAL) &amp;&amp; !ISNULL(prime_contract_expense_category_STAGING)) || (!ISNULL(prime_contract_expense_category_FINAL) &amp;&amp; !ISNULL(prime_contract_expense_category_STAGING) &amp;&amp; (prime_contract_expense_category_FINAL != prime_contract_expense_category_STAGING)) || (!ISNULL(prime_contract_industry_FINAL) &amp;&amp; ISNULL(prime_contract_industry_STAGING)) || (ISNULL(prime_contract_industry_FINAL) &amp;&amp; !ISNULL(prime_contract_industry_STAGING)) || (!ISNULL(prime_contract_industry_FINAL) &amp;&amp; !ISNULL(prime_contract_industry_STAGING) &amp;&amp; (prime_contract_industry_FINAL != prime_contract_industry_STAGING)) || (!ISNULL(prime_contract_pin_FINAL) &amp;&amp; ISNULL(prime_contract_pin_STAGING)) || (ISNULL(prime_contract_pin_FINAL) &amp;&amp; !ISNULL(prime_contract_pin_STAGING)) || (!ISNULL(prime_contract_pin_FINAL) &amp;&amp; !ISNULL(prime_contract_pin_STAGING) &amp;&amp; (prime_contract_pin_FINAL != prime_contract_pin_STAGING)) || (!ISNULL(prime_contract_apt_pin_FINAL) &amp;&amp; ISNULL(prime_contract_apt_pin_STAGING)) || (ISNULL(prime_contract_apt_pin_FINAL) &amp;&amp; !ISNULL(prime_contract_apt_pin_STAGING)) || (!ISNULL(prime_contract_apt_pin_FINAL) &amp;&amp; !ISNULL(prime_contract_apt_pin_STAGING) &amp;&amp; (prime_contract_apt_pin_FINAL != prime_contract_apt_pin_STAGING)) || (!ISNULL(sub_vendor_FINAL) &amp;&amp; ISNULL(sub_vendor_STAGING)) || (ISNULL(sub_vendor_FINAL) &amp;&amp; !ISNULL(sub_vendor_STAGING)) || (!ISNULL(sub_vendor_FINAL) &amp;&amp; !ISNULL(sub_vendor_STAGING) &amp;&amp; (sub_vendor_FINAL != sub_vendor_STAGING)) || (!ISNULL(sub_vendor_mwbe_category_FINAL) &amp;&amp; ISNULL(sub_vendor_mwbe_category_STAGING)) || (ISNULL(sub_vendor_mwbe_category_FINAL) &amp;&amp; !ISNULL(sub_vendor_mwbe_category_STAGING)) || (!ISNULL(sub_vendor_mwbe_category_FINAL) &amp;&amp; !ISNULL(sub_vendor_mwbe_category_STAGING) &amp;&amp; (sub_vendor_mwbe_category_FINAL != sub_vendor_mwbe_category_STAGING)) || (!ISNULL(sub_contract_purpose_FINAL) &amp;&amp; ISNULL(sub_contract_purpose_STAGING)) || (ISNULL(sub_contract_purpose_FINAL) &amp;&amp; !ISNULL(sub_contract_purpose_STAGING)) || (!ISNULL(sub_contract_purpose_FINAL) &amp;&amp; !ISNULL(sub_contract_purpose_STAGING) &amp;&amp; (sub_contract_purpose_FINAL != sub_contract_purpose_STAGING)) || (!ISNULL(sub_vendor_status_in_pip_FINAL) &amp;&amp; ISNULL(sub_vendor_status_in_pip_STAGING)) || (ISNULL(sub_vendor_status_in_pip_FINAL) &amp;&amp; !ISNULL(sub_vendor_status_in_pip_STAGING)) || (!ISNULL(sub_vendor_status_in_pip_FINAL) &amp;&amp; !ISNULL(sub_vendor_status_in_pip_STAGING) &amp;&amp; (sub_vendor_status_in_pip_FINAL != sub_vendor_status_in_pip_STAGING)) || (!ISNULL(sub_contract_industry_FINAL) &amp;&amp; ISNULL(sub_contract_industry_STAGING)) || (ISNULL(sub_contract_industry_FINAL) &amp;&amp; !ISNULL(sub_contract_industry_STAGING)) || (!ISNULL(sub_contract_industry_FINAL) &amp;&amp; !ISNULL(sub_contract_industry_STAGING) &amp;&amp; (sub_contract_industry_FINAL != sub_contract_industry_STAGING)) || (!ISNULL(sub_contract_current_amount_FINAL) &amp;&amp; ISNULL(sub_contract_current_amount_STAGING_DataTypeConverted)) || (ISNULL(sub_contract_current_amount_FINAL) &amp;&amp; !ISNULL(sub_contract_current_amount_STAGING_DataTypeConverted)) || (!ISNULL(sub_contract_current_amount_FINAL) &amp;&amp; !ISNULL(sub_contract_current_amount_STAGING_DataTypeConverted) &amp;&amp; (sub_contract_current_amount_FINAL != sub_contract_current_amount_STAGING_DataTypeConverted)) || (!ISNULL(sub_contract_original_amount_FINAL) &amp;&amp; ISNULL(sub_contract_original_amount_STAGING_DataTypeConverted)) || (ISNULL(sub_contract_original_amount_FINAL) &amp;&amp; !ISNULL(sub_contract_original_amount_STAGING_DataTypeConverted)) || (!ISNULL(sub_contract_original_amount_FINAL) &amp;&amp; !ISNULL(sub_contract_original_amount_STAGING_DataTypeConverted) &amp;&amp; (sub_contract_original_amount_FINAL != sub_contract_original_amount_STAGING_DataTypeConverted)) || (!ISNULL(sub_vendor_paid_to_date_FINAL) &amp;&amp; ISNULL(sub_vendor_paid_to_date_STAGING_DataTypeConverted)) || (ISNULL(sub_vendor_paid_to_date_FINAL) &amp;&amp; !ISNULL(sub_vendor_paid_to_date_STAGING_DataTypeConverted)) || (!ISNULL(sub_vendor_paid_to_date_FINAL) &amp;&amp; !ISNULL(sub_vendor_paid_to_date_STAGING_DataTypeConverted) &amp;&amp; (sub_vendor_paid_to_date_FINAL != sub_vendor_paid_to_date_STAGING_DataTypeConverted)) || (!ISNULL(sub_contract_start_date_FINAL) &amp;&amp; ISNULL(sub_contract_start_date_STAGING_DataTypeConverted)) || (ISNULL(sub_contract_start_date_FINAL) &amp;&amp; !ISNULL(sub_contract_start_date_STAGING_DataTypeConverted)) || (!ISNULL(sub_contract_start_date_FINAL) &amp;&amp; !ISNULL(sub_contract_start_date_STAGING_DataTypeConverted) &amp;&amp; (sub_contract_start_date_FINAL != sub_contract_start_date_STAGING_DataTypeConverted)) || (!ISNULL(sub_contract_end_date_FINAL) &amp;&amp; ISNULL(sub_contract_end_date_STAGING_DataTypeConverted)) || (ISNULL(sub_contract_end_date_FINAL) &amp;&amp; !ISNULL(sub_contract_end_date_STAGING_DataTypeConverted)) || (!ISNULL(sub_contract_end_date_FINAL) &amp;&amp; !ISNULL(sub_contract_end_date_STAGING_DataTypeConverted) &amp;&amp; (sub_contract_end_date_FINAL != sub_contract_end_date_STAGING_DataTypeConverted)) || (!ISNULL(sub_contract_reference_id_FINAL) &amp;&amp; ISNULL(sub_contract_reference_id_STAGING)) || (ISNULL(sub_contract_reference_id_FINAL) &amp;&amp; !ISNULL(sub_contract_reference_id_STAGING)) || (!ISNULL(sub_contract_reference_id_FINAL) &amp;&amp; !ISNULL(sub_contract_reference_id_STAGING) &amp;&amp; (sub_contract_reference_id_FINAL != sub_contract_reference_id_STAGING))</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert records (Final - Contracts) - Batch 100,000"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Contracts]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">100000</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[LastUpdatedTimestamp]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[ID_STAGING]"
                      cachedDataType="i4"
                      cachedName="ID_STAGING"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[StagingID]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[document_code_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_code_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[document_code]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_id_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_id_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_id]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[contract_includes_sub_vendors_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_includes_sub_vendors_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[contract_includes_sub_vendors]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[vendor_record_type_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_record_type_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[vendor_record_type]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_vendor_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_vendor]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_vendor_mwbe_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_mwbe_category_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_vendor_mwbe_category]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_purpose_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_purpose_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_purpose]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contracting_agency_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contracting_agency_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contracting_agency]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[parent_contract_id_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="parent_contract_id_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[parent_contract_id]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_type_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_type_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_type]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_award_method_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_award_method_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_award_method]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_expense_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="265"
                      cachedName="prime_contract_expense_category_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_expense_category]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_industry_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_industry_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_industry]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_pin_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_pin_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_pin]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_apt_pin_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_apt_pin_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_apt_pin]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_vendor_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_vendor]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_vendor_mwbe_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_mwbe_category_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_vendor_mwbe_category]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_contract_purpose_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="476"
                      cachedName="sub_contract_purpose_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_purpose]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_vendor_status_in_pip_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_status_in_pip_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_vendor_status_in_pip]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_contract_industry_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_industry_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_industry]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_contract_reference_id_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_reference_id]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_current_amount_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="prime_contract_current_amount_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_current_amount]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_current_amount_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_original_amount_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="prime_contract_original_amount_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_original_amount]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_original_amount_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_vendor_spent_to_date_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="prime_vendor_spent_to_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_vendor_spent_to_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_vendor_spent_to_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_start_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_start_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_start_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_start_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_end_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_end_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_end_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_end_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_registration_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_registration_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_registration_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_registration_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[prime_contract_version_STAGING_DataTypeConverted]"
                      cachedDataType="i4"
                      cachedName="prime_contract_version_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_version]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_version_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_contract_current_amount_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="sub_contract_current_amount_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_current_amount]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_current_amount_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_contract_original_amount_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="sub_contract_original_amount_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_original_amount]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_original_amount_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_vendor_paid_to_date_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="sub_vendor_paid_to_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_vendor_paid_to_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_vendor_paid_to_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_contract_start_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_start_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_start_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_start_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_contract_end_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_end_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_end_date]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_end_date_STAGING_DataTypeConverted]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      name="LastUpdatedTimestamp" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[document_code]"
                      dataType="wstr"
                      length="255"
                      name="document_code" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_id]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[contract_includes_sub_vendors]"
                      dataType="wstr"
                      length="255"
                      name="contract_includes_sub_vendors" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[vendor_record_type]"
                      dataType="wstr"
                      length="255"
                      name="vendor_record_type" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_vendor]"
                      dataType="wstr"
                      length="255"
                      name="prime_vendor" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      name="prime_vendor_mwbe_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_purpose]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_purpose" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_current_amount]"
                      dataType="cy"
                      name="prime_contract_current_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_original_amount]"
                      dataType="cy"
                      name="prime_contract_original_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_vendor_spent_to_date]"
                      dataType="cy"
                      name="prime_vendor_spent_to_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_start_date]"
                      dataType="dbDate"
                      name="prime_contract_start_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_end_date]"
                      dataType="dbDate"
                      name="prime_contract_end_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_registration_date]"
                      dataType="dbDate"
                      name="prime_contract_registration_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contracting_agency]"
                      dataType="wstr"
                      length="255"
                      name="prime_contracting_agency" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_version]"
                      dataType="i4"
                      name="prime_contract_version" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[parent_contract_id]"
                      dataType="wstr"
                      length="255"
                      name="parent_contract_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_type]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_type" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_award_method]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_award_method" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_expense_category]"
                      dataType="wstr"
                      length="265"
                      name="prime_contract_expense_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_industry]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_industry" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_pin]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_pin" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[prime_contract_apt_pin]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_apt_pin" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor_mwbe_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_purpose]"
                      dataType="wstr"
                      length="476"
                      name="sub_contract_purpose" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_vendor_status_in_pip]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor_status_in_pip" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_industry]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_industry" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_current_amount]"
                      dataType="cy"
                      name="sub_contract_current_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_original_amount]"
                      dataType="cy"
                      name="sub_contract_original_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_vendor_paid_to_date]"
                      dataType="cy"
                      name="sub_vendor_paid_to_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_start_date]"
                      dataType="dbDate"
                      name="sub_contract_start_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_end_date]"
                      dataType="dbDate"
                      name="sub_contract_end_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_reference_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[StagingID]"
                      dataType="i4"
                      name="StagingID" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[document_code]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_code"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[document_code]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_id"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[contract_includes_sub_vendors]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_includes_sub_vendors"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[contract_includes_sub_vendors]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[vendor_record_type]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_record_type"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[vendor_record_type]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_vendor_mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_mwbe_category"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_vendor_mwbe_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_purpose"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_purpose]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_current_amount]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_current_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_current_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_original_amount]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_original_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_original_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_vendor_spent_to_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_spent_to_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_vendor_spent_to_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_start_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_start_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_start_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_end_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_end_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_end_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_registration_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_registration_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_registration_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contracting_agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contracting_agency"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contracting_agency]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_version]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_version"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_version]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[parent_contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="parent_contract_id"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[parent_contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_type]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_type"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_type]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_award_method]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_award_method"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_award_method]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_expense_category]"
                      cachedDataType="wstr"
                      cachedLength="265"
                      cachedName="prime_contract_expense_category"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_expense_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_industry"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_industry]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_pin]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_pin"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_pin]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_apt_pin]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_apt_pin"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[prime_contract_apt_pin]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_vendor_mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_mwbe_category"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_vendor_mwbe_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="476"
                      cachedName="sub_contract_purpose"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_purpose]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_vendor_status_in_pip]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_status_in_pip"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_vendor_status_in_pip]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_industry"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_industry]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_current_amount]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_current_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_current_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_original_amount]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_original_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_original_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_vendor_paid_to_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_paid_to_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_vendor_paid_to_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_start_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_start_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_start_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_end_date]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_end_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_end_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output].Columns[sub_contract_reference_id]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[document_code]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_code"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[document_code]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_id"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[contract_includes_sub_vendors]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_includes_sub_vendors"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[contract_includes_sub_vendors]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[vendor_record_type]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_record_type"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[vendor_record_type]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_vendor_mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_mwbe_category"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_vendor_mwbe_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_purpose"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_purpose]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_current_amount]"
                      cachedDataType="cy"
                      cachedName="prime_contract_current_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_current_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_original_amount]"
                      cachedDataType="cy"
                      cachedName="prime_contract_original_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_original_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_vendor_spent_to_date]"
                      cachedDataType="cy"
                      cachedName="prime_vendor_spent_to_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_vendor_spent_to_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_start_date]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_start_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_start_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_end_date]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_end_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_end_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_registration_date]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_registration_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_registration_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contracting_agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contracting_agency"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contracting_agency]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_version]"
                      cachedDataType="i4"
                      cachedName="prime_contract_version"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_version]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[parent_contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="parent_contract_id"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[parent_contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_type]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_type"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_type]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_award_method]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_award_method"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_award_method]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_expense_category]"
                      cachedDataType="wstr"
                      cachedLength="265"
                      cachedName="prime_contract_expense_category"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_expense_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_industry"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_industry]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_pin]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_pin"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_pin]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_apt_pin]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_apt_pin"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[prime_contract_apt_pin]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_vendor_mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_mwbe_category"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_vendor_mwbe_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="476"
                      cachedName="sub_contract_purpose"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_purpose]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_vendor_status_in_pip]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_status_in_pip"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_vendor_status_in_pip]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_industry"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_industry]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_current_amount]"
                      cachedDataType="cy"
                      cachedName="sub_contract_current_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_current_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_original_amount]"
                      cachedDataType="cy"
                      cachedName="sub_contract_original_amount"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_original_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_vendor_paid_to_date]"
                      cachedDataType="cy"
                      cachedName="sub_vendor_paid_to_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_vendor_paid_to_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_start_date]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_start_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_start_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_end_date]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_end_date"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_end_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[sub_contract_reference_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[StagingID]"
                      cachedDataType="i4"
                      cachedName="StagingID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output].Columns[StagingID]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_STAGING]"
                      name="document_code_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[document_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_STAGING]"
                      name="prime_contract_id_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_STAGING]"
                      name="contract_includes_sub_vendors_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[contract_includes_sub_vendors]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_STAGING]"
                      name="vendor_record_type_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[vendor_record_type]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_STAGING]"
                      name="prime_vendor_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_vendor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_STAGING]"
                      name="prime_vendor_mwbe_category_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_vendor_mwbe_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_STAGING]"
                      name="prime_contract_purpose_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_purpose]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_current_amount_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_current_amount_STAGING]"
                      name="prime_contract_current_amount_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_current_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_original_amount_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_original_amount_STAGING]"
                      name="prime_contract_original_amount_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_original_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_spent_to_date_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_spent_to_date_STAGING]"
                      name="prime_vendor_spent_to_date_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_vendor_spent_to_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_start_date_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_start_date_STAGING]"
                      name="prime_contract_start_date_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_start_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_end_date_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_end_date_STAGING]"
                      name="prime_contract_end_date_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_end_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_registration_date_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_registration_date_STAGING]"
                      name="prime_contract_registration_date_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_registration_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_STAGING]"
                      name="prime_contracting_agency_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contracting_agency]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_version_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_version_STAGING]"
                      name="prime_contract_version_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_version]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_STAGING]"
                      name="parent_contract_id_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[parent_contract_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_STAGING]"
                      name="prime_contract_type_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_type]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_STAGING]"
                      name="prime_contract_award_method_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_award_method]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_STAGING]"
                      dataType="wstr"
                      length="265"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_STAGING]"
                      name="prime_contract_expense_category_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_expense_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_STAGING]"
                      name="prime_contract_industry_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_STAGING]"
                      name="prime_contract_pin_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_pin]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_STAGING]"
                      name="prime_contract_apt_pin_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[prime_contract_apt_pin]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_STAGING]"
                      name="sub_vendor_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_vendor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_STAGING]"
                      name="sub_vendor_mwbe_category_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_vendor_mwbe_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_STAGING]"
                      dataType="wstr"
                      length="476"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_STAGING]"
                      name="sub_contract_purpose_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_purpose]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_STAGING]"
                      name="sub_vendor_status_in_pip_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_vendor_status_in_pip]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_STAGING]"
                      name="sub_contract_industry_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_current_amount_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_current_amount_STAGING]"
                      name="sub_contract_current_amount_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_current_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_original_amount_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_original_amount_STAGING]"
                      name="sub_contract_original_amount_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_original_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_paid_to_date_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_paid_to_date_STAGING]"
                      name="sub_vendor_paid_to_date_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_vendor_paid_to_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_start_date_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_start_date_STAGING]"
                      name="sub_contract_start_date_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_start_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_end_date_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_end_date_STAGING]"
                      name="sub_contract_end_date_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_end_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_STAGING]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_STAGING]"
                      name="sub_contract_reference_id_STAGING">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_reference_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_FINAL]"
                      name="document_code_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[document_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_FINAL]"
                      name="prime_contract_id_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_FINAL]"
                      name="contract_includes_sub_vendors_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[contract_includes_sub_vendors]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_FINAL]"
                      name="vendor_record_type_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[vendor_record_type]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_FINAL]"
                      name="prime_vendor_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_vendor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_FINAL]"
                      name="prime_vendor_mwbe_category_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_vendor_mwbe_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_FINAL]"
                      name="prime_contract_purpose_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_purpose]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_current_amount_FINAL]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_current_amount_FINAL]"
                      name="prime_contract_current_amount_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_current_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_original_amount_FINAL]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_original_amount_FINAL]"
                      name="prime_contract_original_amount_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_original_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_spent_to_date_FINAL]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_spent_to_date_FINAL]"
                      name="prime_vendor_spent_to_date_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_vendor_spent_to_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_start_date_FINAL]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_start_date_FINAL]"
                      name="prime_contract_start_date_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_start_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_end_date_FINAL]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_end_date_FINAL]"
                      name="prime_contract_end_date_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_end_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_registration_date_FINAL]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_registration_date_FINAL]"
                      name="prime_contract_registration_date_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_registration_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_FINAL]"
                      name="prime_contracting_agency_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contracting_agency]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_version_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_version_FINAL]"
                      name="prime_contract_version_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_version]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_FINAL]"
                      name="parent_contract_id_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[parent_contract_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_FINAL]"
                      name="prime_contract_type_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_type]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_FINAL]"
                      name="prime_contract_award_method_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_award_method]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_FINAL]"
                      dataType="wstr"
                      length="265"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_FINAL]"
                      name="prime_contract_expense_category_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_expense_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_FINAL]"
                      name="prime_contract_industry_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_FINAL]"
                      name="prime_contract_pin_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_pin]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_FINAL]"
                      name="prime_contract_apt_pin_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[prime_contract_apt_pin]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]"
                      name="sub_vendor_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_vendor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_FINAL]"
                      name="sub_vendor_mwbe_category_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_vendor_mwbe_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_FINAL]"
                      dataType="wstr"
                      length="476"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_FINAL]"
                      name="sub_contract_purpose_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_purpose]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_FINAL]"
                      name="sub_vendor_status_in_pip_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_vendor_status_in_pip]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_FINAL]"
                      name="sub_contract_industry_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_current_amount_FINAL]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_current_amount_FINAL]"
                      name="sub_contract_current_amount_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_current_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_original_amount_FINAL]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_original_amount_FINAL]"
                      name="sub_contract_original_amount_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_original_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_paid_to_date_FINAL]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_paid_to_date_FINAL]"
                      name="sub_vendor_paid_to_date_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_vendor_paid_to_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_start_date_FINAL]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_start_date_FINAL]"
                      name="sub_contract_start_date_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_start_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_end_date_FINAL]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_end_date_FINAL]"
                      name="sub_contract_end_date_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_end_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]"
                      name="sub_contract_reference_id_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_reference_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]"
                      name="StagingID_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[StagingID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]"
                      name="ID_STAGING"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[ID]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Replace any column that is &quot;-&quot; with NULL"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_185d3a14277d4486908fabfbef84fc5e.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{887da88a-aaed-40de-a2d1-8eaaa6494186}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_185d3a14277d4486908fabfbef84fc5e</RootNamespace>
    <AssemblyName>SC_185d3a14277d4486908fabfbef84fc5e</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_185d3a14277d4486908fabfbef84fc5e" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        try
        {
            Row.documentcodeSTAGING = (Row.documentcodeSTAGING == "-" ? null : Row.documentcodeSTAGING);
            Row.primecontractidSTAGING = (Row.primecontractidSTAGING == "-" ? null : Row.primecontractidSTAGING);
            Row.contractincludessubvendorsSTAGING = (Row.contractincludessubvendorsSTAGING == "-" ? null : Row.contractincludessubvendorsSTAGING);
            Row.vendorrecordtypeSTAGING = (Row.vendorrecordtypeSTAGING == "-" ? null : Row.vendorrecordtypeSTAGING);
            Row.primevendorSTAGING = (Row.primevendorSTAGING == "-" ? null : Row.primevendorSTAGING);
            Row.primevendormwbecategorySTAGING = (Row.primevendormwbecategorySTAGING == "-" ? null : Row.primevendormwbecategorySTAGING);
            Row.primecontractpurposeSTAGING = (Row.primecontractpurposeSTAGING == "-" ? null : Row.primecontractpurposeSTAGING);
            Row.primecontractcurrentamountSTAGING = (Row.primecontractcurrentamountSTAGING == "-" ? null : Row.primecontractcurrentamountSTAGING);
            Row.primecontractoriginalamountSTAGING = (Row.primecontractoriginalamountSTAGING == "-" ? null : Row.primecontractoriginalamountSTAGING);
            Row.primevendorspenttodateSTAGING = (Row.primevendorspenttodateSTAGING == "-" ? null : Row.primevendorspenttodateSTAGING);
            Row.primecontractstartdateSTAGING = (Row.primecontractstartdateSTAGING == "-" ? null : Row.primecontractstartdateSTAGING);
            Row.primecontractenddateSTAGING = (Row.primecontractenddateSTAGING == "-" ? null : Row.primecontractenddateSTAGING);
            Row.primecontractregistrationdateSTAGING = (Row.primecontractregistrationdateSTAGING == "-" ? null : Row.primecontractregistrationdateSTAGING);
            Row.primecontractingagencySTAGING = (Row.primecontractingagencySTAGING == "-" ? null : Row.primecontractingagencySTAGING);
            Row.primecontractversionSTAGING = (Row.primecontractversionSTAGING == "-" ? null : Row.primecontractversionSTAGING);
            Row.parentcontractidSTAGING = (Row.parentcontractidSTAGING == "-" ? null : Row.parentcontractidSTAGING);
            Row.primecontracttypeSTAGING = (Row.primecontracttypeSTAGING == "-" ? null : Row.primecontracttypeSTAGING);
            Row.primecontractawardmethodSTAGING = (Row.primecontractawardmethodSTAGING == "-" ? null : Row.primecontractawardmethodSTAGING);
            Row.primecontractexpensecategorySTAGING = (Row.primecontractexpensecategorySTAGING == "-" ? null : Row.primecontractexpensecategorySTAGING);
            Row.primecontractindustrySTAGING = (Row.primecontractindustrySTAGING == "-" ? null : Row.primecontractindustrySTAGING);
            Row.primecontractpinSTAGING = (Row.primecontractpinSTAGING == "-" ? null : Row.primecontractpinSTAGING);
            Row.primecontractaptpinSTAGING = (Row.primecontractaptpinSTAGING == "-" ? null : Row.primecontractaptpinSTAGING);
            Row.subvendorSTAGING = (Row.subvendorSTAGING == "-" ? null : Row.subvendorSTAGING);
            Row.subvendormwbecategorySTAGING = (Row.subvendormwbecategorySTAGING == "-" ? null : Row.subvendormwbecategorySTAGING);
            Row.subcontractpurposeSTAGING = (Row.subcontractpurposeSTAGING == "-" ? null : Row.subcontractpurposeSTAGING);
            Row.subvendorstatusinpipSTAGING = (Row.subvendorstatusinpipSTAGING == "-" ? null : Row.subvendorstatusinpipSTAGING);
            Row.subcontractindustrySTAGING = (Row.subcontractindustrySTAGING == "-" ? null : Row.subcontractindustrySTAGING);
            Row.subcontractcurrentamountSTAGING = (Row.subcontractcurrentamountSTAGING == "-" ? null : Row.subcontractcurrentamountSTAGING);
            Row.subcontractoriginalamountSTAGING = (Row.subcontractoriginalamountSTAGING == "-" ? null : Row.subcontractoriginalamountSTAGING);
            Row.subvendorpaidtodateSTAGING = (Row.subvendorpaidtodateSTAGING == "-" ? null : Row.subvendorpaidtodateSTAGING);
            Row.subcontractstartdateSTAGING = (Row.subcontractstartdateSTAGING == "-" ? null : Row.subcontractstartdateSTAGING);
            Row.subcontractenddateSTAGING = (Row.subcontractenddateSTAGING == "-" ? null : Row.subcontractenddateSTAGING);
            Row.subcontractreferenceidSTAGING = (Row.subcontractreferenceidSTAGING == "-" ? null : Row.subcontractreferenceidSTAGING);
        }
        catch (Exception ex)
        {
            Row.documentcodeSTAGING = "ERROR";
            Row.primecontractidSTAGING = "ERROR";
            Row.contractincludessubvendorsSTAGING = "ERROR";
            Row.vendorrecordtypeSTAGING = "ERROR";
            Row.primevendorSTAGING = "ERROR";
            Row.primevendormwbecategorySTAGING = "ERROR";
            Row.primecontractpurposeSTAGING = "ERROR";
            Row.primecontractcurrentamountSTAGING = "ERROR";
            Row.primecontractoriginalamountSTAGING = "ERROR";
            Row.primevendorspenttodateSTAGING = "ERROR";
            Row.primecontractstartdateSTAGING = "ERROR";
            Row.primecontractenddateSTAGING = "ERROR";
            Row.primecontractregistrationdateSTAGING = "ERROR";
            Row.primecontractingagencySTAGING = "ERROR";
            Row.primecontractversionSTAGING = "ERROR";
            Row.parentcontractidSTAGING = "ERROR";
            Row.primecontracttypeSTAGING = "ERROR";
            Row.primecontractawardmethodSTAGING = "ERROR";
            Row.primecontractexpensecategorySTAGING = "ERROR";
            Row.primecontractindustrySTAGING = "ERROR";
            Row.primecontractpinSTAGING = "ERROR";
            Row.primecontractaptpinSTAGING = "ERROR";
            Row.subvendorSTAGING = "ERROR";
            Row.subvendormwbecategorySTAGING = "ERROR";
            Row.subcontractpurposeSTAGING = "ERROR";
            Row.subvendorstatusinpipSTAGING = "ERROR";
            Row.subcontractindustrySTAGING = "ERROR";
            Row.subcontractcurrentamountSTAGING = "ERROR";
            Row.subcontractoriginalamountSTAGING = "ERROR";
            Row.subvendorpaidtodateSTAGING = "ERROR";
            Row.subcontractstartdateSTAGING = "ERROR";
            Row.subcontractenddateSTAGING = "ERROR";
            Row.subcontractreferenceidSTAGING = "ERROR";
        }

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String documentcodeSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool documentcodeSTAGING_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String contractincludessubvendorsSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool contractincludessubvendorsSTAGING_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractidSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool primecontractidSTAGING_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String vendorrecordtypeSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool vendorrecordtypeSTAGING_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primevendorSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
        set
        {
            this[4] = value;
        }
    }
    public bool primevendorSTAGING_IsNull
    {
        get
        {
            return IsNull(4);
        }
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primevendormwbecategorySTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
        set
        {
            this[5] = value;
        }
    }
    public bool primevendormwbecategorySTAGING_IsNull
    {
        get
        {
            return IsNull(5);
        }
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractcurrentamountSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
        set
        {
            this[6] = value;
        }
    }
    public bool primecontractcurrentamountSTAGING_IsNull
    {
        get
        {
            return IsNull(6);
        }
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractpurposeSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
        set
        {
            this[7] = value;
        }
    }
    public bool primecontractpurposeSTAGING_IsNull
    {
        get
        {
            return IsNull(7);
        }
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractoriginalamountSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
        set
        {
            this[8] = value;
        }
    }
    public bool primecontractoriginalamountSTAGING_IsNull
    {
        get
        {
            return IsNull(8);
        }
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primevendorspenttodateSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
        set
        {
            this[9] = value;
        }
    }
    public bool primevendorspenttodateSTAGING_IsNull
    {
        get
        {
            return IsNull(9);
        }
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractstartdateSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
        set
        {
            this[10] = value;
        }
    }
    public bool primecontractstartdateSTAGING_IsNull
    {
        get
        {
            return IsNull(10);
        }
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractenddateSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
        set
        {
            this[11] = value;
        }
    }
    public bool primecontractenddateSTAGING_IsNull
    {
        get
        {
            return IsNull(11);
        }
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractregistrationdateSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
        set
        {
            this[12] = value;
        }
    }
    public bool primecontractregistrationdateSTAGING_IsNull
    {
        get
        {
            return IsNull(12);
        }
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractingagencySTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
        set
        {
            this[13] = value;
        }
    }
    public bool primecontractingagencySTAGING_IsNull
    {
        get
        {
            return IsNull(13);
        }
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractversionSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
        set
        {
            this[14] = value;
        }
    }
    public bool primecontractversionSTAGING_IsNull
    {
        get
        {
            return IsNull(14);
        }
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String parentcontractidSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
        set
        {
            this[15] = value;
        }
    }
    public bool parentcontractidSTAGING_IsNull
    {
        get
        {
            return IsNull(15);
        }
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontracttypeSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[16]);
        }
        set
        {
            this[16] = value;
        }
    }
    public bool primecontracttypeSTAGING_IsNull
    {
        get
        {
            return IsNull(16);
        }
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractawardmethodSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[17]);
        }
        set
        {
            this[17] = value;
        }
    }
    public bool primecontractawardmethodSTAGING_IsNull
    {
        get
        {
            return IsNull(17);
        }
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractexpensecategorySTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[18]);
        }
        set
        {
            this[18] = value;
        }
    }
    public bool primecontractexpensecategorySTAGING_IsNull
    {
        get
        {
            return IsNull(18);
        }
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractindustrySTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[19]);
        }
        set
        {
            this[19] = value;
        }
    }
    public bool primecontractindustrySTAGING_IsNull
    {
        get
        {
            return IsNull(19);
        }
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractpinSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[20]);
        }
        set
        {
            this[20] = value;
        }
    }
    public bool primecontractpinSTAGING_IsNull
    {
        get
        {
            return IsNull(20);
        }
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String primecontractaptpinSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[21]);
        }
        set
        {
            this[21] = value;
        }
    }
    public bool primecontractaptpinSTAGING_IsNull
    {
        get
        {
            return IsNull(21);
        }
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subvendorSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[22]);
        }
        set
        {
            this[22] = value;
        }
    }
    public bool subvendorSTAGING_IsNull
    {
        get
        {
            return IsNull(22);
        }
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subvendormwbecategorySTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[23]);
        }
        set
        {
            this[23] = value;
        }
    }
    public bool subvendormwbecategorySTAGING_IsNull
    {
        get
        {
            return IsNull(23);
        }
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subcontractpurposeSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[24]);
        }
        set
        {
            this[24] = value;
        }
    }
    public bool subcontractpurposeSTAGING_IsNull
    {
        get
        {
            return IsNull(24);
        }
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subvendorstatusinpipSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[25]);
        }
        set
        {
            this[25] = value;
        }
    }
    public bool subvendorstatusinpipSTAGING_IsNull
    {
        get
        {
            return IsNull(25);
        }
        set
        {
            if (value)
            {
                SetNull(25);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subcontractindustrySTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[26]);
        }
        set
        {
            this[26] = value;
        }
    }
    public bool subcontractindustrySTAGING_IsNull
    {
        get
        {
            return IsNull(26);
        }
        set
        {
            if (value)
            {
                SetNull(26);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subcontractcurrentamountSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[27]);
        }
        set
        {
            this[27] = value;
        }
    }
    public bool subcontractcurrentamountSTAGING_IsNull
    {
        get
        {
            return IsNull(27);
        }
        set
        {
            if (value)
            {
                SetNull(27);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subcontractoriginalamountSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[28]);
        }
        set
        {
            this[28] = value;
        }
    }
    public bool subcontractoriginalamountSTAGING_IsNull
    {
        get
        {
            return IsNull(28);
        }
        set
        {
            if (value)
            {
                SetNull(28);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subvendorpaidtodateSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[29]);
        }
        set
        {
            this[29] = value;
        }
    }
    public bool subvendorpaidtodateSTAGING_IsNull
    {
        get
        {
            return IsNull(29);
        }
        set
        {
            if (value)
            {
                SetNull(29);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subcontractstartdateSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[30]);
        }
        set
        {
            this[30] = value;
        }
    }
    public bool subcontractstartdateSTAGING_IsNull
    {
        get
        {
            return IsNull(30);
        }
        set
        {
            if (value)
            {
                SetNull(30);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subcontractenddateSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[31]);
        }
        set
        {
            this[31] = value;
        }
    }
    public bool subcontractenddateSTAGING_IsNull
    {
        get
        {
            return IsNull(31);
        }
        set
        {
            if (value)
            {
                SetNull(31);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subcontractreferenceidSTAGING
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[32]);
        }
        set
        {
            this[32] = value;
        }
    }
    public bool subcontractreferenceidSTAGING_IsNull
    {
        get
        {
            return IsNull(32);
        }
        set
        {
            if (value)
            {
                SetNull(32);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String documentcodeFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[33]);
        }
    }
    public bool documentcodeFINAL_IsNull
    {
        get
        {
            return IsNull(33);
        }
    }

    public String primecontractidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[34]);
        }
    }
    public bool primecontractidFINAL_IsNull
    {
        get
        {
            return IsNull(34);
        }
    }

    public String contractincludessubvendorsFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[35]);
        }
    }
    public bool contractincludessubvendorsFINAL_IsNull
    {
        get
        {
            return IsNull(35);
        }
    }

    public String vendorrecordtypeFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[36]);
        }
    }
    public bool vendorrecordtypeFINAL_IsNull
    {
        get
        {
            return IsNull(36);
        }
    }

    public String primevendorFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[37]);
        }
    }
    public bool primevendorFINAL_IsNull
    {
        get
        {
            return IsNull(37);
        }
    }

    public String primevendormwbecategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[38]);
        }
    }
    public bool primevendormwbecategoryFINAL_IsNull
    {
        get
        {
            return IsNull(38);
        }
    }

    public String primecontractpurposeFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[39]);
        }
    }
    public bool primecontractpurposeFINAL_IsNull
    {
        get
        {
            return IsNull(39);
        }
    }

    public String primecontractcurrentamountFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[40]);
        }
    }
    public bool primecontractcurrentamountFINAL_IsNull
    {
        get
        {
            return IsNull(40);
        }
    }

    public String primecontractoriginalamountFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[41]);
        }
    }
    public bool primecontractoriginalamountFINAL_IsNull
    {
        get
        {
            return IsNull(41);
        }
    }

    public String primevendorspenttodateFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[42]);
        }
    }
    public bool primevendorspenttodateFINAL_IsNull
    {
        get
        {
            return IsNull(42);
        }
    }

    public String primecontractstartdateFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[43]);
        }
    }
    public bool primecontractstartdateFINAL_IsNull
    {
        get
        {
            return IsNull(43);
        }
    }

    public String primecontractenddateFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[44]);
        }
    }
    public bool primecontractenddateFINAL_IsNull
    {
        get
        {
            return IsNull(44);
        }
    }

    public String primecontractregistrationdateFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[45]);
        }
    }
    public bool primecontractregistrationdateFINAL_IsNull
    {
        get
        {
            return IsNull(45);
        }
    }

    public String primecontractingagencyFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[46]);
        }
    }
    public bool primecontractingagencyFINAL_IsNull
    {
        get
        {
            return IsNull(46);
        }
    }

    public String primecontractversionFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[47]);
        }
    }
    public bool primecontractversionFINAL_IsNull
    {
        get
        {
            return IsNull(47);
        }
    }

    public String parentcontractidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[48]);
        }
    }
    public bool parentcontractidFINAL_IsNull
    {
        get
        {
            return IsNull(48);
        }
    }

    public String primecontracttypeFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[49]);
        }
    }
    public bool primecontracttypeFINAL_IsNull
    {
        get
        {
            return IsNull(49);
        }
    }

    public String primecontractawardmethodFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[50]);
        }
    }
    public bool primecontractawardmethodFINAL_IsNull
    {
        get
        {
            return IsNull(50);
        }
    }

    public String primecontractexpensecategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[51]);
        }
    }
    public bool primecontractexpensecategoryFINAL_IsNull
    {
        get
        {
            return IsNull(51);
        }
    }

    public String primecontractindustryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[52]);
        }
    }
    public bool primecontractindustryFINAL_IsNull
    {
        get
        {
            return IsNull(52);
        }
    }

    public String primecontractpinFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[53]);
        }
    }
    public bool primecontractpinFINAL_IsNull
    {
        get
        {
            return IsNull(53);
        }
    }

    public String primecontractaptpinFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[54]);
        }
    }
    public bool primecontractaptpinFINAL_IsNull
    {
        get
        {
            return IsNull(54);
        }
    }

    public String subvendorFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[55]);
        }
    }
    public bool subvendorFINAL_IsNull
    {
        get
        {
            return IsNull(55);
        }
    }

    public String subvendormwbecategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[56]);
        }
    }
    public bool subvendormwbecategoryFINAL_IsNull
    {
        get
        {
            return IsNull(56);
        }
    }

    public String subcontractpurposeFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[57]);
        }
    }
    public bool subcontractpurposeFINAL_IsNull
    {
        get
        {
            return IsNull(57);
        }
    }

    public String subvendorstatusinpipFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[58]);
        }
    }
    public bool subvendorstatusinpipFINAL_IsNull
    {
        get
        {
            return IsNull(58);
        }
    }

    public String subcontractindustryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[59]);
        }
    }
    public bool subcontractindustryFINAL_IsNull
    {
        get
        {
            return IsNull(59);
        }
    }

    public String subcontractcurrentamountFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[60]);
        }
    }
    public bool subcontractcurrentamountFINAL_IsNull
    {
        get
        {
            return IsNull(60);
        }
    }

    public String subcontractoriginalamountFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[61]);
        }
    }
    public bool subcontractoriginalamountFINAL_IsNull
    {
        get
        {
            return IsNull(61);
        }
    }

    public String subvendorpaidtodateFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[62]);
        }
    }
    public bool subvendorpaidtodateFINAL_IsNull
    {
        get
        {
            return IsNull(62);
        }
    }

    public String subcontractstartdateFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[63]);
        }
    }
    public bool subcontractstartdateFINAL_IsNull
    {
        get
        {
            return IsNull(63);
        }
    }

    public String subcontractenddateFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[64]);
        }
    }
    public bool subcontractenddateFINAL_IsNull
    {
        get
        {
            return IsNull(64);
        }
    }

    public String subcontractreferenceidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[65]);
        }
    }
    public bool subcontractreferenceidFINAL_IsNull
    {
        get
        {
            return IsNull(65);
        }
    }

    public Int32 StagingIDFINAL
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[66]);
        }
    }
    public bool StagingIDFINAL_IsNull
    {
        get
        {
            return IsNull(66);
        }
    }

    public Int32 IDSTAGING
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[67]);
        }
    }
    public bool IDSTAGING_IsNull
    {
        get
        {
            return IsNull(67);
        }
    }

    public DateTime LastUpdatedTimestampDerived
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[68]);
        }
    }
    public bool LastUpdatedTimestampDerived_IsNull
    {
        get
        {
            return IsNull(68);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_185d3a14277d4486908fabfbef84fc5e.Properties.Settings.get_Default():SC_185d3a14277d4486908fabfbef84fc5e.Properties.Sett" +
    "ings")]

namespace SC_185d3a14277d4486908fabfbef84fc5e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_185d3a14277d4486908fabfbef84fc5e</msb:CodeName>
		<msb:DisplayName>SC_185d3a14277d4486908fabfbef84fc5e</msb:DisplayName>
		<msb:ProjectId>{7446BF66-F851-44E7-9262-2B9AA3B8F676}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_185d3a14277d4486908fabfbef84fc5e.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_185d3a14277d4486908fabfbef84fc5e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_185d3a14277d4486908fabfbef84fc5e")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_185d3a14277d4486908fabfbef84fc5e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_185d3a14277d4486908fabfbef84fc5e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_185d3a14277d4486908fabfbef84fc5e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_185d3a14277d4486908fabfbef84fc5e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_185d3a14277d4486908fabfbef84fc5e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_185d3a14277d4486908fabfbef84fc5e.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOib4l4AAAAAAAAAAOAAAiELAQsAAGYAAAAIAAAAAAAALoUA
AAAgAAAAoAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAADgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOCEAABLAAAAAKAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAMAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANGUAAAAgAAAAZgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAoAAAAAYAAABoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAMAAAAACAAAAbgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
hQAAAAAAAEgAAAACAAUAADUAAOBPAAABAAAAAAAAAEg0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnPYAAAGfQEAAAQCAnPZAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDb9YAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioAAAswAwC1BQAAAAAAAAMDbwoAAAZyEQAAcCgTAAAKLQgDbwoAAAYrARRv
CwAABgMDbxIAAAZyEQAAcCgTAAAKLQgDbxIAAAYrARRvEwAABgMDbw4AAAZyEQAAcCgTAAAKLQgD
bw4AAAYrARRvDwAABgMDbxYAAAZyEQAAcCgTAAAKLQgDbxYAAAYrARRvFwAABgMDbxoAAAZyEQAA
cCgTAAAKLQgDbxoAAAYrARRvGwAABgMDbx4AAAZyEQAAcCgTAAAKLQgDbx4AAAYrARRvHwAABgMD
byYAAAZyEQAAcCgTAAAKLQgDbyYAAAYrARRvJwAABgMDbyIAAAZyEQAAcCgTAAAKLQgDbyIAAAYr
ARRvIwAABgMDbyoAAAZyEQAAcCgTAAAKLQgDbyoAAAYrARRvKwAABgMDby4AAAZyEQAAcCgTAAAK
LQgDby4AAAYrARRvLwAABgMDbzIAAAZyEQAAcCgTAAAKLQgDbzIAAAYrARRvMwAABgMDbzYAAAZy
EQAAcCgTAAAKLQgDbzYAAAYrARRvNwAABgMDbzoAAAZyEQAAcCgTAAAKLQgDbzoAAAYrARRvOwAA
BgMDbz4AAAZyEQAAcCgTAAAKLQgDbz4AAAYrARRvPwAABgMDb0IAAAZyEQAAcCgTAAAKLQgDb0IA
AAYrARRvQwAABgMDb0YAAAZyEQAAcCgTAAAKLQgDb0YAAAYrARRvRwAABgMDb0oAAAZyEQAAcCgT
AAAKLQgDb0oAAAYrARRvSwAABgMDb04AAAZyEQAAcCgTAAAKLQgDb04AAAYrARRvTwAABgMDb1IA
AAZyEQAAcCgTAAAKLQgDb1IAAAYrARRvUwAABgMDb1YAAAZyEQAAcCgTAAAKLQgDb1YAAAYrARRv
VwAABgMDb1oAAAZyEQAAcCgTAAAKLQgDb1oAAAYrARRvWwAABgMDb14AAAZyEQAAcCgTAAAKLQgD
b14AAAYrARRvXwAABgMDb2IAAAZyEQAAcCgTAAAKLQgDb2IAAAYrARRvYwAABgMDb2YAAAZyEQAA
cCgTAAAKLQgDb2YAAAYrARRvZwAABgMDb2oAAAZyEQAAcCgTAAAKLQgDb2oAAAYrARRvawAABgMD
b24AAAZyEQAAcCgTAAAKLQgDb24AAAYrARRvbwAABgMDb3IAAAZyEQAAcCgTAAAKLQgDb3IAAAYr
ARRvcwAABgMDb3YAAAZyEQAAcCgTAAAKLQgDb3YAAAYrARRvdwAABgMDb3oAAAZyEQAAcCgTAAAK
LQgDb3oAAAYrARRvewAABgMDb34AAAZyEQAAcCgTAAAKLQgDb34AAAYrARRvfwAABgMDb4IAAAZy
EQAAcCgTAAAKLQgDb4IAAAYrARRvgwAABgMDb4YAAAZyEQAAcCgTAAAKLQgDb4YAAAYrARRvhwAA
BgMDb4oAAAZyEQAAcCgTAAAKLQgDb4oAAAYrARRviwAABt1uAQAAJgNyFQAAcG8LAAAGA3IVAABw
bxMAAAYDchUAAHBvDwAABgNyFQAAcG8XAAAGA3IVAABwbxsAAAYDchUAAHBvHwAABgNyFQAAcG8n
AAAGA3IVAABwbyMAAAYDchUAAHBvKwAABgNyFQAAcG8vAAAGA3IVAABwbzMAAAYDchUAAHBvNwAA
BgNyFQAAcG87AAAGA3IVAABwbz8AAAYDchUAAHBvQwAABgNyFQAAcG9HAAAGA3IVAABwb0sAAAYD
chUAAHBvTwAABgNyFQAAcG9TAAAGA3IVAABwb1cAAAYDchUAAHBvWwAABgNyFQAAcG9fAAAGA3IV
AABwb2MAAAYDchUAAHBvZwAABgNyFQAAcG9rAAAGA3IVAABwb28AAAYDchUAAHBvcwAABgNyFQAA
cG93AAAGA3IVAABwb3sAAAYDchUAAHBvfwAABgNyFQAAcG+DAAAGA3IVAABwb4cAAAYDchUAAHBv
iwAABt4AKgAAAEEcAAAAAAAAAAAAAEYEAABGBAAAbgEAABkAAAEeAigBAAAGKioCAwQFKBQAAAoq
UgJ7FQAACgJ7FgAAChaUbxcAAAoqJgIWAygYAAAKKiICFigZAAAKKloDLAgCFigaAAAKKnIhAABw
cxsAAAp6UgJ7FQAACgJ7FgAACheUbxcAAAoqJgIXAygYAAAKKiICFygZAAAKKloDLAgCFygaAAAK
KnIhAABwcxsAAAp6UgJ7FQAACgJ7FgAAChiUbxcAAAoqJgIYAygYAAAKKiICGCgZAAAKKloDLAgC
GCgaAAAKKnIhAABwcxsAAAp6UgJ7FQAACgJ7FgAAChmUbxcAAAoqJgIZAygYAAAKKiICGSgZAAAK
KloDLAgCGSgaAAAKKnIhAABwcxsAAAp6UgJ7FQAACgJ7FgAAChqUbxcAAAoqJgIaAygYAAAKKiIC
GigZAAAKKloDLAgCGigaAAAKKnIhAABwcxsAAAp6UgJ7FQAACgJ7FgAAChuUbxcAAAoqJgIbAygY
AAAKKiICGygZAAAKKloDLAgCGygaAAAKKnIhAABwcxsAAAp6UgJ7FQAACgJ7FgAAChyUbxcAAAoq
JgIcAygYAAAKKiICHCgZAAAKKloDLAgCHCgaAAAKKnIhAABwcxsAAAp6UgJ7FQAACgJ7FgAACh2U
bxcAAAoqJgIdAygYAAAKKiICHSgZAAAKKloDLAgCHSgaAAAKKnIhAABwcxsAAAp6UgJ7FQAACgJ7
FgAACh6UbxcAAAoqJgIeAygYAAAKKiICHigZAAAKKloDLAgCHigaAAAKKnIhAABwcxsAAAp6VgJ7
FQAACgJ7FgAACh8JlG8XAAAKKioCHwkDKBgAAAoqJgIfCSgZAAAKKl4DLAkCHwkoGgAACipyIQAA
cHMbAAAKelYCexUAAAoCexYAAAofCpRvFwAACioqAh8KAygYAAAKKiYCHwooGQAACipeAywJAh8K
KBoAAAoqciEAAHBzGwAACnpWAnsVAAAKAnsWAAAKHwuUbxcAAAoqKgIfCwMoGAAACiomAh8LKBkA
AAoqXgMsCQIfCygaAAAKKnIhAABwcxsAAAp6VgJ7FQAACgJ7FgAACh8MlG8XAAAKKioCHwwDKBgA
AAoqJgIfDCgZAAAKKl4DLAkCHwwoGgAACipyIQAAcHMbAAAKelYCexUAAAoCexYAAAofDZRvFwAA
CioqAh8NAygYAAAKKiYCHw0oGQAACipeAywJAh8NKBoAAAoqciEAAHBzGwAACnpWAnsVAAAKAnsW
AAAKHw6UbxcAAAoqKgIfDgMoGAAACiomAh8OKBkAAAoqXgMsCQIfDigaAAAKKnIhAABwcxsAAAp6
VgJ7FQAACgJ7FgAACh8PlG8XAAAKKioCHw8DKBgAAAoqJgIfDygZAAAKKl4DLAkCHw8oGgAACipy
IQAAcHMbAAAKelYCexUAAAoCexYAAAofEJRvFwAACioqAh8QAygYAAAKKiYCHxAoGQAACipeAywJ
Ah8QKBoAAAoqciEAAHBzGwAACnpWAnsVAAAKAnsWAAAKHxGUbxcAAAoqKgIfEQMoGAAACiomAh8R
KBkAAAoqXgMsCQIfESgaAAAKKnIhAABwcxsAAAp6VgJ7FQAACgJ7FgAACh8SlG8XAAAKKioCHxID
KBgAAAoqJgIfEigZAAAKKl4DLAkCHxIoGgAACipyIQAAcHMbAAAKelYCexUAAAoCexYAAAofE5Rv
FwAACioqAh8TAygYAAAKKiYCHxMoGQAACipeAywJAh8TKBoAAAoqciEAAHBzGwAACnpWAnsVAAAK
AnsWAAAKHxSUbxcAAAoqKgIfFAMoGAAACiomAh8UKBkAAAoqXgMsCQIfFCgaAAAKKnIhAABwcxsA
AAp6VgJ7FQAACgJ7FgAACh8VlG8XAAAKKioCHxUDKBgAAAoqJgIfFSgZAAAKKl4DLAkCHxUoGgAA
CipyIQAAcHMbAAAKelYCexUAAAoCexYAAAofFpRvFwAACioqAh8WAygYAAAKKiYCHxYoGQAACipe
AywJAh8WKBoAAAoqciEAAHBzGwAACnpWAnsVAAAKAnsWAAAKHxeUbxcAAAoqKgIfFwMoGAAACiom
Ah8XKBkAAAoqXgMsCQIfFygaAAAKKnIhAABwcxsAAAp6VgJ7FQAACgJ7FgAACh8YlG8XAAAKKioC
HxgDKBgAAAoqJgIfGCgZAAAKKl4DLAkCHxgoGgAACipyIQAAcHMbAAAKelYCexUAAAoCexYAAAof
GZRvFwAACioqAh8ZAygYAAAKKiYCHxkoGQAACipeAywJAh8ZKBoAAAoqciEAAHBzGwAACnpWAnsV
AAAKAnsWAAAKHxqUbxcAAAoqKgIfGgMoGAAACiomAh8aKBkAAAoqXgMsCQIfGigaAAAKKnIhAABw
cxsAAAp6VgJ7FQAACgJ7FgAACh8blG8XAAAKKioCHxsDKBgAAAoqJgIfGygZAAAKKl4DLAkCHxso
GgAACipyIQAAcHMbAAAKelYCexUAAAoCexYAAAofHJRvFwAACioqAh8cAygYAAAKKiYCHxwoGQAA
CipeAywJAh8cKBoAAAoqciEAAHBzGwAACnpWAnsVAAAKAnsWAAAKHx2UbxcAAAoqKgIfHQMoGAAA
CiomAh8dKBkAAAoqXgMsCQIfHSgaAAAKKnIhAABwcxsAAAp6VgJ7FQAACgJ7FgAACh8elG8XAAAK
KioCHx4DKBgAAAoqJgIfHigZAAAKKl4DLAkCHx4oGgAACipyIQAAcHMbAAAKelYCexUAAAoCexYA
AAofH5RvFwAACioqAh8fAygYAAAKKiYCHx8oGQAACipeAywJAh8fKBoAAAoqciEAAHBzGwAACnpW
AnsVAAAKAnsWAAAKHyCUbxcAAAoqKgIfIAMoGAAACiomAh8gKBkAAAoqXgMsCQIfICgaAAAKKnIh
AABwcxsAAAp6VgJ7FQAACgJ7FgAACh8hlG8XAAAKKiYCHyEoGQAACipWAnsVAAAKAnsWAAAKHyKU
bxcAAAoqJgIfIigZAAAKKlYCexUAAAoCexYAAAofI5RvFwAACiomAh8jKBkAAAoqVgJ7FQAACgJ7
FgAACh8klG8XAAAKKiYCHyQoGQAACipWAnsVAAAKAnsWAAAKHyWUbxcAAAoqJgIfJSgZAAAKKlYC
exUAAAoCexYAAAofJpRvFwAACiomAh8mKBkAAAoqVgJ7FQAACgJ7FgAACh8nlG8XAAAKKiYCHyco
GQAACipWAnsVAAAKAnsWAAAKHyiUbxcAAAoqJgIfKCgZAAAKKlYCexUAAAoCexYAAAofKZRvFwAA
CiomAh8pKBkAAAoqVgJ7FQAACgJ7FgAACh8qlG8XAAAKKiYCHyooGQAACipWAnsVAAAKAnsWAAAK
HyuUbxcAAAoqJgIfKygZAAAKKlYCexUAAAoCexYAAAofLJRvFwAACiomAh8sKBkAAAoqVgJ7FQAA
CgJ7FgAACh8tlG8XAAAKKiYCHy0oGQAACipWAnsVAAAKAnsWAAAKHy6UbxcAAAoqJgIfLigZAAAK
KlYCexUAAAoCexYAAAofL5RvFwAACiomAh8vKBkAAAoqVgJ7FQAACgJ7FgAACh8wlG8XAAAKKiYC
HzAoGQAACipWAnsVAAAKAnsWAAAKHzGUbxcAAAoqJgIfMSgZAAAKKlYCexUAAAoCexYAAAofMpRv
FwAACiomAh8yKBkAAAoqVgJ7FQAACgJ7FgAACh8zlG8XAAAKKiYCHzMoGQAACipWAnsVAAAKAnsW
AAAKHzSUbxcAAAoqJgIfNCgZAAAKKlYCexUAAAoCexYAAAofNZRvFwAACiomAh81KBkAAAoqVgJ7
FQAACgJ7FgAACh82lG8XAAAKKiYCHzYoGQAACipWAnsVAAAKAnsWAAAKHzeUbxcAAAoqJgIfNygZ
AAAKKlYCexUAAAoCexYAAAofOJRvFwAACiomAh84KBkAAAoqVgJ7FQAACgJ7FgAACh85lG8XAAAK
KiYCHzkoGQAACipWAnsVAAAKAnsWAAAKHzqUbxcAAAoqJgIfOigZAAAKKlYCexUAAAoCexYAAAof
O5RvFwAACiomAh87KBkAAAoqVgJ7FQAACgJ7FgAACh88lG8XAAAKKiYCHzwoGQAACipWAnsVAAAK
AnsWAAAKHz2UbxcAAAoqJgIfPSgZAAAKKlYCexUAAAoCexYAAAofPpRvFwAACiomAh8+KBkAAAoq
VgJ7FQAACgJ7FgAACh8/lG8XAAAKKiYCHz8oGQAACipWAnsVAAAKAnsWAAAKH0CUbxcAAAoqJgIf
QCgZAAAKKlYCexUAAAoCexYAAAofQZRvFwAACiomAh9BKBkAAAoqVgJ7FQAACgJ7FgAACh9ClG8c
AAAKKiYCH0IoGQAACipWAnsVAAAKAnsWAAAKH0OUbxwAAAoqJgIfQygZAAAKKlYCexUAAAoCexYA
AAofRJRvHQAACiomAh9EKBkAAAoqHgIoHgAACioeAigfAAAKKjoCKCAAAAoCA30DAAAEKjoCKCAA
AAoCA30EAAAEKh4CKCAAAAoqEzACAC0AAAABAAARfgUAAAQtIHK+AABw0AcAAAIoIgAACm8jAAAK
cyQAAAoKBoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKi5z3wAABoAHAAAEKh4CKCcA
AAoqALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADMGQAA
I34AADgaAACkMgAAI1N0cmluZ3MAAAAA3EwAADABAAAjVVMADE4AABAAAAAjR1VJRAAAABxOAADE
AQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAABAAAAIQAAAAgAAAAHAAAA4AAAAE8A
AAAnAAAADwAAAAEAAAADAAAAjQAAANAAAAABAAAABAAAAAEAAAAAAAoAAQAAAAAABgDuAM0ABgD+
AM0ACgAbARQBDgA3ASIBEgB2Ac0ABgCFAc0ACgBNHRQBCgAnLhYuCgBYLkMuCgAxLxcvCgBcL0ov
CgBzL0ovCgCQL0ovCgCvL0ovCgDIL0ovCgDhL0ovCgD8L0ovCgAXMEovCgAwMEovCgBpMEkwCgCJ
MEkwCgDLMBQBCgDSMBQBBgD7MM0ACgAuMRQBCgBaMRQBCgCcMYkxCgC5MRQBCgC+MRQBCgDiMUov
DgAOMvgxDgAnMvgxCgA8MkkwAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABAAAAACAAD
AAUAAQAQAEsAAAAJAAMACQABABAAWAAAAA0AAwDYAAEAEABkAAAADQAEANkAAAAQAG4AeAANAAUA
2gAAARAApwB4ABEABwDeAAYAWAATAAYAZAAXAAEABi5lAAEABi5lABEANy5vABEAZC5zABEAqC6R
AFAgAAAAAIYYTwEbAAEAcCAAAAAAxgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYBtAEpAAYA
qiAAAAAAxgDLARsABwCyIAAAAADGANYBGwAHALwgAAAAAMYAtAEpAAcAnCYAAAAAhhhPARsACACk
JgAAAACGGE8BLwAIAK8mAAAAAIYI4gE5AAsAxCYAAAAAhgj6AT0ACwDOJgAAAACGCBICQgAMANcm
AAAAAIYIMQJGAAwA7iYAAAAAhghQAjkADQADJwAAAACGCHYCPQANAA0nAAAAAIYInAJCAA4AFicA
AAAAhgjJAkYADgAtJwAAAACGCPYCOQAPAEInAAAAAIYIEQM9AA8ATCcAAAAAhggsA0IAEABVJwAA
AACGCE4DRgAQAGwnAAAAAIYIcAM5ABEAgScAAAAAhgiMAz0AEQCLJwAAAACGCKgDQgASAJQnAAAA
AIYIywNGABIAqycAAAAAhgjuAzkAEwDAJwAAAACGCAUEPQATAMonAAAAAIYIHARCABQA0ycAAAAA
hgg6BEYAFADqJwAAAACGCFgEOQAVAP8nAAAAAIYIewQ9ABUACSgAAAAAhgieBEIAFgASKAAAAACG
CMgERgAWACkoAAAAAIYI8gQ5ABcAPigAAAAAhggYBT0AFwBIKAAAAACGCD4FQgAYAFEoAAAAAIYI
awVGABgAaCgAAAAAhgiYBTkAGQB9KAAAAACGCLgFPQAZAIcoAAAAAIYI2AVCABoAkCgAAAAAhgj/
BUYAGgCnKAAAAACGCCYGOQAbALwoAAAAAIYITQY9ABsAxigAAAAAhgh0BkIAHADPKAAAAACGCKIG
RgAcAOYoAAAAAIYI0AY5AB0A/CgAAAAAhgjyBj0AHQAHKQAAAACGCBQHQgAeABEpAAAAAIYIPQdG
AB4AKSkAAAAAhghmBzkAHwA/KQAAAACGCIgHPQAfAEopAAAAAIYIqgdCACAAVCkAAAAAhgjTB0YA
IABsKQAAAACGCPwHOQAhAIIpAAAAAIYIHAg9ACEAjSkAAAAAhgg8CEIAIgCXKQAAAACGCGMIRgAi
AK8pAAAAAIYIigg5ACMAxSkAAAAAhgizCD0AIwDQKQAAAACGCNwIQgAkANopAAAAAIYIDAlGACQA
8ikAAAAAhgg8CTkAJQAIKgAAAACGCF4JPQAlABMqAAAAAIYIgAlCACYAHSoAAAAAhgipCUYAJgA1
KgAAAACGCNIJOQAnAEsqAAAAAIYI8gk9ACcAVioAAAAAhggSCkIAKABgKgAAAACGCDkKRgAoAHgq
AAAAAIYIYAo5ACkAjioAAAAAhgh8Cj0AKQCZKgAAAACGCJgKQgAqAKMqAAAAAIYIuwpGACoAuyoA
AAAAhgjeCjkAKwDRKgAAAACGCPsKPQArANwqAAAAAIYIGAtCACwA5ioAAAAAhgg8C0YALAD+KgAA
AACGCGALOQAtABQrAAAAAIYIhAs9AC0AHysAAAAAhgioC0IALgApKwAAAACGCNMLRgAuAEErAAAA
AIYI/gs5AC8AVysAAAAAhggmDD0ALwBiKwAAAACGCE4MQgAwAGwrAAAAAIYIfQxGADAAhCsAAAAA
hgisDDkAMQCaKwAAAACGCM0MPQAxAKUrAAAAAIYI7gxCADIArysAAAAAhggWDUYAMgDHKwAAAACG
CD4NOQAzAN0rAAAAAIYIWg09ADMA6CsAAAAAhgh2DUIANADyKwAAAACGCJkNRgA0AAosAAAAAIYI
vA05ADUAICwAAAAAhgjbDT0ANQArLAAAAACGCPoNQgA2ADUsAAAAAIYIIA5GADYATSwAAAAAhghG
DjkANwBjLAAAAACGCFsOPQA3AG4sAAAAAIYIcA5CADgAeCwAAAAAhgiMDkYAOACQLAAAAACGCKgO
OQA5AKYsAAAAAIYIyQ49ADkAsSwAAAAAhgjqDkIAOgC7LAAAAACGCBIPRgA6ANMsAAAAAIYIOg85
ADsA6SwAAAAAhghYDz0AOwD0LAAAAACGCHYPQgA8AP4sAAAAAIYImw9GADwAFi0AAAAAhgjADzkA
PQAsLQAAAACGCOAPPQA9ADctAAAAAIYIABBCAD4AQS0AAAAAhggnEEYAPgBZLQAAAACGCE4QOQA/
AG8tAAAAAIYIbRA9AD8Aei0AAAAAhgiMEEIAQACELQAAAACGCLIQRgBAAJwtAAAAAIYI2BA5AEEA
si0AAAAAhgj8ED0AQQC9LQAAAACGCCARQgBCAMctAAAAAIYISxFGAEIA3y0AAAAAhgh2ETkAQwD1
LQAAAACGCJsRPQBDAAAuAAAAAIYIwBFCAEQACi4AAAAAhgjsEUYARAAiLgAAAACGCBgSOQBFADgu
AAAAAIYINxI9AEUAQy4AAAAAhghWEkIARgBNLgAAAACGCHwSRgBGAGUuAAAAAIYIohI5AEcAey4A
AAAAhgjCEj0ARwCGLgAAAACGCOISQgBIAJAuAAAAAIYICRNGAEgAqC4AAAAAhggwEzkASQC+LgAA
AACGCE4TPQBJAMkuAAAAAIYIbBNCAEoA0y4AAAAAhgiRE0YASgDrLgAAAACGCLYTOQBLAAEvAAAA
AIYI2BM9AEsADC8AAAAAhgj6E0IATAAWLwAAAACGCCMURgBMAC4vAAAAAIYITBQ5AE0ARC8AAAAA
hghiFEIATQBOLwAAAACGCH8UOQBNAGQvAAAAAIYImBRCAE0Abi8AAAAAhgi4FDkATQCELwAAAACG
CNwUQgBNAI4vAAAAAIYIBxU5AE0ApC8AAAAAhgghFUIATQCuLwAAAACGCEIVOQBNAMQvAAAAAIYI
VxVCAE0Azi8AAAAAhghzFTkATQDkLwAAAACGCJQVQgBNAO4vAAAAAIYIvBU5AE0ABDAAAAAAhgja
FUIATQAOMAAAAACGCP8VOQBNACQwAAAAAIYIIxZCAE0ALjAAAAAAhghOFjkATQBEMAAAAACGCHMW
QgBNAE4wAAAAAIYInxY5AE0AZDAAAAAAhgi/FkIATQBuMAAAAACGCOYWOQBNAIQwAAAAAIYIBhdC
AE0AjjAAAAAAhggtFzkATQCkMAAAAACGCEsXQgBNAK4wAAAAAIYIcBc5AE0AxDAAAAAAhgiXF0IA
TQDOMAAAAACGCMUXOQBNAOQwAAAAAIYI5RdCAE0A7jAAAAAAhggMGDkATQAEMQAAAACGCCoYQgBN
AA4xAAAAAIYITxg5AE0AJDEAAAAAhghpGEIATQAuMQAAAACGCIoYOQBNAEQxAAAAAIYIpRhCAE0A
TjEAAAAAhgjHGDkATQBkMQAAAACGCOkYQgBNAG4xAAAAAIYIEhk5AE0AhDEAAAAAhgg4GUIATQCO
MQAAAACGCGUZOQBNAKQxAAAAAIYIhBlCAE0ArjEAAAAAhgiqGTkATQDEMQAAAACGCMQZQgBNAM4x
AAAAAIYI5Rk5AE0A5DEAAAAAhggCGkIATQDuMQAAAACGCCYaOQBNAAQyAAAAAIYIORpCAE0ADjIA
AAAAhghTGjkATQAkMgAAAACGCHIaQgBNAC4yAAAAAIYImBo5AE0ARDIAAAAAhgi0GkIATQBOMgAA
AACGCNcaOQBNAGQyAAAAAIYI9RpCAE0AbjIAAAAAhggaGzkATQCEMgAAAACGCDcbQgBNAI4yAAAA
AIYIWxs5AE0ApDIAAAAAhgh9G0IATQCuMgAAAACGCKYbOQBNAMQyAAAAAIYIyRtCAE0AzjIAAAAA
hgjzGzkATQDkMgAAAACGCBAcQgBNAO4yAAAAAIYINBw5AE0ABDMAAAAAhghSHEIATQAOMwAAAACG
CHccOQBNACQzAAAAAIYIkxxCAE0ALjMAAAAAhgi2HDkATQBEMwAAAACGCNYcQgBNAE4zAAAAAIYI
/RxLAE0AZDMAAAAAhggQHUIATQBuMwAAAACGCCodSwBNAIQzAAAAAIYIOB1CAE0AjjMAAAAAhghW
HU8ATQCkMwAAAACGCHYdQgBNAK4zAAAAAIYAnR1CAE0AtjMAAAAAhgClHUIATQC+MwAAAACGGE8B
aQBNAM0zAAAAAIYYTwFpAE4A3DMAAAAAgxhPARsATwDkMwAAAACTCHQudwBPAB00AAAAAJMIiC58
AE8AJDQAAAAAkwiULoEATwAsNAAAAACWCLgulQBQAD80AAAAAIYYTwEbAFAAMzQAAAAAkRhXMgcB
UAAAAAEAzC4AAAIA1C4AAAMA3i4AAAQA5S4AAAEA3i4AAAEA7y4AAAEA7y4AAAEA3i4AAAIA8y4A
AAMA5S4AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEA
By8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8A
AAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEA
By8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8A
AAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEA
By8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8A
AAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEABy8AAAEA
By8AAAEADS8AAAEADS8AAAEABy9RAE8BPQBZAE8BPQBhAE8BPQBpAE8BPQBxAE8BPQB5AE8BPQCB
AE8BPQCJAE8BPQCRAE8BPQCZAE8BPQChAE8BnwCpAE8BGwAJAE8BGwCxAOMwpAAJAOowqwDBAE8B
GwAJAMsBGwAJANYBGwCxACIxtgARAE8BLwARAN4uvAARAPMuwAApADgxxAARAEIxyQARAEsxzwAR
AFIxnwDRAE8BPQApAHQx1AApAH0x2QARAJ0dQgARAKUdQgAZAE8BGwDZAE8BGwDhANAx3wDhAOsx
5gBBAE8B6wD5AE8B9wAJAU8BGwAhAE8BGwAuABsAfAEuAGMAogEuAAsACwEuABMAUwEuACMAfAEu
ACsAfAEuADMAUwEuADsAggEuAEMAfAEuAFsAmQFjAIMAsQDhADMBsQDjAAsBsQBpESsB/gCJESsB
/gDyAAQAAQAHAIsACACNAAAAsR1UAAAAxR1YAAAA4B1UAAAAAh5YAAAAKx5UAAAAQh5YAAAAYB5U
AAAAeB5YAAAAlx5UAAAAqh5YAAAAxB5UAAAA4x5YAAAACR9UAAAAKx9YAAAAVB9UAAAAcB9YAAAA
kx9UAAAAth9YAAAA4B9UAAAA/h9YAAAAIyBUAAAAQSBYAAAAZiBUAAAAgiBYAAAApSBUAAAAyiBY
AAAA9iBUAAAAFCFYAAAAOSFUAAAAVSFYAAAAeCFUAAAAkCFYAAAAryFUAAAAyCFYAAAA6CFUAAAA
CCJYAAAALyJUAAAAUyJYAAAAfiJUAAAAmyJYAAAAvyJUAAAA1yJYAAAA9iJUAAAAESNYAAAAMyNU
AAAARCNYAAAAXCNUAAAAeSNYAAAAnSNUAAAAtyNYAAAA2CNUAAAA9CNYAAAAFyRUAAAAMiRYAAAA
VCRUAAAAdCRYAAAAmyRUAAAAvCRYAAAA5CRUAAAA/yRYAAAAISVUAAAAPSVYAAAAYCVUAAAAeiVY
AAAAmyVUAAAAuSVYAAAA3iVUAAAA8CVYAAAACSZUAAAAHiZYAAAAOiZUAAAAWiZYAAAAgSZUAAAA
lyZYAAAAtCZUAAAAxSZYAAAA3SZUAAAA+iZYAAAAHidUAAAAOCdYAAAAWSdUAAAAeSdYAAAAoCdU
AAAAwSdYAAAA6SdUAAAABShYAAAAKChUAAAARChYAAAAZyhUAAAAgShYAAAAoihUAAAAxShYAAAA
7yhUAAAACylYAAAALilUAAAASClYAAAAaSlUAAAAfylYAAAAnClUAAAAsylYAAAA0SlUAAAA7ylY
AAAAFCpUAAAANipYAAAAXypUAAAAeipYAAAAnCpUAAAAsipYAAAAzypUAAAA6CpYAAAACCtUAAAA
FytYAAAALStUAAAASCtYAAAAaitUAAAAgitYAAAAoStUAAAAuytYAAAA3CtUAAAA9StYAAAAFSxU
AAAAMyxYAAAAWCxUAAAAdyxYAAAAnSxUAAAAtixYAAAA1ixUAAAA8CxYAAAAES1UAAAAKS1YAAAA
SC1UAAAAZC1YAAAAhy1cAAAAli1YAAAArC1cAAAAti1YAAAAxy1gAAAA4y1YAAAAJy6HAAAAoC6M
AAAAxC6aAAIACgADAAEACwADAAIADAAFAAEADQAFAAIADgAHAAEADwAHAAEAEQAJAAIAEAAJAAIA
EgALAAEAEwALAAEAFQANAAIAFAANAAEAFwAPAAIAFgAPAAIAGAARAAEAGQARAAEAGwATAAIAGgAT
AAIAHAAVAAEAHQAVAAIAHgAXAAEAHwAXAAIAIAAZAAEAIQAZAAIAIgAbAAEAIwAbAAEAJQAdAAIA
JAAdAAIAJgAfAAEAJwAfAAIAKAAhAAEAKQAhAAEAKwAjAAIAKgAjAAIALAAlAAEALQAlAAEALwAn
AAIALgAnAAEAMQApAAIAMAApAAIAMgArAAEAMwArAAEANQAtAAIANAAtAAIANgAvAAEANwAvAAIA
OAAxAAEAOQAxAAIAOgAzAAEAOwAzAAIAPAA1AAEAPQA1AAEAPwA3AAIAPgA3AAIAQAA5AAEAQQA5
AAIAQgA7AAEAQwA7AAEARQA9AAIARAA9AAIARgA/AAEARwA/AAEASQBBAAIASABBAAEASwBDAAIA
SgBDAAIATABFAAEATQBFAAEATwBHAAIATgBHAAIAUABJAAEAUQBJAAIAUgBLAAEAUwBLAAIAVABN
AAEAVQBNAAIAVgBPAAEAVwBPAAEAWQBRAAIAWABRAAIAWgBTAAEAWwBTAAIAXABVAAEAXQBVAAEA
XwBXAAIAXgBXAAIAYABZAAEAYQBZAAEAYwBbAAIAYgBbAAEAZQBdAAIAZABdAAIAZgBfAAEAZwBf
AAEAaQBhAAIAaABhAAIAagBjAAEAawBjAAIAbABlAAEAbQBlAAIAbgBnAAEAbwBnAAEAcQBpAAIA
cABpAAEAcwBrAAIAcgBrAAIAdABtAAEAdQBtAAIAdgBvAAEAdwBvAAEAeQBxAAIAeABxAAIAegBz
AAEAewBzAAEAfQB1AAIAfAB1AAEAfwB3AAIAfgB3AAIAgAB5AAEAgQB5AAEAgwB7AAIAggB7AAIA
hAB9AAEAhQB9AAIAhgB/AAEAhwB/AAIAiACBAAEAiQCBAAIAigCDAAEAiwCDAAEAjQCFAAIAjACF
AAIAjgCHAAIAjwCJAAIAkACLAAIAkQCNAAIAkgCPAAIAkwCRAAIAlACTAAIAlQCVAAIAlgCXAAIA
lwCZAAIAmACbAAIAmQCdAAIAmgCfAAIAmwChAAIAnACjAAIAnQClAAIAngCnAAIAnwCpAAIAoACr
AAIAoQCtAAIAogCvAAIAowCxAAIApACzAAIApQC1AAIApgC3AAIApwC5AAIAqAC7AAIAqQC9AAIA
qgC/AAIAqwDBAAIArADDAAIArQDFAAIArgDHAAIArwDJAAIAsADLAAIAsQDNAAIAsgDPAAIAswDR
AAIAtADTAAIAtQDVAAIAtgDXAAIAtwDZAAIAuADbAAIAuQDdAAIAugDfAAIAuwDhAAIAvADjAAIA
vQDlAAIAvgDnAAIAvwDpAAIAwADrAAIAwQDtAAIAwgDvAAIAwwDxAAIAxADzAAIAxQD1AAIAxgD3
AAIAxwD5AAIAyAD7AAIAyQD9AAIAygD/AAIAywABAQIAzAADAQIAzQAFAQIAzgAHAQIAzwAJAQIA
0AALAQIA0QANAQIA0gAPAQIA0wARAQIA1AATAQIA1QAVAQIA2wAXAQIA3AAZAQEA3QAZAQIA3gAb
AQSAAAABAAAAKx3McAAAAAAAAKcwAAAMAAAAAAAAAAAAAAABALAAAAAAAAQAAAAAAAAAAAAAAAoA
CwEAAAAABAAAAAAAAAAAAAAACgAUAQAAAAAMAAAAAAAAAAAAAAABAFUBAAAAAAAAAAABAAAAXjIA
AAAAADxNb2R1bGU+AFNDXzE4NWQzYTE0Mjc3ZDQ0ODY5MDhmYWJmYmVmODRmYzVlLmRsbABVc2Vy
Q29tcG9uZW50AFNjcmlwdE1haW4ASW5wdXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBS
ZXNvdXJjZXMAU0NfMTg1ZDNhMTQyNzdkNDQ4NjkwOGZhYmZiZWY4NGZjNWUuUHJvcGVydGllcwBT
ZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlBpcGVsaW5lAFNjcmlwdENvbXBvbmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVt
AE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3Rv
cgBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXRO
YW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBnZXRfZG9jdW1lbnRjb2RlU1RBR0lORwBzZXRf
ZG9jdW1lbnRjb2RlU1RBR0lORwBnZXRfZG9jdW1lbnRjb2RlU1RBR0lOR19Jc051bGwAc2V0X2Rv
Y3VtZW50Y29kZVNUQUdJTkdfSXNOdWxsAGdldF9jb250cmFjdGluY2x1ZGVzc3VidmVuZG9yc1NU
QUdJTkcAc2V0X2NvbnRyYWN0aW5jbHVkZXNzdWJ2ZW5kb3JzU1RBR0lORwBnZXRfY29udHJhY3Rp
bmNsdWRlc3N1YnZlbmRvcnNTVEFHSU5HX0lzTnVsbABzZXRfY29udHJhY3RpbmNsdWRlc3N1YnZl
bmRvcnNTVEFHSU5HX0lzTnVsbABnZXRfcHJpbWVjb250cmFjdGlkU1RBR0lORwBzZXRfcHJpbWVj
b250cmFjdGlkU1RBR0lORwBnZXRfcHJpbWVjb250cmFjdGlkU1RBR0lOR19Jc051bGwAc2V0X3By
aW1lY29udHJhY3RpZFNUQUdJTkdfSXNOdWxsAGdldF92ZW5kb3JyZWNvcmR0eXBlU1RBR0lORwBz
ZXRfdmVuZG9ycmVjb3JkdHlwZVNUQUdJTkcAZ2V0X3ZlbmRvcnJlY29yZHR5cGVTVEFHSU5HX0lz
TnVsbABzZXRfdmVuZG9ycmVjb3JkdHlwZVNUQUdJTkdfSXNOdWxsAGdldF9wcmltZXZlbmRvclNU
QUdJTkcAc2V0X3ByaW1ldmVuZG9yU1RBR0lORwBnZXRfcHJpbWV2ZW5kb3JTVEFHSU5HX0lzTnVs
bABzZXRfcHJpbWV2ZW5kb3JTVEFHSU5HX0lzTnVsbABnZXRfcHJpbWV2ZW5kb3Jtd2JlY2F0ZWdv
cnlTVEFHSU5HAHNldF9wcmltZXZlbmRvcm13YmVjYXRlZ29yeVNUQUdJTkcAZ2V0X3ByaW1ldmVu
ZG9ybXdiZWNhdGVnb3J5U1RBR0lOR19Jc051bGwAc2V0X3ByaW1ldmVuZG9ybXdiZWNhdGVnb3J5
U1RBR0lOR19Jc051bGwAZ2V0X3ByaW1lY29udHJhY3RjdXJyZW50YW1vdW50U1RBR0lORwBzZXRf
cHJpbWVjb250cmFjdGN1cnJlbnRhbW91bnRTVEFHSU5HAGdldF9wcmltZWNvbnRyYWN0Y3VycmVu
dGFtb3VudFNUQUdJTkdfSXNOdWxsAHNldF9wcmltZWNvbnRyYWN0Y3VycmVudGFtb3VudFNUQUdJ
TkdfSXNOdWxsAGdldF9wcmltZWNvbnRyYWN0cHVycG9zZVNUQUdJTkcAc2V0X3ByaW1lY29udHJh
Y3RwdXJwb3NlU1RBR0lORwBnZXRfcHJpbWVjb250cmFjdHB1cnBvc2VTVEFHSU5HX0lzTnVsbABz
ZXRfcHJpbWVjb250cmFjdHB1cnBvc2VTVEFHSU5HX0lzTnVsbABnZXRfcHJpbWVjb250cmFjdG9y
aWdpbmFsYW1vdW50U1RBR0lORwBzZXRfcHJpbWVjb250cmFjdG9yaWdpbmFsYW1vdW50U1RBR0lO
RwBnZXRfcHJpbWVjb250cmFjdG9yaWdpbmFsYW1vdW50U1RBR0lOR19Jc051bGwAc2V0X3ByaW1l
Y29udHJhY3RvcmlnaW5hbGFtb3VudFNUQUdJTkdfSXNOdWxsAGdldF9wcmltZXZlbmRvcnNwZW50
dG9kYXRlU1RBR0lORwBzZXRfcHJpbWV2ZW5kb3JzcGVudHRvZGF0ZVNUQUdJTkcAZ2V0X3ByaW1l
dmVuZG9yc3BlbnR0b2RhdGVTVEFHSU5HX0lzTnVsbABzZXRfcHJpbWV2ZW5kb3JzcGVudHRvZGF0
ZVNUQUdJTkdfSXNOdWxsAGdldF9wcmltZWNvbnRyYWN0c3RhcnRkYXRlU1RBR0lORwBzZXRfcHJp
bWVjb250cmFjdHN0YXJ0ZGF0ZVNUQUdJTkcAZ2V0X3ByaW1lY29udHJhY3RzdGFydGRhdGVTVEFH
SU5HX0lzTnVsbABzZXRfcHJpbWVjb250cmFjdHN0YXJ0ZGF0ZVNUQUdJTkdfSXNOdWxsAGdldF9w
cmltZWNvbnRyYWN0ZW5kZGF0ZVNUQUdJTkcAc2V0X3ByaW1lY29udHJhY3RlbmRkYXRlU1RBR0lO
RwBnZXRfcHJpbWVjb250cmFjdGVuZGRhdGVTVEFHSU5HX0lzTnVsbABzZXRfcHJpbWVjb250cmFj
dGVuZGRhdGVTVEFHSU5HX0lzTnVsbABnZXRfcHJpbWVjb250cmFjdHJlZ2lzdHJhdGlvbmRhdGVT
VEFHSU5HAHNldF9wcmltZWNvbnRyYWN0cmVnaXN0cmF0aW9uZGF0ZVNUQUdJTkcAZ2V0X3ByaW1l
Y29udHJhY3RyZWdpc3RyYXRpb25kYXRlU1RBR0lOR19Jc051bGwAc2V0X3ByaW1lY29udHJhY3Ry
ZWdpc3RyYXRpb25kYXRlU1RBR0lOR19Jc051bGwAZ2V0X3ByaW1lY29udHJhY3RpbmdhZ2VuY3lT
VEFHSU5HAHNldF9wcmltZWNvbnRyYWN0aW5nYWdlbmN5U1RBR0lORwBnZXRfcHJpbWVjb250cmFj
dGluZ2FnZW5jeVNUQUdJTkdfSXNOdWxsAHNldF9wcmltZWNvbnRyYWN0aW5nYWdlbmN5U1RBR0lO
R19Jc051bGwAZ2V0X3ByaW1lY29udHJhY3R2ZXJzaW9uU1RBR0lORwBzZXRfcHJpbWVjb250cmFj
dHZlcnNpb25TVEFHSU5HAGdldF9wcmltZWNvbnRyYWN0dmVyc2lvblNUQUdJTkdfSXNOdWxsAHNl
dF9wcmltZWNvbnRyYWN0dmVyc2lvblNUQUdJTkdfSXNOdWxsAGdldF9wYXJlbnRjb250cmFjdGlk
U1RBR0lORwBzZXRfcGFyZW50Y29udHJhY3RpZFNUQUdJTkcAZ2V0X3BhcmVudGNvbnRyYWN0aWRT
VEFHSU5HX0lzTnVsbABzZXRfcGFyZW50Y29udHJhY3RpZFNUQUdJTkdfSXNOdWxsAGdldF9wcmlt
ZWNvbnRyYWN0dHlwZVNUQUdJTkcAc2V0X3ByaW1lY29udHJhY3R0eXBlU1RBR0lORwBnZXRfcHJp
bWVjb250cmFjdHR5cGVTVEFHSU5HX0lzTnVsbABzZXRfcHJpbWVjb250cmFjdHR5cGVTVEFHSU5H
X0lzTnVsbABnZXRfcHJpbWVjb250cmFjdGF3YXJkbWV0aG9kU1RBR0lORwBzZXRfcHJpbWVjb250
cmFjdGF3YXJkbWV0aG9kU1RBR0lORwBnZXRfcHJpbWVjb250cmFjdGF3YXJkbWV0aG9kU1RBR0lO
R19Jc051bGwAc2V0X3ByaW1lY29udHJhY3Rhd2FyZG1ldGhvZFNUQUdJTkdfSXNOdWxsAGdldF9w
cmltZWNvbnRyYWN0ZXhwZW5zZWNhdGVnb3J5U1RBR0lORwBzZXRfcHJpbWVjb250cmFjdGV4cGVu
c2VjYXRlZ29yeVNUQUdJTkcAZ2V0X3ByaW1lY29udHJhY3RleHBlbnNlY2F0ZWdvcnlTVEFHSU5H
X0lzTnVsbABzZXRfcHJpbWVjb250cmFjdGV4cGVuc2VjYXRlZ29yeVNUQUdJTkdfSXNOdWxsAGdl
dF9wcmltZWNvbnRyYWN0aW5kdXN0cnlTVEFHSU5HAHNldF9wcmltZWNvbnRyYWN0aW5kdXN0cnlT
VEFHSU5HAGdldF9wcmltZWNvbnRyYWN0aW5kdXN0cnlTVEFHSU5HX0lzTnVsbABzZXRfcHJpbWVj
b250cmFjdGluZHVzdHJ5U1RBR0lOR19Jc051bGwAZ2V0X3ByaW1lY29udHJhY3RwaW5TVEFHSU5H
AHNldF9wcmltZWNvbnRyYWN0cGluU1RBR0lORwBnZXRfcHJpbWVjb250cmFjdHBpblNUQUdJTkdf
SXNOdWxsAHNldF9wcmltZWNvbnRyYWN0cGluU1RBR0lOR19Jc051bGwAZ2V0X3ByaW1lY29udHJh
Y3RhcHRwaW5TVEFHSU5HAHNldF9wcmltZWNvbnRyYWN0YXB0cGluU1RBR0lORwBnZXRfcHJpbWVj
b250cmFjdGFwdHBpblNUQUdJTkdfSXNOdWxsAHNldF9wcmltZWNvbnRyYWN0YXB0cGluU1RBR0lO
R19Jc051bGwAZ2V0X3N1YnZlbmRvclNUQUdJTkcAc2V0X3N1YnZlbmRvclNUQUdJTkcAZ2V0X3N1
YnZlbmRvclNUQUdJTkdfSXNOdWxsAHNldF9zdWJ2ZW5kb3JTVEFHSU5HX0lzTnVsbABnZXRfc3Vi
dmVuZG9ybXdiZWNhdGVnb3J5U1RBR0lORwBzZXRfc3VidmVuZG9ybXdiZWNhdGVnb3J5U1RBR0lO
RwBnZXRfc3VidmVuZG9ybXdiZWNhdGVnb3J5U1RBR0lOR19Jc051bGwAc2V0X3N1YnZlbmRvcm13
YmVjYXRlZ29yeVNUQUdJTkdfSXNOdWxsAGdldF9zdWJjb250cmFjdHB1cnBvc2VTVEFHSU5HAHNl
dF9zdWJjb250cmFjdHB1cnBvc2VTVEFHSU5HAGdldF9zdWJjb250cmFjdHB1cnBvc2VTVEFHSU5H
X0lzTnVsbABzZXRfc3ViY29udHJhY3RwdXJwb3NlU1RBR0lOR19Jc051bGwAZ2V0X3N1YnZlbmRv
cnN0YXR1c2lucGlwU1RBR0lORwBzZXRfc3VidmVuZG9yc3RhdHVzaW5waXBTVEFHSU5HAGdldF9z
dWJ2ZW5kb3JzdGF0dXNpbnBpcFNUQUdJTkdfSXNOdWxsAHNldF9zdWJ2ZW5kb3JzdGF0dXNpbnBp
cFNUQUdJTkdfSXNOdWxsAGdldF9zdWJjb250cmFjdGluZHVzdHJ5U1RBR0lORwBzZXRfc3ViY29u
dHJhY3RpbmR1c3RyeVNUQUdJTkcAZ2V0X3N1YmNvbnRyYWN0aW5kdXN0cnlTVEFHSU5HX0lzTnVs
bABzZXRfc3ViY29udHJhY3RpbmR1c3RyeVNUQUdJTkdfSXNOdWxsAGdldF9zdWJjb250cmFjdGN1
cnJlbnRhbW91bnRTVEFHSU5HAHNldF9zdWJjb250cmFjdGN1cnJlbnRhbW91bnRTVEFHSU5HAGdl
dF9zdWJjb250cmFjdGN1cnJlbnRhbW91bnRTVEFHSU5HX0lzTnVsbABzZXRfc3ViY29udHJhY3Rj
dXJyZW50YW1vdW50U1RBR0lOR19Jc051bGwAZ2V0X3N1YmNvbnRyYWN0b3JpZ2luYWxhbW91bnRT
VEFHSU5HAHNldF9zdWJjb250cmFjdG9yaWdpbmFsYW1vdW50U1RBR0lORwBnZXRfc3ViY29udHJh
Y3RvcmlnaW5hbGFtb3VudFNUQUdJTkdfSXNOdWxsAHNldF9zdWJjb250cmFjdG9yaWdpbmFsYW1v
dW50U1RBR0lOR19Jc051bGwAZ2V0X3N1YnZlbmRvcnBhaWR0b2RhdGVTVEFHSU5HAHNldF9zdWJ2
ZW5kb3JwYWlkdG9kYXRlU1RBR0lORwBnZXRfc3VidmVuZG9ycGFpZHRvZGF0ZVNUQUdJTkdfSXNO
dWxsAHNldF9zdWJ2ZW5kb3JwYWlkdG9kYXRlU1RBR0lOR19Jc051bGwAZ2V0X3N1YmNvbnRyYWN0
c3RhcnRkYXRlU1RBR0lORwBzZXRfc3ViY29udHJhY3RzdGFydGRhdGVTVEFHSU5HAGdldF9zdWJj
b250cmFjdHN0YXJ0ZGF0ZVNUQUdJTkdfSXNOdWxsAHNldF9zdWJjb250cmFjdHN0YXJ0ZGF0ZVNU
QUdJTkdfSXNOdWxsAGdldF9zdWJjb250cmFjdGVuZGRhdGVTVEFHSU5HAHNldF9zdWJjb250cmFj
dGVuZGRhdGVTVEFHSU5HAGdldF9zdWJjb250cmFjdGVuZGRhdGVTVEFHSU5HX0lzTnVsbABzZXRf
c3ViY29udHJhY3RlbmRkYXRlU1RBR0lOR19Jc051bGwAZ2V0X3N1YmNvbnRyYWN0cmVmZXJlbmNl
aWRTVEFHSU5HAHNldF9zdWJjb250cmFjdHJlZmVyZW5jZWlkU1RBR0lORwBnZXRfc3ViY29udHJh
Y3RyZWZlcmVuY2VpZFNUQUdJTkdfSXNOdWxsAHNldF9zdWJjb250cmFjdHJlZmVyZW5jZWlkU1RB
R0lOR19Jc051bGwAZ2V0X2RvY3VtZW50Y29kZUZJTkFMAGdldF9kb2N1bWVudGNvZGVGSU5BTF9J
c051bGwAZ2V0X3ByaW1lY29udHJhY3RpZEZJTkFMAGdldF9wcmltZWNvbnRyYWN0aWRGSU5BTF9J
c051bGwAZ2V0X2NvbnRyYWN0aW5jbHVkZXNzdWJ2ZW5kb3JzRklOQUwAZ2V0X2NvbnRyYWN0aW5j
bHVkZXNzdWJ2ZW5kb3JzRklOQUxfSXNOdWxsAGdldF92ZW5kb3JyZWNvcmR0eXBlRklOQUwAZ2V0
X3ZlbmRvcnJlY29yZHR5cGVGSU5BTF9Jc051bGwAZ2V0X3ByaW1ldmVuZG9yRklOQUwAZ2V0X3By
aW1ldmVuZG9yRklOQUxfSXNOdWxsAGdldF9wcmltZXZlbmRvcm13YmVjYXRlZ29yeUZJTkFMAGdl
dF9wcmltZXZlbmRvcm13YmVjYXRlZ29yeUZJTkFMX0lzTnVsbABnZXRfcHJpbWVjb250cmFjdHB1
cnBvc2VGSU5BTABnZXRfcHJpbWVjb250cmFjdHB1cnBvc2VGSU5BTF9Jc051bGwAZ2V0X3ByaW1l
Y29udHJhY3RjdXJyZW50YW1vdW50RklOQUwAZ2V0X3ByaW1lY29udHJhY3RjdXJyZW50YW1vdW50
RklOQUxfSXNOdWxsAGdldF9wcmltZWNvbnRyYWN0b3JpZ2luYWxhbW91bnRGSU5BTABnZXRfcHJp
bWVjb250cmFjdG9yaWdpbmFsYW1vdW50RklOQUxfSXNOdWxsAGdldF9wcmltZXZlbmRvcnNwZW50
dG9kYXRlRklOQUwAZ2V0X3ByaW1ldmVuZG9yc3BlbnR0b2RhdGVGSU5BTF9Jc051bGwAZ2V0X3By
aW1lY29udHJhY3RzdGFydGRhdGVGSU5BTABnZXRfcHJpbWVjb250cmFjdHN0YXJ0ZGF0ZUZJTkFM
X0lzTnVsbABnZXRfcHJpbWVjb250cmFjdGVuZGRhdGVGSU5BTABnZXRfcHJpbWVjb250cmFjdGVu
ZGRhdGVGSU5BTF9Jc051bGwAZ2V0X3ByaW1lY29udHJhY3RyZWdpc3RyYXRpb25kYXRlRklOQUwA
Z2V0X3ByaW1lY29udHJhY3RyZWdpc3RyYXRpb25kYXRlRklOQUxfSXNOdWxsAGdldF9wcmltZWNv
bnRyYWN0aW5nYWdlbmN5RklOQUwAZ2V0X3ByaW1lY29udHJhY3RpbmdhZ2VuY3lGSU5BTF9Jc051
bGwAZ2V0X3ByaW1lY29udHJhY3R2ZXJzaW9uRklOQUwAZ2V0X3ByaW1lY29udHJhY3R2ZXJzaW9u
RklOQUxfSXNOdWxsAGdldF9wYXJlbnRjb250cmFjdGlkRklOQUwAZ2V0X3BhcmVudGNvbnRyYWN0
aWRGSU5BTF9Jc051bGwAZ2V0X3ByaW1lY29udHJhY3R0eXBlRklOQUwAZ2V0X3ByaW1lY29udHJh
Y3R0eXBlRklOQUxfSXNOdWxsAGdldF9wcmltZWNvbnRyYWN0YXdhcmRtZXRob2RGSU5BTABnZXRf
cHJpbWVjb250cmFjdGF3YXJkbWV0aG9kRklOQUxfSXNOdWxsAGdldF9wcmltZWNvbnRyYWN0ZXhw
ZW5zZWNhdGVnb3J5RklOQUwAZ2V0X3ByaW1lY29udHJhY3RleHBlbnNlY2F0ZWdvcnlGSU5BTF9J
c051bGwAZ2V0X3ByaW1lY29udHJhY3RpbmR1c3RyeUZJTkFMAGdldF9wcmltZWNvbnRyYWN0aW5k
dXN0cnlGSU5BTF9Jc051bGwAZ2V0X3ByaW1lY29udHJhY3RwaW5GSU5BTABnZXRfcHJpbWVjb250
cmFjdHBpbkZJTkFMX0lzTnVsbABnZXRfcHJpbWVjb250cmFjdGFwdHBpbkZJTkFMAGdldF9wcmlt
ZWNvbnRyYWN0YXB0cGluRklOQUxfSXNOdWxsAGdldF9zdWJ2ZW5kb3JGSU5BTABnZXRfc3VidmVu
ZG9yRklOQUxfSXNOdWxsAGdldF9zdWJ2ZW5kb3Jtd2JlY2F0ZWdvcnlGSU5BTABnZXRfc3VidmVu
ZG9ybXdiZWNhdGVnb3J5RklOQUxfSXNOdWxsAGdldF9zdWJjb250cmFjdHB1cnBvc2VGSU5BTABn
ZXRfc3ViY29udHJhY3RwdXJwb3NlRklOQUxfSXNOdWxsAGdldF9zdWJ2ZW5kb3JzdGF0dXNpbnBp
cEZJTkFMAGdldF9zdWJ2ZW5kb3JzdGF0dXNpbnBpcEZJTkFMX0lzTnVsbABnZXRfc3ViY29udHJh
Y3RpbmR1c3RyeUZJTkFMAGdldF9zdWJjb250cmFjdGluZHVzdHJ5RklOQUxfSXNOdWxsAGdldF9z
dWJjb250cmFjdGN1cnJlbnRhbW91bnRGSU5BTABnZXRfc3ViY29udHJhY3RjdXJyZW50YW1vdW50
RklOQUxfSXNOdWxsAGdldF9zdWJjb250cmFjdG9yaWdpbmFsYW1vdW50RklOQUwAZ2V0X3N1YmNv
bnRyYWN0b3JpZ2luYWxhbW91bnRGSU5BTF9Jc051bGwAZ2V0X3N1YnZlbmRvcnBhaWR0b2RhdGVG
SU5BTABnZXRfc3VidmVuZG9ycGFpZHRvZGF0ZUZJTkFMX0lzTnVsbABnZXRfc3ViY29udHJhY3Rz
dGFydGRhdGVGSU5BTABnZXRfc3ViY29udHJhY3RzdGFydGRhdGVGSU5BTF9Jc051bGwAZ2V0X3N1
YmNvbnRyYWN0ZW5kZGF0ZUZJTkFMAGdldF9zdWJjb250cmFjdGVuZGRhdGVGSU5BTF9Jc051bGwA
Z2V0X3N1YmNvbnRyYWN0cmVmZXJlbmNlaWRGSU5BTABnZXRfc3ViY29udHJhY3RyZWZlcmVuY2Vp
ZEZJTkFMX0lzTnVsbABnZXRfU3RhZ2luZ0lERklOQUwAZ2V0X1N0YWdpbmdJREZJTkFMX0lzTnVs
bABnZXRfSURTVEFHSU5HAGdldF9JRFNUQUdJTkdfSXNOdWxsAERhdGVUaW1lAGdldF9MYXN0VXBk
YXRlZFRpbWVzdGFtcERlcml2ZWQAZ2V0X0xhc3RVcGRhdGVkVGltZXN0YW1wRGVyaXZlZF9Jc051
bGwATmV4dFJvdwBFbmRPZlJvd3NldABkb2N1bWVudGNvZGVTVEFHSU5HAGRvY3VtZW50Y29kZVNU
QUdJTkdfSXNOdWxsAGNvbnRyYWN0aW5jbHVkZXNzdWJ2ZW5kb3JzU1RBR0lORwBjb250cmFjdGlu
Y2x1ZGVzc3VidmVuZG9yc1NUQUdJTkdfSXNOdWxsAHByaW1lY29udHJhY3RpZFNUQUdJTkcAcHJp
bWVjb250cmFjdGlkU1RBR0lOR19Jc051bGwAdmVuZG9ycmVjb3JkdHlwZVNUQUdJTkcAdmVuZG9y
cmVjb3JkdHlwZVNUQUdJTkdfSXNOdWxsAHByaW1ldmVuZG9yU1RBR0lORwBwcmltZXZlbmRvclNU
QUdJTkdfSXNOdWxsAHByaW1ldmVuZG9ybXdiZWNhdGVnb3J5U1RBR0lORwBwcmltZXZlbmRvcm13
YmVjYXRlZ29yeVNUQUdJTkdfSXNOdWxsAHByaW1lY29udHJhY3RjdXJyZW50YW1vdW50U1RBR0lO
RwBwcmltZWNvbnRyYWN0Y3VycmVudGFtb3VudFNUQUdJTkdfSXNOdWxsAHByaW1lY29udHJhY3Rw
dXJwb3NlU1RBR0lORwBwcmltZWNvbnRyYWN0cHVycG9zZVNUQUdJTkdfSXNOdWxsAHByaW1lY29u
dHJhY3RvcmlnaW5hbGFtb3VudFNUQUdJTkcAcHJpbWVjb250cmFjdG9yaWdpbmFsYW1vdW50U1RB
R0lOR19Jc051bGwAcHJpbWV2ZW5kb3JzcGVudHRvZGF0ZVNUQUdJTkcAcHJpbWV2ZW5kb3JzcGVu
dHRvZGF0ZVNUQUdJTkdfSXNOdWxsAHByaW1lY29udHJhY3RzdGFydGRhdGVTVEFHSU5HAHByaW1l
Y29udHJhY3RzdGFydGRhdGVTVEFHSU5HX0lzTnVsbABwcmltZWNvbnRyYWN0ZW5kZGF0ZVNUQUdJ
TkcAcHJpbWVjb250cmFjdGVuZGRhdGVTVEFHSU5HX0lzTnVsbABwcmltZWNvbnRyYWN0cmVnaXN0
cmF0aW9uZGF0ZVNUQUdJTkcAcHJpbWVjb250cmFjdHJlZ2lzdHJhdGlvbmRhdGVTVEFHSU5HX0lz
TnVsbABwcmltZWNvbnRyYWN0aW5nYWdlbmN5U1RBR0lORwBwcmltZWNvbnRyYWN0aW5nYWdlbmN5
U1RBR0lOR19Jc051bGwAcHJpbWVjb250cmFjdHZlcnNpb25TVEFHSU5HAHByaW1lY29udHJhY3R2
ZXJzaW9uU1RBR0lOR19Jc051bGwAcGFyZW50Y29udHJhY3RpZFNUQUdJTkcAcGFyZW50Y29udHJh
Y3RpZFNUQUdJTkdfSXNOdWxsAHByaW1lY29udHJhY3R0eXBlU1RBR0lORwBwcmltZWNvbnRyYWN0
dHlwZVNUQUdJTkdfSXNOdWxsAHByaW1lY29udHJhY3Rhd2FyZG1ldGhvZFNUQUdJTkcAcHJpbWVj
b250cmFjdGF3YXJkbWV0aG9kU1RBR0lOR19Jc051bGwAcHJpbWVjb250cmFjdGV4cGVuc2VjYXRl
Z29yeVNUQUdJTkcAcHJpbWVjb250cmFjdGV4cGVuc2VjYXRlZ29yeVNUQUdJTkdfSXNOdWxsAHBy
aW1lY29udHJhY3RpbmR1c3RyeVNUQUdJTkcAcHJpbWVjb250cmFjdGluZHVzdHJ5U1RBR0lOR19J
c051bGwAcHJpbWVjb250cmFjdHBpblNUQUdJTkcAcHJpbWVjb250cmFjdHBpblNUQUdJTkdfSXNO
dWxsAHByaW1lY29udHJhY3RhcHRwaW5TVEFHSU5HAHByaW1lY29udHJhY3RhcHRwaW5TVEFHSU5H
X0lzTnVsbABzdWJ2ZW5kb3JTVEFHSU5HAHN1YnZlbmRvclNUQUdJTkdfSXNOdWxsAHN1YnZlbmRv
cm13YmVjYXRlZ29yeVNUQUdJTkcAc3VidmVuZG9ybXdiZWNhdGVnb3J5U1RBR0lOR19Jc051bGwA
c3ViY29udHJhY3RwdXJwb3NlU1RBR0lORwBzdWJjb250cmFjdHB1cnBvc2VTVEFHSU5HX0lzTnVs
bABzdWJ2ZW5kb3JzdGF0dXNpbnBpcFNUQUdJTkcAc3VidmVuZG9yc3RhdHVzaW5waXBTVEFHSU5H
X0lzTnVsbABzdWJjb250cmFjdGluZHVzdHJ5U1RBR0lORwBzdWJjb250cmFjdGluZHVzdHJ5U1RB
R0lOR19Jc051bGwAc3ViY29udHJhY3RjdXJyZW50YW1vdW50U1RBR0lORwBzdWJjb250cmFjdGN1
cnJlbnRhbW91bnRTVEFHSU5HX0lzTnVsbABzdWJjb250cmFjdG9yaWdpbmFsYW1vdW50U1RBR0lO
RwBzdWJjb250cmFjdG9yaWdpbmFsYW1vdW50U1RBR0lOR19Jc051bGwAc3VidmVuZG9ycGFpZHRv
ZGF0ZVNUQUdJTkcAc3VidmVuZG9ycGFpZHRvZGF0ZVNUQUdJTkdfSXNOdWxsAHN1YmNvbnRyYWN0
c3RhcnRkYXRlU1RBR0lORwBzdWJjb250cmFjdHN0YXJ0ZGF0ZVNUQUdJTkdfSXNOdWxsAHN1YmNv
bnRyYWN0ZW5kZGF0ZVNUQUdJTkcAc3ViY29udHJhY3RlbmRkYXRlU1RBR0lOR19Jc051bGwAc3Vi
Y29udHJhY3RyZWZlcmVuY2VpZFNUQUdJTkcAc3ViY29udHJhY3RyZWZlcmVuY2VpZFNUQUdJTkdf
SXNOdWxsAGRvY3VtZW50Y29kZUZJTkFMAGRvY3VtZW50Y29kZUZJTkFMX0lzTnVsbABwcmltZWNv
bnRyYWN0aWRGSU5BTABwcmltZWNvbnRyYWN0aWRGSU5BTF9Jc051bGwAY29udHJhY3RpbmNsdWRl
c3N1YnZlbmRvcnNGSU5BTABjb250cmFjdGluY2x1ZGVzc3VidmVuZG9yc0ZJTkFMX0lzTnVsbAB2
ZW5kb3JyZWNvcmR0eXBlRklOQUwAdmVuZG9ycmVjb3JkdHlwZUZJTkFMX0lzTnVsbABwcmltZXZl
bmRvckZJTkFMAHByaW1ldmVuZG9yRklOQUxfSXNOdWxsAHByaW1ldmVuZG9ybXdiZWNhdGVnb3J5
RklOQUwAcHJpbWV2ZW5kb3Jtd2JlY2F0ZWdvcnlGSU5BTF9Jc051bGwAcHJpbWVjb250cmFjdHB1
cnBvc2VGSU5BTABwcmltZWNvbnRyYWN0cHVycG9zZUZJTkFMX0lzTnVsbABwcmltZWNvbnRyYWN0
Y3VycmVudGFtb3VudEZJTkFMAHByaW1lY29udHJhY3RjdXJyZW50YW1vdW50RklOQUxfSXNOdWxs
AHByaW1lY29udHJhY3RvcmlnaW5hbGFtb3VudEZJTkFMAHByaW1lY29udHJhY3RvcmlnaW5hbGFt
b3VudEZJTkFMX0lzTnVsbABwcmltZXZlbmRvcnNwZW50dG9kYXRlRklOQUwAcHJpbWV2ZW5kb3Jz
cGVudHRvZGF0ZUZJTkFMX0lzTnVsbABwcmltZWNvbnRyYWN0c3RhcnRkYXRlRklOQUwAcHJpbWVj
b250cmFjdHN0YXJ0ZGF0ZUZJTkFMX0lzTnVsbABwcmltZWNvbnRyYWN0ZW5kZGF0ZUZJTkFMAHBy
aW1lY29udHJhY3RlbmRkYXRlRklOQUxfSXNOdWxsAHByaW1lY29udHJhY3RyZWdpc3RyYXRpb25k
YXRlRklOQUwAcHJpbWVjb250cmFjdHJlZ2lzdHJhdGlvbmRhdGVGSU5BTF9Jc051bGwAcHJpbWVj
b250cmFjdGluZ2FnZW5jeUZJTkFMAHByaW1lY29udHJhY3RpbmdhZ2VuY3lGSU5BTF9Jc051bGwA
cHJpbWVjb250cmFjdHZlcnNpb25GSU5BTABwcmltZWNvbnRyYWN0dmVyc2lvbkZJTkFMX0lzTnVs
bABwYXJlbnRjb250cmFjdGlkRklOQUwAcGFyZW50Y29udHJhY3RpZEZJTkFMX0lzTnVsbABwcmlt
ZWNvbnRyYWN0dHlwZUZJTkFMAHByaW1lY29udHJhY3R0eXBlRklOQUxfSXNOdWxsAHByaW1lY29u
dHJhY3Rhd2FyZG1ldGhvZEZJTkFMAHByaW1lY29udHJhY3Rhd2FyZG1ldGhvZEZJTkFMX0lzTnVs
bABwcmltZWNvbnRyYWN0ZXhwZW5zZWNhdGVnb3J5RklOQUwAcHJpbWVjb250cmFjdGV4cGVuc2Vj
YXRlZ29yeUZJTkFMX0lzTnVsbABwcmltZWNvbnRyYWN0aW5kdXN0cnlGSU5BTABwcmltZWNvbnRy
YWN0aW5kdXN0cnlGSU5BTF9Jc051bGwAcHJpbWVjb250cmFjdHBpbkZJTkFMAHByaW1lY29udHJh
Y3RwaW5GSU5BTF9Jc051bGwAcHJpbWVjb250cmFjdGFwdHBpbkZJTkFMAHByaW1lY29udHJhY3Rh
cHRwaW5GSU5BTF9Jc051bGwAc3VidmVuZG9yRklOQUwAc3VidmVuZG9yRklOQUxfSXNOdWxsAHN1
YnZlbmRvcm13YmVjYXRlZ29yeUZJTkFMAHN1YnZlbmRvcm13YmVjYXRlZ29yeUZJTkFMX0lzTnVs
bABzdWJjb250cmFjdHB1cnBvc2VGSU5BTABzdWJjb250cmFjdHB1cnBvc2VGSU5BTF9Jc051bGwA
c3VidmVuZG9yc3RhdHVzaW5waXBGSU5BTABzdWJ2ZW5kb3JzdGF0dXNpbnBpcEZJTkFMX0lzTnVs
bABzdWJjb250cmFjdGluZHVzdHJ5RklOQUwAc3ViY29udHJhY3RpbmR1c3RyeUZJTkFMX0lzTnVs
bABzdWJjb250cmFjdGN1cnJlbnRhbW91bnRGSU5BTABzdWJjb250cmFjdGN1cnJlbnRhbW91bnRG
SU5BTF9Jc051bGwAc3ViY29udHJhY3RvcmlnaW5hbGFtb3VudEZJTkFMAHN1YmNvbnRyYWN0b3Jp
Z2luYWxhbW91bnRGSU5BTF9Jc051bGwAc3VidmVuZG9ycGFpZHRvZGF0ZUZJTkFMAHN1YnZlbmRv
cnBhaWR0b2RhdGVGSU5BTF9Jc051bGwAc3ViY29udHJhY3RzdGFydGRhdGVGSU5BTABzdWJjb250
cmFjdHN0YXJ0ZGF0ZUZJTkFMX0lzTnVsbABzdWJjb250cmFjdGVuZGRhdGVGSU5BTABzdWJjb250
cmFjdGVuZGRhdGVGSU5BTF9Jc051bGwAc3ViY29udHJhY3RyZWZlcmVuY2VpZEZJTkFMAHN1YmNv
bnRyYWN0cmVmZXJlbmNlaWRGSU5BTF9Jc051bGwAU3RhZ2luZ0lERklOQUwAU3RhZ2luZ0lERklO
QUxfSXNOdWxsAElEU1RBR0lORwBJRFNUQUdJTkdfSXNOdWxsAExhc3RVcGRhdGVkVGltZXN0YW1w
RGVyaXZlZABMYXN0VXBkYXRlZFRpbWVzdGFtcERlcml2ZWRfSXNOdWxsAFBhcmVudENvbXBvbmVu
dABTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdl
cgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVm
YXVsdABEZWZhdWx0AElucHV0SUQASW5wdXROYW1lAEJ1ZmZlcgBPdXRwdXRNYXAAUm93AEJ1ZmZl
ckNvbHVtbkluZGV4ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ18xODVkM2ExNDI3N2Q0NDg2OTA4ZmFi
ZmJlZjg0ZmM1ZQBTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhl
cwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBvcF9FcXVhbGl0eQBFeGNl
cHRpb24AR2V0U3RyaW5nAHNldF9JdGVtAElzTnVsbABTZXROdWxsAEludmFsaWRPcGVyYXRpb25F
eGNlcHRpb24AR2V0SW50MzIAR2V0RGF0ZVRpbWUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQAuY2N0b3IAU0NfMTg1ZDNhMTQyNzdkNDQ4NjkwOGZhYmZiZWY4NGZjNWUuUHJvcGVy
dGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAAAPSQBuAHAAdQB0ACAAMAAAAy0AAQtFAFIAUgBP
AFIAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAg
AHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUA
IAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAABxUwBDAF8AMQA4
ADUAZAAzAGEAMQA0ADIANwA3AGQANAA0ADgANgA5ADAAOABmAGEAYgBmAGIAZQBmADgANABmAGMA
NQBlAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAADrQ5kMQLGxSJbI
Zx06e6fdAAiJhF3NgIDMkQi3elxWGTTgiQMGEhQDBhIYAyAAAQkgBAEIDhIVEhkFIAEBEhAJIAMB
EhUdCBIZAyAADgQgAQEOAyAAAgQgAQECAyAACAQgABEdAygADgMoAAIDKAAIBCgAER0DBhIFBSAB
ARIFAwYSIQMGEiUEAAASIQQAABIlBQABARIlBAgAEiEECAASJQMGEiAEAAASIAQIABIgBCABAQgG
IAICDhFdBSABHQgIBAEAAAAFAAICDg4DBhIVAwYdCAQgAQ4IBSACAQgcBCABAggEIAEICAUgAREd
CAYAARJxEXUEIAASeQYgAgEOEnkEBwESIQYgAQERgIEIAQACAAAAAAADAAABRwEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29y
ayA0KAEAI1NDXzE4NWQzYTE0Mjc3ZDQ0ODY5MDhmYWJmYmVmODRmYzVlAAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMjAAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEA
AAAIhQAAAAAAAAAAAAAehQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIUAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAA
AAAAAAAAAAAAAAEAAAAAAEgAAABYoAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJ
AE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAMxwKx0AAAEAzHArHT8AAAAAAAAABAAAAAIA
AAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBh
AG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYA
bwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0
AGkAbwBuAAAAAABTAEMAXwAxADgANQBkADMAYQAxADQAMgA3ADcAZAA0ADQAOAA2ADkAMAA4AGYA
YQBiAGYAYgBlAGYAOAA0AGYAYwA1AGUAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAA
ADEALgAwAC4ANwA0ADYANwAuADIAOAA4ADcANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4A
YQBtAGUAAABTAEMAXwAxADgANQBkADMAYQAxADQAMgA3ADcAZAA0ADQAOAA2ADkAMAA4AGYAYQBi
AGYAYgBlAGYAOAA0AGYAYwA1AGUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIA
aQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAAHgAKAABAE8AcgBp
AGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAxADgANQBkADMAYQAxADQAMgA3ADcA
ZAA0ADQAOAA2ADkAMAA4AGYAYQBiAGYAYgBlAGYAOAA0AGYAYwA1AGUALgBkAGwAbAAAAGgAJAAB
AFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMQA4ADUAZAAzAGEAMQA0ADIANwA3AGQA
NAA0ADgANgA5ADAAOABmAGEAYgBmAGIAZQBmADgANABmAGMANQBlAAAARAAPAAEAUAByAG8AZAB1
AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADQANgA3AC4AMgA4ADgANwA2AAAAAABIAA8A
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADQANgA3AC4AMgA4
ADgANwA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAADAAAADA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_185d3a14277d4486908fabfbef84fc5e</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">e3d51097af8bd0b9d606d8b7d28450ac</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">e4b54ec24242d63625d530991a6b8808f7c405bb</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[document_code_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_code_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[contract_includes_sub_vendors_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_includes_sub_vendors_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_id_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_id_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[vendor_record_type_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_record_type_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_vendor_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_vendor_mwbe_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_mwbe_category_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_current_amount_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_current_amount_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_current_amount_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_purpose_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_purpose_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_original_amount_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_original_amount_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_original_amount_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_vendor_spent_to_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_spent_to_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_spent_to_date_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_start_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_start_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_start_date_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_end_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_end_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_end_date_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_registration_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_registration_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_registration_date_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contracting_agency_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contracting_agency_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_version_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_version_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_version_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[parent_contract_id_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="parent_contract_id_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_type_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_type_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_award_method_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_award_method_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_expense_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="265"
                      cachedName="prime_contract_expense_category_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_industry_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_industry_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_pin_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_pin_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_apt_pin_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_apt_pin_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_vendor_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_vendor_mwbe_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_mwbe_category_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_purpose_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="476"
                      cachedName="sub_contract_purpose_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_vendor_status_in_pip_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_status_in_pip_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_industry_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_industry_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_current_amount_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_current_amount_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_current_amount_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_original_amount_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_original_amount_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_original_amount_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_vendor_paid_to_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_paid_to_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_paid_to_date_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_start_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_start_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_start_date_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_end_date_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_end_date_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_end_date_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_reference_id_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id_STAGING"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_STAGING]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[document_code_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_code_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_id_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[contract_includes_sub_vendors_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_includes_sub_vendors_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[vendor_record_type_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_record_type_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_vendor_mwbe_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_mwbe_category_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_purpose_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_purpose_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_current_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="prime_contract_current_amount_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_current_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_original_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="prime_contract_original_amount_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_original_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_vendor_spent_to_date_FINAL]"
                      cachedDataType="cy"
                      cachedName="prime_vendor_spent_to_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_spent_to_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_start_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_start_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_start_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_end_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_end_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_end_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_registration_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_registration_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_registration_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contracting_agency_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contracting_agency_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_version_FINAL]"
                      cachedDataType="i4"
                      cachedName="prime_contract_version_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_version_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[parent_contract_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="parent_contract_id_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_type_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_type_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_award_method_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_award_method_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_expense_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="265"
                      cachedName="prime_contract_expense_category_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_industry_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_industry_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_pin_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_pin_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[prime_contract_apt_pin_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_apt_pin_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_vendor_mwbe_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_mwbe_category_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_purpose_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="476"
                      cachedName="sub_contract_purpose_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_vendor_status_in_pip_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_status_in_pip_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_industry_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_industry_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_current_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="sub_contract_current_amount_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_current_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_original_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="sub_contract_original_amount_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_original_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_vendor_paid_to_date_FINAL]"
                      cachedDataType="cy"
                      cachedName="sub_vendor_paid_to_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_paid_to_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_start_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_start_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_start_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_end_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_end_date_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_end_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_reference_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[ID_STAGING]"
                      cachedDataType="i4"
                      cachedName="ID_STAGING"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Staging - Contracts_Staging"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Contracts_Staging]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[ID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[ID]"
                      name="ID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[LastUpdatedTimestamp]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[LastUpdatedTimestamp]"
                      name="LastUpdatedTimestamp"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[document_code]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[document_code]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[document_code]"
                      name="document_code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_id]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_id]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_id]"
                      name="prime_contract_id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[contract_includes_sub_vendors]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[contract_includes_sub_vendors]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[contract_includes_sub_vendors]"
                      name="contract_includes_sub_vendors"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[vendor_record_type]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[vendor_record_type]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[vendor_record_type]"
                      name="vendor_record_type"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_vendor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_vendor]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_vendor]"
                      name="prime_vendor"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_vendor_mwbe_category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_vendor_mwbe_category]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_vendor_mwbe_category]"
                      name="prime_vendor_mwbe_category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_purpose]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_purpose]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_purpose]"
                      name="prime_contract_purpose"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_current_amount]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_current_amount]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_current_amount]"
                      name="prime_contract_current_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_original_amount]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_original_amount]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_original_amount]"
                      name="prime_contract_original_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_vendor_spent_to_date]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_vendor_spent_to_date]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_vendor_spent_to_date]"
                      name="prime_vendor_spent_to_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_start_date]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_start_date]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_start_date]"
                      name="prime_contract_start_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_end_date]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_end_date]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_end_date]"
                      name="prime_contract_end_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_registration_date]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_registration_date]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_registration_date]"
                      name="prime_contract_registration_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contracting_agency]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contracting_agency]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contracting_agency]"
                      name="prime_contracting_agency"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_version]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_version]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_version]"
                      name="prime_contract_version"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[parent_contract_id]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[parent_contract_id]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[parent_contract_id]"
                      name="parent_contract_id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_type]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_type]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_type]"
                      name="prime_contract_type"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_award_method]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_award_method]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_award_method]"
                      name="prime_contract_award_method"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_expense_category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_expense_category]"
                      length="265"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_expense_category]"
                      name="prime_contract_expense_category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_industry]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_industry]"
                      name="prime_contract_industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_pin]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_pin]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_pin]"
                      name="prime_contract_pin"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_apt_pin]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_apt_pin]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[prime_contract_apt_pin]"
                      name="prime_contract_apt_pin"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor]"
                      name="sub_vendor"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor_mwbe_category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_mwbe_category]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor_mwbe_category]"
                      name="sub_vendor_mwbe_category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_purpose]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_purpose]"
                      length="476"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_purpose]"
                      name="sub_contract_purpose"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor_status_in_pip]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_status_in_pip]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor_status_in_pip]"
                      name="sub_vendor_status_in_pip"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_industry]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_industry]"
                      name="sub_contract_industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_current_amount]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_current_amount]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_current_amount]"
                      name="sub_contract_current_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_original_amount]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_original_amount]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_original_amount]"
                      name="sub_contract_original_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor_paid_to_date]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_paid_to_date]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_vendor_paid_to_date]"
                      name="sub_vendor_paid_to_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_start_date]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_start_date]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_start_date]"
                      name="sub_contract_start_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_end_date]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_end_date]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_end_date]"
                      name="sub_contract_end_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_reference_id]"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]"
                      name="sub_contract_reference_id"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      name="LastUpdatedTimestamp" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[document_code]"
                      dataType="wstr"
                      length="255"
                      name="document_code" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_id]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[contract_includes_sub_vendors]"
                      dataType="wstr"
                      length="255"
                      name="contract_includes_sub_vendors" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[vendor_record_type]"
                      dataType="wstr"
                      length="255"
                      name="vendor_record_type" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_vendor]"
                      dataType="wstr"
                      length="255"
                      name="prime_vendor" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      name="prime_vendor_mwbe_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_purpose]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_purpose" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_current_amount]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_current_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_original_amount]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_original_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_vendor_spent_to_date]"
                      dataType="wstr"
                      length="255"
                      name="prime_vendor_spent_to_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_start_date]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_start_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_end_date]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_end_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_registration_date]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_registration_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contracting_agency]"
                      dataType="wstr"
                      length="255"
                      name="prime_contracting_agency" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_version]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_version" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[parent_contract_id]"
                      dataType="wstr"
                      length="255"
                      name="parent_contract_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_type]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_type" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_award_method]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_award_method" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_expense_category]"
                      dataType="wstr"
                      length="265"
                      name="prime_contract_expense_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_industry]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_industry" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_pin]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_pin" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[prime_contract_apt_pin]"
                      dataType="wstr"
                      length="255"
                      name="prime_contract_apt_pin" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor_mwbe_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_purpose]"
                      dataType="wstr"
                      length="476"
                      name="sub_contract_purpose" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_status_in_pip]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor_status_in_pip" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_industry]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_industry" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_current_amount]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_current_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_original_amount]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_original_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_paid_to_date]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor_paid_to_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_start_date]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_start_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_end_date]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_end_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_reference_id" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[LastUpdatedTimestamp]"
                      name="LastUpdatedTimestamp" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[document_code]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[document_code]"
                      name="document_code" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_id]"
                      name="prime_contract_id" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[contract_includes_sub_vendors]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[contract_includes_sub_vendors]"
                      name="contract_includes_sub_vendors" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[vendor_record_type]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[vendor_record_type]"
                      name="vendor_record_type" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_vendor]"
                      name="prime_vendor" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_vendor_mwbe_category]"
                      name="prime_vendor_mwbe_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_purpose]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_purpose]"
                      name="prime_contract_purpose" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_current_amount]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_current_amount]"
                      name="prime_contract_current_amount" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_original_amount]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_original_amount]"
                      name="prime_contract_original_amount" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_vendor_spent_to_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_vendor_spent_to_date]"
                      name="prime_vendor_spent_to_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_start_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_start_date]"
                      name="prime_contract_start_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_end_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_end_date]"
                      name="prime_contract_end_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_registration_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_registration_date]"
                      name="prime_contract_registration_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contracting_agency]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contracting_agency]"
                      name="prime_contracting_agency" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_version]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_version]"
                      name="prime_contract_version" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[parent_contract_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[parent_contract_id]"
                      name="parent_contract_id" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_type]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_type]"
                      name="prime_contract_type" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_award_method]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_award_method]"
                      name="prime_contract_award_method" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_expense_category]"
                      dataType="wstr"
                      length="265"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_expense_category]"
                      name="prime_contract_expense_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_industry]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_industry]"
                      name="prime_contract_industry" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_pin]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_pin]"
                      name="prime_contract_pin" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_apt_pin]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[prime_contract_apt_pin]"
                      name="prime_contract_apt_pin" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_vendor]"
                      name="sub_vendor" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_vendor_mwbe_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_vendor_mwbe_category]"
                      name="sub_vendor_mwbe_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_purpose]"
                      dataType="wstr"
                      length="476"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_purpose]"
                      name="sub_contract_purpose" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_vendor_status_in_pip]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_vendor_status_in_pip]"
                      name="sub_vendor_status_in_pip" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_industry]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_industry]"
                      name="sub_contract_industry" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_current_amount]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_current_amount]"
                      name="sub_contract_current_amount" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_original_amount]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_original_amount]"
                      name="sub_contract_original_amount" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_vendor_paid_to_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_vendor_paid_to_date]"
                      name="sub_vendor_paid_to_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_start_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_start_date]"
                      name="sub_contract_start_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_end_date]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_end_date]"
                      name="sub_contract_end_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[sub_contract_reference_id]"
                      name="sub_contract_reference_id" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts)"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update changed records (Final - Contracts)"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE
    dbo.Contracts
SET
    dbo.Contracts.[LastUpdatedTimestamp] = ?,
    dbo.Contracts.[document_code] = ?,
    dbo.Contracts.[prime_contract_id] = ?,
    dbo.Contracts.[contract_includes_sub_vendors] = ?,
    dbo.Contracts.[vendor_record_type] = ?,
    dbo.Contracts.[prime_vendor] = ?,
    dbo.Contracts.[prime_vendor_mwbe_category] = ?,
    dbo.Contracts.[prime_contract_purpose] = ?,
    dbo.Contracts.[prime_contract_current_amount] = ?,
    dbo.Contracts.[prime_contract_original_amount] = ?,
    dbo.Contracts.[prime_vendor_spent_to_date] = ?,
    dbo.Contracts.[prime_contract_start_date] = ?,
    dbo.Contracts.[prime_contract_end_date] = ?,
    dbo.Contracts.[prime_contract_registration_date] = ?,
    dbo.Contracts.[prime_contracting_agency] = ?,
    dbo.Contracts.[prime_contract_version] = ?,
    dbo.Contracts.[parent_contract_id] = ?,
    dbo.Contracts.[prime_contract_type] = ?,
    dbo.Contracts.[prime_contract_award_method] = ?,
    dbo.Contracts.[prime_contract_expense_category] = ?,
    dbo.Contracts.[prime_contract_industry] = ?,
    dbo.Contracts.[prime_contract_pin] = ?,
    dbo.Contracts.[prime_contract_apt_pin] = ?,
    dbo.Contracts.[sub_vendor] = ?,
    dbo.Contracts.[sub_vendor_mwbe_category] = ?,
    dbo.Contracts.[sub_contract_purpose] = ?,
    dbo.Contracts.[sub_vendor_status_in_pip] = ?,
    dbo.Contracts.[sub_contract_industry] = ?,
    dbo.Contracts.[sub_contract_current_amount] = ?,
    dbo.Contracts.[sub_contract_original_amount] = ?,
    dbo.Contracts.[sub_vendor_paid_to_date] = ?,
    dbo.Contracts.[sub_contract_start_date] = ?,
    dbo.Contracts.[sub_contract_end_date] = ?,
    dbo.Contracts.[sub_contract_reference_id] = ?
WHERE
    dbo.Contracts.[StagingID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[document_code_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_code_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_code_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_id_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_id_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_id_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[contract_includes_sub_vendors_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_includes_sub_vendors_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_includes_sub_vendors_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[vendor_record_type_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_record_type_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[vendor_record_type_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_vendor_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_vendor_mwbe_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_vendor_mwbe_category_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_vendor_mwbe_category_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_purpose_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_purpose_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_purpose_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contracting_agency_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contracting_agency_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contracting_agency_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[parent_contract_id_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="parent_contract_id_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[parent_contract_id_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_type_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_type_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_type_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_award_method_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_award_method_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_award_method_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_expense_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="265"
                      cachedName="prime_contract_expense_category_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_expense_category_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_industry_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_industry_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_20]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_industry_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_pin_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_pin_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_21]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_pin_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_apt_pin_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="prime_contract_apt_pin_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_22]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[prime_contract_apt_pin_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[sub_vendor_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_23]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[sub_vendor_mwbe_category_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_mwbe_category_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_24]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_mwbe_category_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[sub_contract_purpose_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="476"
                      cachedName="sub_contract_purpose_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_25]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_purpose_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[sub_vendor_status_in_pip_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_status_in_pip_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_26]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_status_in_pip_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[sub_contract_industry_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_industry_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_27]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_industry_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[sub_contract_reference_id_STAGING]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id_STAGING"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_33]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_STAGING]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_current_amount_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="prime_contract_current_amount_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_current_amount_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_original_amount_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="prime_contract_original_amount_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_original_amount_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_vendor_spent_to_date_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="prime_vendor_spent_to_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_vendor_spent_to_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_start_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_start_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_start_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_end_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_end_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_end_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_registration_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="prime_contract_registration_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_registration_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[prime_contract_version_STAGING_DataTypeConverted]"
                      cachedDataType="i4"
                      cachedName="prime_contract_version_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[prime_contract_version_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[sub_contract_current_amount_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="sub_contract_current_amount_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_28]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_current_amount_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[sub_contract_original_amount_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="sub_contract_original_amount_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_29]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_original_amount_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[sub_vendor_paid_to_date_STAGING_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="sub_vendor_paid_to_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_30]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_vendor_paid_to_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[sub_contract_start_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_start_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_31]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_start_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[sub_contract_end_date_STAGING_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="sub_contract_end_date_STAGING_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_32]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[sub_contract_end_date_STAGING_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].Columns[ID_STAGING]"
                      cachedDataType="i4"
                      cachedName="ID_STAGING"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_34]"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID_STAGING]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="dbTimeStamp"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="wstr"
                      length="255"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="wstr"
                      length="255"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="wstr"
                      length="255"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="wstr"
                      length="255"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="wstr"
                      length="255"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="wstr"
                      length="255"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      dataType="wstr"
                      length="255"
                      name="Param_7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      dataType="cy"
                      name="Param_8">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      dataType="cy"
                      name="Param_9">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                      dataType="cy"
                      name="Param_10">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                      dataType="dbDate"
                      name="Param_11">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                      dataType="dbDate"
                      name="Param_12">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                      dataType="dbDate"
                      name="Param_13">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                      dataType="wstr"
                      length="255"
                      name="Param_14">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                      dataType="i4"
                      name="Param_15">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                      dataType="wstr"
                      length="255"
                      name="Param_16">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                      dataType="wstr"
                      length="255"
                      name="Param_17">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                      dataType="wstr"
                      length="255"
                      name="Param_18">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                      dataType="wstr"
                      length="265"
                      name="Param_19">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_20]"
                      dataType="wstr"
                      length="255"
                      name="Param_20">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_21]"
                      dataType="wstr"
                      length="255"
                      name="Param_21">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_22]"
                      dataType="wstr"
                      length="255"
                      name="Param_22">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_23]"
                      dataType="wstr"
                      length="255"
                      name="Param_23">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_24]"
                      dataType="wstr"
                      length="255"
                      name="Param_24">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_25]"
                      dataType="wstr"
                      length="476"
                      name="Param_25">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_26]"
                      dataType="wstr"
                      length="255"
                      name="Param_26">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_27]"
                      dataType="wstr"
                      length="255"
                      name="Param_27">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_28]"
                      dataType="cy"
                      name="Param_28">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_29]"
                      dataType="cy"
                      name="Param_29">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_30]"
                      dataType="cy"
                      name="Param_30">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_31]"
                      dataType="dbDate"
                      name="Param_31">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_32]"
                      dataType="dbDate"
                      name="Param_32">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_33]"
                      dataType="wstr"
                      length="255"
                      name="Param_33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input].ExternalColumns[Param_34]"
                      dataType="i4"
                      name="Param_34">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Data Conversion Output]"
              endId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
              name="Data Conversion Output"
              startId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Delete(StagingID_FINAL not Match any in ID_STAGING)]"
              endId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts).Inputs[OLE DB Command Input]"
              name="Delete(StagingID_FINAL not Match any in ID_STAGING)"
              startId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Delete(StagingID_FINAL not Match any in ID_STAGING)]" />
            <path
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Derived Column Output]"
              endId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Outputs[Derived Column Output]" />
            <path
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Insert(ID_STAGING not Match any in StagingID_FINAL)]"
              endId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000.Inputs[OLE DB Destination Input]"
              name="Insert(ID_STAGING not Match any in StagingID_FINAL)"
              startId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Insert(ID_STAGING not Match any in StagingID_FINAL)]" />
            <path
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Merge Join Output]"
              endId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table.Inputs[Derived Column Input]"
              name="Merge Join Output"
              startId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output]" />
            <path
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output]"
              endId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output1]"
              endId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Output 0]"
              endId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input]"
              name="Output 0"
              startId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Outputs[Output 0]" />
            <path
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Sort Output]"
              endId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC.Outputs[Sort Output]" />
            <path
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Sort Output1]"
              endId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC.Outputs[Sort Output]" />
            <path
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Update(ID Match)]"
              endId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]"
              name="Update(ID Match)"
              startId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Update(ID Match)]" />
            <path
              refId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Update-able Records]"
              endId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts).Inputs[OLE DB Command Input]"
              name="Update-able Records"
              startId="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Update-able Records]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{AC6EF624-9829-4FEE-B825-7B6CB766DEBB}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Update(ID Match)]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Update(ID Match)"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(ID) &amp;&amp; !ISNULL(StagingID_FINAL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Insert(ID_STAGING not Match any in StagingID_FINAL)]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Insert(ID_STAGING not Match any in StagingID_FINAL)"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(ID) &amp;&amp; ISNULL(StagingID_FINAL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Delete(StagingID_FINAL not Match any in ID_STAGING)]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Delete(StagingID_FINAL not Match any in ID_STAGING)"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(ID) &amp;&amp; !ISNULL(StagingID_FINAL)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[check_amount]"
                      cachedDataType="cy"
                      cachedName="check_amount"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[fiscal_year]"
                      cachedDataType="i4"
                      cachedName="fiscal_year"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input].Columns[issue_date]"
                      cachedDataType="dbDate"
                      cachedName="issue_date"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[check_amount_DataTypeConverted]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[check_amount_DataTypeConverted]"
                      name="check_amount_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[fiscal_year_DataTypeConverted]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[fiscal_year_DataTypeConverted]"
                      name="fiscal_year_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[issue_date_DataTypeConverted]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[issue_date_DataTypeConverted]"
                      name="issue_date_DataTypeConverted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending)"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Delete records (Final - Spending)"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">DELETE FROM dbo.Spending
WHERE dbo.Spending.[StagingID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_fb028c57ea614638b8dd265863f2a053.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ac1c4fc9-54d7-45d8-a0f8-0669ddf0cf4a}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_fb028c57ea614638b8dd265863f2a053</RootNamespace>
    <AssemblyName>SC_fb028c57ea614638b8dd265863f2a053</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_fb028c57ea614638b8dd265863f2a053" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Windows.Forms;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        string contractid = Row.contractid;
        try
        {
            if (contractid != null && contractid.Length >= 9)
            {
                if (contractid.Substring(0, 3) == "CT1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 3);
                    Row.DeptSTAGINGDerived = contractid.Substring(3, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(6);
                }
                else if (contractid.Substring(0, 4) == "CTA1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 3) == "DO1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 3);
                    Row.DeptSTAGINGDerived = contractid.Substring(3, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(6);
                }
                else if (contractid.Substring(0, 4) == "MMA1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(8);
                }
                else if (contractid.Substring(0, 4) == "RCT1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(3, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 4) == "PRC2")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 3) == "POD")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 3);
                    Row.DeptSTAGINGDerived = contractid.Substring(3, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(6);
                }
                else if (contractid.Substring(0, 3) == "POC")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 3);
                    Row.DeptSTAGINGDerived = contractid.Substring(3, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(6);
                }
                else if (contractid.Substring(0, 4) == "PON1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 4) == "PRM1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 4) == "PCC1")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 4) == "CTA2")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 4);
                    Row.DeptSTAGINGDerived = contractid.Substring(4, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(7);
                }
                else if (contractid.Substring(0, 5) == "RTGPF")
                {
                    Row.CodeSTAGINGDerived = contractid.Substring(0, 5);
                    Row.DeptSTAGINGDerived = contractid.Substring(5, 3);
                    Row.RegistrationSTAGINGDerived = contractid.Substring(8);
                }
                else
                {
                    Row.CodeSTAGINGDerived = "N/A";
                    Row.DeptSTAGINGDerived = "N/A";
                    Row.RegistrationSTAGINGDerived = "N/A";
                }

            }
            else if (contractid != null && contractid.Length < 9)
            {
                Row.CodeSTAGINGDerived = "N/A";
                Row.DeptSTAGINGDerived = "N/A";
                Row.RegistrationSTAGINGDerived = "N/A";
            }
            else if (contractid == null)
            {
                Row.CodeSTAGINGDerived = null;
                Row.DeptSTAGINGDerived = null;
                Row.RegistrationSTAGINGDerived = null;
            }
            else
            {
                Row.CodeSTAGINGDerived = "N/A";
                Row.DeptSTAGINGDerived = "N/A";
                Row.RegistrationSTAGINGDerived = "N/A";
            }
        }
        catch (Exception ex)
        {
            Row.CodeSTAGINGDerived = "ERROR: an exception has occured";
            Row.DeptSTAGINGDerived = "ERROR: an exception has occured";
            Row.RegistrationSTAGINGDerived = "ERROR: an exception has occured";
            //MessageBox.Show(ex.ToString());
        }

        string capital_project = Row.capitalproject;
        try
        {
            if (capital_project != null && capital_project.Length >= 13)
            {
                Row.ProjectAgencySTAGINGDerived = capital_project.Substring(0, 3);
                Row.CapProjSTAGINGDerived = capital_project.Substring(3, 9).TrimEnd();
                Row.OccSTAGINGDerived = capital_project.Substring(Math.Max(0, capital_project.Length - 3));
            }
            else if (capital_project != null && capital_project.Length < 13)
            {
                Row.ProjectAgencySTAGINGDerived = "N/A";
                Row.CapProjSTAGINGDerived = "N/A";
                Row.OccSTAGINGDerived = "N/A";
            }
            else if (capital_project == null)
            {
                Row.ProjectAgencySTAGINGDerived = null;
                Row.CapProjSTAGINGDerived = null;
                Row.OccSTAGINGDerived = null;
            }
            else
            {
                Row.ProjectAgencySTAGINGDerived = "N/A";
                Row.CapProjSTAGINGDerived = "N/A";
                Row.OccSTAGINGDerived = "N/A";
            }
        }
        catch (Exception ex)
        {
            Row.ProjectAgencySTAGINGDerived = "ERROR: an exception has occured";
            Row.CapProjSTAGINGDerived = "ERROR: an exception has occured";
            Row.OccSTAGINGDerived = "ERROR: an exception has occured";
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String agency
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool agency_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String associatedprimevendor
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool associatedprimevendor_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String capitalproject
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool capitalproject_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String contractid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool contractid_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String contractpurpose
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool contractpurpose_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Decimal checkamount
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[6]);
        }
    }
    public bool checkamount_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String department
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool department_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String documentid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool documentid_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String expensecategory
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool expensecategory_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public Int32 fiscalyear
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[10]);
        }
    }
    public bool fiscalyear_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String industry
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool industry_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public DateTime issuedate
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[12]);
        }
    }
    public bool issuedate_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String mwbecategory
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool mwbecategory_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String payeename
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool payeename_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public String spendingcategory
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
    }
    public bool spendingcategory_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public String subcontractreferenceid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[16]);
        }
    }
    public bool subcontractreferenceid_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public String subvendor
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[17]);
        }
    }
    public bool subvendor_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public Int32 StagingIDFINAL
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[18]);
        }
    }
    public bool StagingIDFINAL_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public String agencyFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[19]);
        }
    }
    public bool agencyFINAL_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public String associatedprimevendorFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[20]);
        }
    }
    public bool associatedprimevendorFINAL_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public String capitalprojectFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[21]);
        }
    }
    public bool capitalprojectFINAL_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public String contractidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[22]);
        }
    }
    public bool contractidFINAL_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public String contractpurposeFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[23]);
        }
    }
    public bool contractpurposeFINAL_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    public Decimal checkamountFINAL
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[24]);
        }
    }
    public bool checkamountFINAL_IsNull
    {
        get
        {
            return IsNull(24);
        }
    }

    public String departmentFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[25]);
        }
    }
    public bool departmentFINAL_IsNull
    {
        get
        {
            return IsNull(25);
        }
    }

    public String documentidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[26]);
        }
    }
    public bool documentidFINAL_IsNull
    {
        get
        {
            return IsNull(26);
        }
    }

    public String expensecategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[27]);
        }
    }
    public bool expensecategoryFINAL_IsNull
    {
        get
        {
            return IsNull(27);
        }
    }

    public Int32 fiscalyearFINAL
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[28]);
        }
    }
    public bool fiscalyearFINAL_IsNull
    {
        get
        {
            return IsNull(28);
        }
    }

    public String industryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[29]);
        }
    }
    public bool industryFINAL_IsNull
    {
        get
        {
            return IsNull(29);
        }
    }

    public DateTime issuedateFINAL
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[30]);
        }
    }
    public bool issuedateFINAL_IsNull
    {
        get
        {
            return IsNull(30);
        }
    }

    public String mwbecategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[31]);
        }
    }
    public bool mwbecategoryFINAL_IsNull
    {
        get
        {
            return IsNull(31);
        }
    }

    public String payeenameFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[32]);
        }
    }
    public bool payeenameFINAL_IsNull
    {
        get
        {
            return IsNull(32);
        }
    }

    public String spendingcategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[33]);
        }
    }
    public bool spendingcategoryFINAL_IsNull
    {
        get
        {
            return IsNull(33);
        }
    }

    public String subcontractreferenceidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[34]);
        }
    }
    public bool subcontractreferenceidFINAL_IsNull
    {
        get
        {
            return IsNull(34);
        }
    }

    public String subvendorFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[35]);
        }
    }
    public bool subvendorFINAL_IsNull
    {
        get
        {
            return IsNull(35);
        }
    }

    public DateTime LastUpdatedTimestampDerived
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[36]);
        }
    }
    public bool LastUpdatedTimestampDerived_IsNull
    {
        get
        {
            return IsNull(36);
        }
    }

    public String RegistrationSTAGINGDerived
    {
        set
        {
            this[37] = value;
        }
    }
    public bool RegistrationSTAGINGDerived_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(37);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DeptSTAGINGDerived
    {
        set
        {
            this[38] = value;
        }
    }
    public bool DeptSTAGINGDerived_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(38);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CodeSTAGINGDerived
    {
        set
        {
            this[39] = value;
        }
    }
    public bool CodeSTAGINGDerived_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(39);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OccSTAGINGDerived
    {
        set
        {
            this[40] = value;
        }
    }
    public bool OccSTAGINGDerived_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(40);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CapProjSTAGINGDerived
    {
        set
        {
            this[41] = value;
        }
    }
    public bool CapProjSTAGINGDerived_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(41);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProjectAgencySTAGINGDerived
    {
        set
        {
            this[42] = value;
        }
    }
    public bool ProjectAgencySTAGINGDerived_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(42);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fb028c57ea614638b8dd265863f2a053.Properties.Settings.get_Default():SC_fb028c57ea614638b8dd265863f2a053.Properties.Sett" +
    "ings")]

namespace SC_fb028c57ea614638b8dd265863f2a053.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_fb028c57ea614638b8dd265863f2a053</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_fb028c57ea614638b8dd265863f2a053</msb:DisplayName>
		<msb:ProjectId>{23FD14D9-B3D3-4B01-A362-67C52E5017B3}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_fb028c57ea614638b8dd265863f2a053.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fb028c57ea614638b8dd265863f2a053")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fb028c57ea614638b8dd265863f2a053")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fb028c57ea614638b8dd265863f2a053.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fb028c57ea614638b8dd265863f2a053.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fb028c57ea614638b8dd265863f2a053.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fb028c57ea614638b8dd265863f2a053.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fb028c57ea614638b8dd265863f2a053.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_fb028c57ea614638b8dd265863f2a053.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABK+GV8AAAAAAAAAAOAAAiELAQsAADYAAAAIAAAAAAAAflUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADBVAABLAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhDUAAAAgAAAANgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAA4AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
VQAAAAAAAEgAAAACAAUA2CwAAFgoAAABAAAAAAAAACAsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnNiAAAGfQEAAAQCAnNjAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDb2AAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioAABswBQASBQAAAQAAEQNvEgAABgoGOYoDAAAGbxMAAAofCT99AwAABhYZ
bxQAAApyEQAAcCgVAAAKLC4DBhYZbxQAAApvWAAABgMGGRlvFAAACm9WAAAGAwYcbxYAAApvVAAA
BjimAwAABhYabxQAAApyGQAAcCgVAAAKLC4DBhYabxQAAApvWAAABgMGGhlvFAAACm9WAAAGAwYd
bxYAAApvVAAABjhkAwAABhYZbxQAAApyIwAAcCgVAAAKLC4DBhYZbxQAAApvWAAABgMGGRlvFAAA
Cm9WAAAGAwYcbxYAAApvVAAABjgiAwAABhYabxQAAApyKwAAcCgVAAAKLC4DBhYabxQAAApvWAAA
BgMGGhlvFAAACm9WAAAGAwYebxYAAApvVAAABjjgAgAABhYabxQAAApyNQAAcCgVAAAKLC4DBhYa
bxQAAApvWAAABgMGGRlvFAAACm9WAAAGAwYdbxYAAApvVAAABjieAgAABhYabxQAAApyPwAAcCgV
AAAKLC4DBhYabxQAAApvWAAABgMGGhlvFAAACm9WAAAGAwYdbxYAAApvVAAABjhcAgAABhYZbxQA
AApySQAAcCgVAAAKLC4DBhYZbxQAAApvWAAABgMGGRlvFAAACm9WAAAGAwYcbxYAAApvVAAABjga
AgAABhYZbxQAAApyUQAAcCgVAAAKLC4DBhYZbxQAAApvWAAABgMGGRlvFAAACm9WAAAGAwYcbxYA
AApvVAAABjjYAQAABhYabxQAAApyWQAAcCgVAAAKLC4DBhYabxQAAApvWAAABgMGGhlvFAAACm9W
AAAGAwYdbxYAAApvVAAABjiWAQAABhYabxQAAApyYwAAcCgVAAAKLC4DBhYabxQAAApvWAAABgMG
GhlvFAAACm9WAAAGAwYdbxYAAApvVAAABjhUAQAABhYabxQAAApybQAAcCgVAAAKLC4DBhYabxQA
AApvWAAABgMGGhlvFAAACm9WAAAGAwYdbxYAAApvVAAABjgSAQAABhYabxQAAApydwAAcCgVAAAK
LC4DBhYabxQAAApvWAAABgMGGhlvFAAACm9WAAAGAwYdbxYAAApvVAAABjjQAAAABhYbbxQAAApy
gQAAcCgVAAAKLC4DBhYbbxQAAApvWAAABgMGGxlvFAAACm9WAAAGAwYebxYAAApvVAAABjiOAAAA
A3KNAABwb1gAAAYDco0AAHBvVgAABgNyjQAAcG9UAAAGK2sGLC0GbxMAAAofCS8jA3KNAABwb1gA
AAYDco0AAHBvVgAABgNyjQAAcG9UAAAGKzsGLRcDFG9YAAAGAxRvVgAABgMUb1QAAAYrIQNyjQAA
cG9YAAAGA3KNAABwb1YAAAYDco0AAHBvVAAABt4kJgNylQAAcG9YAAAGA3KVAABwb1YAAAYDcpUA
AHBvVAAABt4AA28QAAAGCwcsTgdvEwAACh8NMkQDBxYZbxQAAApvXgAABgMHGR8JbxQAAAoWjRoA
AAFvFwAACm9cAAAGAwcWB28TAAAKGVkoGAAACm8WAAAKb1oAAAYrawcsLQdvEwAACh8NLyMDco0A
AHBvXgAABgNyjQAAcG9cAAAGA3KNAABwb1oAAAYrOwctFwMUb14AAAYDFG9cAAAGAxRvWgAABish
A3KNAABwb14AAAYDco0AAHBvXAAABgNyjQAAcG9aAAAG3iQmA3KVAABwb14AAAYDcpUAAHBvXAAA
BgNylQAAcG9aAAAG3gAqAABBNAAAAAAAAAcAAAD9AwAABAQAACQAAAAcAAABAAAAAC8EAAC+AAAA
7QQAACQAAAAcAAABHgIoAQAABioqAgMEBSgZAAAKKlICexoAAAoCexsAAAoWlG8cAAAKKiICFigd
AAAKKlICexoAAAoCexsAAAoXlG8eAAAKKiICFygdAAAKKlICexoAAAoCexsAAAoYlG8eAAAKKiIC
GCgdAAAKKlICexoAAAoCexsAAAoZlG8eAAAKKiICGSgdAAAKKlICexoAAAoCexsAAAoalG8eAAAK
KiICGigdAAAKKlICexoAAAoCexsAAAoblG8eAAAKKiICGygdAAAKKlICexoAAAoCexsAAAoclG8f
AAAKKiICHCgdAAAKKlICexoAAAoCexsAAAodlG8eAAAKKiICHSgdAAAKKlICexoAAAoCexsAAAoe
lG8eAAAKKiICHigdAAAKKlYCexoAAAoCexsAAAofCZRvHgAACiomAh8JKB0AAAoqVgJ7GgAACgJ7
GwAACh8KlG8cAAAKKiYCHwooHQAACipWAnsaAAAKAnsbAAAKHwuUbx4AAAoqJgIfCygdAAAKKlYC
exoAAAoCexsAAAofDJRvIAAACiomAh8MKB0AAAoqVgJ7GgAACgJ7GwAACh8NlG8eAAAKKiYCHw0o
HQAACipWAnsaAAAKAnsbAAAKHw6Ubx4AAAoqJgIfDigdAAAKKlYCexoAAAoCexsAAAofD5RvHgAA
CiomAh8PKB0AAAoqVgJ7GgAACgJ7GwAACh8QlG8eAAAKKiYCHxAoHQAACipWAnsaAAAKAnsbAAAK
HxGUbx4AAAoqJgIfESgdAAAKKlYCexoAAAoCexsAAAofEpRvHAAACiomAh8SKB0AAAoqVgJ7GgAA
CgJ7GwAACh8TlG8eAAAKKiYCHxMoHQAACipWAnsaAAAKAnsbAAAKHxSUbx4AAAoqJgIfFCgdAAAK
KlYCexoAAAoCexsAAAofFZRvHgAACiomAh8VKB0AAAoqVgJ7GgAACgJ7GwAACh8WlG8eAAAKKiYC
HxYoHQAACipWAnsaAAAKAnsbAAAKHxeUbx4AAAoqJgIfFygdAAAKKlYCexoAAAoCexsAAAofGJRv
HwAACiomAh8YKB0AAAoqVgJ7GgAACgJ7GwAACh8ZlG8eAAAKKiYCHxkoHQAACipWAnsaAAAKAnsb
AAAKHxqUbx4AAAoqJgIfGigdAAAKKlYCexoAAAoCexsAAAofG5RvHgAACiomAh8bKB0AAAoqVgJ7
GgAACgJ7GwAACh8clG8cAAAKKiYCHxwoHQAACipWAnsaAAAKAnsbAAAKHx2Ubx4AAAoqJgIfHSgd
AAAKKlYCexoAAAoCexsAAAofHpRvIAAACiomAh8eKB0AAAoqVgJ7GgAACgJ7GwAACh8flG8eAAAK
KiYCHx8oHQAACipWAnsaAAAKAnsbAAAKHyCUbx4AAAoqJgIfICgdAAAKKlYCexoAAAoCexsAAAof
IZRvHgAACiomAh8hKB0AAAoqVgJ7GgAACgJ7GwAACh8ilG8eAAAKKiYCHyIoHQAACipWAnsaAAAK
AnsbAAAKHyOUbx4AAAoqJgIfIygdAAAKKlYCexoAAAoCexsAAAofJJRvIQAACiomAh8kKB0AAAoq
KgIfJQMoIgAACipeAywJAh8lKCMAAAoqctUAAHBzJAAACnoqAh8mAygiAAAKKl4DLAkCHyYoIwAA
Cipy1QAAcHMkAAAKeioCHycDKCIAAAoqXgMsCQIfJygjAAAKKnLVAABwcyQAAAp6KgIfKAMoIgAA
CipeAywJAh8oKCMAAAoqctUAAHBzJAAACnoqAh8pAygiAAAKKl4DLAkCHykoIwAACipy1QAAcHMk
AAAKeioCHyoDKCIAAAoqXgMsCQIfKigjAAAKKnLVAABwcyQAAAp6HgIoJQAACioeAigmAAAKKjoC
KCcAAAoCA30DAAAEKjoCKCcAAAoCA30EAAAEKh4CKCcAAAoqAAAAEzACAC0AAAACAAARfgUAAAQt
IHJyAQBw0AcAAAIoKQAACm8qAAAKcysAAAoKBoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4H
AAAEKi5zaQAABoAHAAAEKh4CKC4AAAoqALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQu
MC4zMDMxOQAAAAAFAGwAAABYDgAAI34AAMQOAAC0FQAAI1N0cmluZ3MAAAAAeCQAAOQBAAAjVVMA
XCYAABAAAAAjR1VJRAAAAGwmAADsAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAAB
AAAAJAAAAAgAAAAHAAAAagAAABkAAAAuAAAADwAAAAIAAAADAAAAWQAAAFoAAAABAAAABAAAAAEA
AAAAAAoAAQAAAAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgB2Ac0ABgCFAc0ACgDQAhQBCgC+
AxQBCgD6EOkQCgArERYRCgAEEuoRCgAvEh0SCgBGEh0SCgBjEh0SCgCCEh0SCgCbEh0SCgC0Eh0S
CgDPEh0SCgDqEh0SCgADEx0SCgA8ExwTCgBcExwTCgCeExQBCgClExQBBgDOE80ACgAWFBQBCgAj
FBQBCgAsFBQBCgCAFBQBCgCtFJoUCgDKFBQBCgDPFBQBCgDzFB0SDgAfFQkVDgA4FQkVCgBNFRwT
AAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABAAAAACAADAAUAAQAQAEsAAAAJAAMACQAB
ABAAWAAAAA0AAwBiAAEAEABkAAAADQAEAGMAAAAQAG4AeAANAAUAZAAAARAApwB4ABEABwBoAAYA
WAATAAYAZAAXAAEA2RBvAAEA2RBvABEAChF5ABEANxF9ABEAexGbAFAgAAAAAIYYTwEbAAEAcCAA
AAAAxgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYBtAEpAAYAqiAAAAAAxgDLARsABwCyIAAA
AADGANYBGwAHALwgAAAAAMYAtAEpAAcAECYAAAAAhhhPARsACAAYJgAAAACGGE8BLwAIACMmAAAA
AIYI4gE5AAsAOCYAAAAAhgjpAT0ACwBBJgAAAACGCPcBQQALAFYmAAAAAIYIAgI9AAsAXyYAAAAA
hggUAkEACwB0JgAAAACGCC4CPQALAH0mAAAAAIYITwJBAAsAkiYAAAAAhghiAj0ACwCbJgAAAACG
CHwCQQALALAmAAAAAIYIiwI9AAsAuSYAAAAAhgihAkEACwDOJgAAAACGCLUCPQALANcmAAAAAIYI
2AJFAAsA7CYAAAAAhgjoAj0ACwD1JgAAAACGCP8CQQALAAonAAAAAIYIDgM9AAsAEycAAAAAhggk
A0EACwAoJwAAAACGCDMDPQALADEnAAAAAIYISQNBAAsARycAAAAAhghdAz0ACwBRJwAAAACGCHgD
OQALAGcnAAAAAIYIhwM9AAsAcScAAAAAhgidA0EACwCHJwAAAACGCKoDPQALAJEnAAAAAIYIxwNK
AAsApycAAAAAhgjVAz0ACwCxJwAAAACGCOoDQQALAMcnAAAAAIYI+wM9AAsA0ScAAAAAhggTBEEA
CwDnJwAAAACGCCEEPQALAPEnAAAAAIYINgRBAAsABygAAAAAhghLBD0ACwARKAAAAACGCGcEQQAL
ACcoAAAAAIYIggQ9AAsAMSgAAAAAhgikBEEACwBHKAAAAACGCLIEPQALAFEoAAAAAIYIxwQ5AAsA
ZygAAAAAhgjaBD0ACwBxKAAAAACGCPQEQQALAIcoAAAAAIYIBAU9AAsAkSgAAAAAhggbBUEACwCn
KAAAAACGCDoFPQALALEoAAAAAIYIYAVBAAsAxygAAAAAhgh4BT0ACwDRKAAAAACGCJcFQQALAOco
AAAAAIYIqwU9AAsA8SgAAAAAhgjGBUEACwAHKQAAAACGCN8FPQALABEpAAAAAIYI/wVFAAsAJykA
AAAAhggUBj0ACwAxKQAAAACGCDAGQQALAEcpAAAAAIYIRAY9AAsAUSkAAAAAhghfBkEACwBnKQAA
AACGCHMGPQALAHEpAAAAAIYIjgZBAAsAhykAAAAAhginBj0ACwCRKQAAAACGCMcGOQALAKcpAAAA
AIYI2wY9AAsAsSkAAAAAhgj2BkEACwDHKQAAAACGCAgHPQALANEpAAAAAIYIIQdKAAsA5ykAAAAA
hgg0Bz0ACwDxKQAAAACGCE4HQQALAAcqAAAAAIYIZAc9AAsAESoAAAAAhgiBB0EACwAnKgAAAACG
CJQHPQALADEqAAAAAIYIrgdBAAsARyoAAAAAhgjIBz0ACwBRKgAAAACGCOkHQQALAGcqAAAAAIYI
CQg9AAsAcSoAAAAAhggwCEEACwCHKgAAAACGCEMIPQALAJEqAAAAAIYIXQhKAAsApyoAAAAAhgh9
CD0ACwCxKgAAAACGCKQITwALALwqAAAAAIYIwwhUAAwA1CoAAAAAhgjpCE8ADQDfKgAAAACGCAAJ
VAAOAPcqAAAAAIYIHglPAA8AAisAAAAAhgg1CVQAEAAaKwAAAACGCFMJTwARACUrAAAAAIYIaQlU
ABIAPSsAAAAAhgiGCU8AEwBIKwAAAACGCKAJVAAUAGArAAAAAIYIwQlPABUAaysAAAAAhgjhCVQA
FgCDKwAAAACGAAgKPQAXAIsrAAAAAIYAEAo9ABcAkysAAAAAhhhPAXMAFwCiKwAAAACGGE8BcwAY
ALErAAAAAIMYTwEbABkAvCsAAAAAkwhHEYEAGQD1KwAAAACTCFsRhgAZAPwrAAAAAJMIZxGLABkA
BCwAAAAAlgiLEZ8AGgAXLAAAAACGGE8BGwAaAAssAAAAAJEYaBUxARoAAAABAJ8RAAACAKcRAAAD
ALERAAAEALgRAAABALERAAABAMIRAAABAMIRAAABALERAAACAMYRAAADALgRAAABANoRAAABANoR
AAABANoRAAABANoRAAABANoRAAABANoRAAABANoRAAABANoRAAABANoRAAABANoRAAABANoRAAAB
ANoRAAABAOARAAABAOARAAABANoRWQBPAU8AYQBPAU8AaQBPAU8AcQBPAU8AeQBPAU8AgQBPAU8A
iQBPAU8AkQBPAU8AmQBPAU8AoQBPAU8AqQBPAakAsQBPARsACQBPARsAuQC2E64ACQC9E7UAyQBP
ARsACQDLARsACQDWARsAuQD1EzkAuQAAFMAAuQAKFMYAuQAAFMwAuQAbFNEA2QAoFNcAEQBPAS8A
EQCxEeIAEQDGEeYAKQA2FOoAEQA/FO8AKQBGFMwAKQBQFPQAKQBbFPoAKQBjFPoAEQBvFAABEQB4
FKkA6QBPAU8AEQAICj0AEQAQCj0AGQBPARsA8QBPARsA+QDhFAYB+QD8FA4BSQBPARQBEQFPASEB
IQFPARsAIQBPARsALgAbAKYBLgBjAMwBLgALADUBLgATAH0BLgAjAKYBLgArAKYBLgAzAH0BLgA7
AKwBLgBDAKYBLgBbAMMBYwCDALsA4QBrAbsA4wBDAbsA6QpjASgBCQtjASgB3QAcAQQAAQAHAFcA
CABZAAAAHApZAAAAHwpdAAAAKQphAAAAMApdAAAAPgphAAAAVApdAAAAcQphAAAAgApdAAAAlgph
AAAAoQpdAAAAswphAAAAwwpdAAAA2gplAAAA5gpdAAAA+QphAAAABAtdAAAAFgthAAAAIQtdAAAA
MwthAAAAQwtdAAAAWgtZAAAAZQtdAAAAdwthAAAAgAtdAAAAkAtqAAAAmgtdAAAAqwthAAAAuAtd
AAAAzAthAAAA1gtdAAAA5wthAAAA+AtdAAAAEAxhAAAAJwxdAAAARQxhAAAATwxdAAAAYAxZAAAA
bwxdAAAAhQxhAAAAkQxdAAAApAxhAAAAvwxdAAAA4QxhAAAA9QxdAAAAEA1hAAAAIA1dAAAANw1h
AAAATA1dAAAAaA1lAAAAeQ1dAAAAkQ1hAAAAoQ1dAAAAuA1hAAAAyA1dAAAA3w1hAAAA9A1dAAAA
EA5ZAAAAIA5dAAAANw5hAAAARQ5dAAAAWg5qAAAAaQ5dAAAAfw5hAAAAkQ5dAAAAqg5hAAAAuQ5d
AAAAzw5hAAAA5Q5dAAAAAg9hAAAAHg9dAAAAQQ9hAAAAUA9dAAAAZg9qAAAAgg9dAAAApQ9hAAAA
wA9dAAAA4g9hAAAA9Q9dAAAADxBhAAAAIhBdAAAAPBBhAAAAThBdAAAAZxBhAAAAfRBdAAAAmhBh
AAAAthBdAAAA+hCRAAAAcxGWAAAAlxGkAAIACgADAAIACwAFAAIADAAHAAIADQAJAAIADgALAAIA
DwANAAIAEAAPAAIAEQARAAIAEgATAAIAEwAVAAIAFAAXAAIAFQAZAAIAFgAbAAIAFwAdAAIAGAAf
AAIAGQAhAAIAGgAjAAIAGwAlAAIAHAAnAAIAHQApAAIAHgArAAIAHwAtAAIAIAAvAAIAIQAxAAIA
IgAzAAIAIwA1AAIAJAA3AAIAJQA5AAIAJgA7AAIAJwA9AAIAKAA/AAIAKQBBAAIAKgBDAAIAKwBF
AAIALABHAAIALQBJAAIALgBLAAIALwBNAAIAMABPAAIAMQBRAAIAMgBTAAIAMwBVAAIANABXAAIA
NQBZAAIANgBbAAIANwBdAAIAOABfAAIAOQBhAAIAOgBjAAIAOwBlAAIAPABnAAIAPQBpAAIAPgBr
AAIAPwBtAAIAQABvAAIAQQBxAAIAQgBzAAIAQwB1AAIARAB3AAIARQB5AAIARgB7AAIARwB9AAIA
SAB/AAIASQCBAAIASgCDAAIASwCFAAIATACHAAIATQCJAAIATgCLAAIATwCNAAIAUACPAAIAUQCR
AAIAUgCTAAIAUwCVAAEAVACXAAEAVQCZAAEAVgCbAAEAVwCdAAEAWACfAAEAWQChAAEAWgCjAAEA
WwClAAEAXACnAAEAXQCpAAEAXgCrAAEAXwCtAAIAZQCvAAIAZgCxAAEAZwCxAAIAaACzAASAAAAB
AAAAVR1hUgAAAAAAAHoTAAAMAAAAAAAAAAAAAAABALAAAAAAAAQAAAAAAAAAAAAAAAoACwEAAAAA
BAAAAAAAAAAAAAAACgAUAQAAAAAMAAAAAAAAAAAAAAABAFUBAAAAAAAAAAABAAAAbxUAAAAAAAAA
PE1vZHVsZT4AU0NfZmIwMjhjNTdlYTYxNDYzOGI4ZGQyNjU4NjNmMmEwNTMuZGxsAFVzZXJDb21w
b25lbnQAU2NyaXB0TWFpbgBJbnB1dDBCdWZmZXIAQ29ubmVjdGlvbnMAVmFyaWFibGVzAFJlc291
cmNlcwBTQ19mYjAyOGM1N2VhNjE0NjM4YjhkZDI2NTg2M2YyYTA1My5Qcm9wZXJ0aWVzAFNldHRp
bmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UGlwZWxpbmUAU2NyaXB0Q29tcG9uZW50AFNjcmlwdEJ1ZmZlcgBtc2NvcmxpYgBTeXN0ZW0AT2Jq
ZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAC5jdG9yAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91dHB1dE5hbWVN
YXAAUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJv
dwBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAGdldF9JRABnZXRfSURfSXNOdWxsAGdldF9hZ2VuY3kA
Z2V0X2FnZW5jeV9Jc051bGwAZ2V0X2Fzc29jaWF0ZWRwcmltZXZlbmRvcgBnZXRfYXNzb2NpYXRl
ZHByaW1ldmVuZG9yX0lzTnVsbABnZXRfY2FwaXRhbHByb2plY3QAZ2V0X2NhcGl0YWxwcm9qZWN0
X0lzTnVsbABnZXRfY29udHJhY3RpZABnZXRfY29udHJhY3RpZF9Jc051bGwAZ2V0X2NvbnRyYWN0
cHVycG9zZQBnZXRfY29udHJhY3RwdXJwb3NlX0lzTnVsbABEZWNpbWFsAGdldF9jaGVja2Ftb3Vu
dABnZXRfY2hlY2thbW91bnRfSXNOdWxsAGdldF9kZXBhcnRtZW50AGdldF9kZXBhcnRtZW50X0lz
TnVsbABnZXRfZG9jdW1lbnRpZABnZXRfZG9jdW1lbnRpZF9Jc051bGwAZ2V0X2V4cGVuc2VjYXRl
Z29yeQBnZXRfZXhwZW5zZWNhdGVnb3J5X0lzTnVsbABnZXRfZmlzY2FseWVhcgBnZXRfZmlzY2Fs
eWVhcl9Jc051bGwAZ2V0X2luZHVzdHJ5AGdldF9pbmR1c3RyeV9Jc051bGwARGF0ZVRpbWUAZ2V0
X2lzc3VlZGF0ZQBnZXRfaXNzdWVkYXRlX0lzTnVsbABnZXRfbXdiZWNhdGVnb3J5AGdldF9td2Jl
Y2F0ZWdvcnlfSXNOdWxsAGdldF9wYXllZW5hbWUAZ2V0X3BheWVlbmFtZV9Jc051bGwAZ2V0X3Nw
ZW5kaW5nY2F0ZWdvcnkAZ2V0X3NwZW5kaW5nY2F0ZWdvcnlfSXNOdWxsAGdldF9zdWJjb250cmFj
dHJlZmVyZW5jZWlkAGdldF9zdWJjb250cmFjdHJlZmVyZW5jZWlkX0lzTnVsbABnZXRfc3VidmVu
ZG9yAGdldF9zdWJ2ZW5kb3JfSXNOdWxsAGdldF9TdGFnaW5nSURGSU5BTABnZXRfU3RhZ2luZ0lE
RklOQUxfSXNOdWxsAGdldF9hZ2VuY3lGSU5BTABnZXRfYWdlbmN5RklOQUxfSXNOdWxsAGdldF9h
c3NvY2lhdGVkcHJpbWV2ZW5kb3JGSU5BTABnZXRfYXNzb2NpYXRlZHByaW1ldmVuZG9yRklOQUxf
SXNOdWxsAGdldF9jYXBpdGFscHJvamVjdEZJTkFMAGdldF9jYXBpdGFscHJvamVjdEZJTkFMX0lz
TnVsbABnZXRfY29udHJhY3RpZEZJTkFMAGdldF9jb250cmFjdGlkRklOQUxfSXNOdWxsAGdldF9j
b250cmFjdHB1cnBvc2VGSU5BTABnZXRfY29udHJhY3RwdXJwb3NlRklOQUxfSXNOdWxsAGdldF9j
aGVja2Ftb3VudEZJTkFMAGdldF9jaGVja2Ftb3VudEZJTkFMX0lzTnVsbABnZXRfZGVwYXJ0bWVu
dEZJTkFMAGdldF9kZXBhcnRtZW50RklOQUxfSXNOdWxsAGdldF9kb2N1bWVudGlkRklOQUwAZ2V0
X2RvY3VtZW50aWRGSU5BTF9Jc051bGwAZ2V0X2V4cGVuc2VjYXRlZ29yeUZJTkFMAGdldF9leHBl
bnNlY2F0ZWdvcnlGSU5BTF9Jc051bGwAZ2V0X2Zpc2NhbHllYXJGSU5BTABnZXRfZmlzY2FseWVh
ckZJTkFMX0lzTnVsbABnZXRfaW5kdXN0cnlGSU5BTABnZXRfaW5kdXN0cnlGSU5BTF9Jc051bGwA
Z2V0X2lzc3VlZGF0ZUZJTkFMAGdldF9pc3N1ZWRhdGVGSU5BTF9Jc051bGwAZ2V0X213YmVjYXRl
Z29yeUZJTkFMAGdldF9td2JlY2F0ZWdvcnlGSU5BTF9Jc051bGwAZ2V0X3BheWVlbmFtZUZJTkFM
AGdldF9wYXllZW5hbWVGSU5BTF9Jc051bGwAZ2V0X3NwZW5kaW5nY2F0ZWdvcnlGSU5BTABnZXRf
c3BlbmRpbmdjYXRlZ29yeUZJTkFMX0lzTnVsbABnZXRfc3ViY29udHJhY3RyZWZlcmVuY2VpZEZJ
TkFMAGdldF9zdWJjb250cmFjdHJlZmVyZW5jZWlkRklOQUxfSXNOdWxsAGdldF9zdWJ2ZW5kb3JG
SU5BTABnZXRfc3VidmVuZG9yRklOQUxfSXNOdWxsAGdldF9MYXN0VXBkYXRlZFRpbWVzdGFtcERl
cml2ZWQAZ2V0X0xhc3RVcGRhdGVkVGltZXN0YW1wRGVyaXZlZF9Jc051bGwAc2V0X1JlZ2lzdHJh
dGlvblNUQUdJTkdEZXJpdmVkAHNldF9SZWdpc3RyYXRpb25TVEFHSU5HRGVyaXZlZF9Jc051bGwA
c2V0X0RlcHRTVEFHSU5HRGVyaXZlZABzZXRfRGVwdFNUQUdJTkdEZXJpdmVkX0lzTnVsbABzZXRf
Q29kZVNUQUdJTkdEZXJpdmVkAHNldF9Db2RlU1RBR0lOR0Rlcml2ZWRfSXNOdWxsAHNldF9PY2NT
VEFHSU5HRGVyaXZlZABzZXRfT2NjU1RBR0lOR0Rlcml2ZWRfSXNOdWxsAHNldF9DYXBQcm9qU1RB
R0lOR0Rlcml2ZWQAc2V0X0NhcFByb2pTVEFHSU5HRGVyaXZlZF9Jc051bGwAc2V0X1Byb2plY3RB
Z2VuY3lTVEFHSU5HRGVyaXZlZABzZXRfUHJvamVjdEFnZW5jeVNUQUdJTkdEZXJpdmVkX0lzTnVs
bABOZXh0Um93AEVuZE9mUm93c2V0AElEAElEX0lzTnVsbABhZ2VuY3kAYWdlbmN5X0lzTnVsbABh
c3NvY2lhdGVkcHJpbWV2ZW5kb3IAYXNzb2NpYXRlZHByaW1ldmVuZG9yX0lzTnVsbABjYXBpdGFs
cHJvamVjdABjYXBpdGFscHJvamVjdF9Jc051bGwAY29udHJhY3RpZABjb250cmFjdGlkX0lzTnVs
bABjb250cmFjdHB1cnBvc2UAY29udHJhY3RwdXJwb3NlX0lzTnVsbABjaGVja2Ftb3VudABjaGVj
a2Ftb3VudF9Jc051bGwAZGVwYXJ0bWVudABkZXBhcnRtZW50X0lzTnVsbABkb2N1bWVudGlkAGRv
Y3VtZW50aWRfSXNOdWxsAGV4cGVuc2VjYXRlZ29yeQBleHBlbnNlY2F0ZWdvcnlfSXNOdWxsAGZp
c2NhbHllYXIAZmlzY2FseWVhcl9Jc051bGwAaW5kdXN0cnkAaW5kdXN0cnlfSXNOdWxsAGlzc3Vl
ZGF0ZQBpc3N1ZWRhdGVfSXNOdWxsAG13YmVjYXRlZ29yeQBtd2JlY2F0ZWdvcnlfSXNOdWxsAHBh
eWVlbmFtZQBwYXllZW5hbWVfSXNOdWxsAHNwZW5kaW5nY2F0ZWdvcnkAc3BlbmRpbmdjYXRlZ29y
eV9Jc051bGwAc3ViY29udHJhY3RyZWZlcmVuY2VpZABzdWJjb250cmFjdHJlZmVyZW5jZWlkX0lz
TnVsbABzdWJ2ZW5kb3IAc3VidmVuZG9yX0lzTnVsbABTdGFnaW5nSURGSU5BTABTdGFnaW5nSURG
SU5BTF9Jc051bGwAYWdlbmN5RklOQUwAYWdlbmN5RklOQUxfSXNOdWxsAGFzc29jaWF0ZWRwcmlt
ZXZlbmRvckZJTkFMAGFzc29jaWF0ZWRwcmltZXZlbmRvckZJTkFMX0lzTnVsbABjYXBpdGFscHJv
amVjdEZJTkFMAGNhcGl0YWxwcm9qZWN0RklOQUxfSXNOdWxsAGNvbnRyYWN0aWRGSU5BTABjb250
cmFjdGlkRklOQUxfSXNOdWxsAGNvbnRyYWN0cHVycG9zZUZJTkFMAGNvbnRyYWN0cHVycG9zZUZJ
TkFMX0lzTnVsbABjaGVja2Ftb3VudEZJTkFMAGNoZWNrYW1vdW50RklOQUxfSXNOdWxsAGRlcGFy
dG1lbnRGSU5BTABkZXBhcnRtZW50RklOQUxfSXNOdWxsAGRvY3VtZW50aWRGSU5BTABkb2N1bWVu
dGlkRklOQUxfSXNOdWxsAGV4cGVuc2VjYXRlZ29yeUZJTkFMAGV4cGVuc2VjYXRlZ29yeUZJTkFM
X0lzTnVsbABmaXNjYWx5ZWFyRklOQUwAZmlzY2FseWVhckZJTkFMX0lzTnVsbABpbmR1c3RyeUZJ
TkFMAGluZHVzdHJ5RklOQUxfSXNOdWxsAGlzc3VlZGF0ZUZJTkFMAGlzc3VlZGF0ZUZJTkFMX0lz
TnVsbABtd2JlY2F0ZWdvcnlGSU5BTABtd2JlY2F0ZWdvcnlGSU5BTF9Jc051bGwAcGF5ZWVuYW1l
RklOQUwAcGF5ZWVuYW1lRklOQUxfSXNOdWxsAHNwZW5kaW5nY2F0ZWdvcnlGSU5BTABzcGVuZGlu
Z2NhdGVnb3J5RklOQUxfSXNOdWxsAHN1YmNvbnRyYWN0cmVmZXJlbmNlaWRGSU5BTABzdWJjb250
cmFjdHJlZmVyZW5jZWlkRklOQUxfSXNOdWxsAHN1YnZlbmRvckZJTkFMAHN1YnZlbmRvckZJTkFM
X0lzTnVsbABMYXN0VXBkYXRlZFRpbWVzdGFtcERlcml2ZWQATGFzdFVwZGF0ZWRUaW1lc3RhbXBE
ZXJpdmVkX0lzTnVsbABSZWdpc3RyYXRpb25TVEFHSU5HRGVyaXZlZABSZWdpc3RyYXRpb25TVEFH
SU5HRGVyaXZlZF9Jc051bGwARGVwdFNUQUdJTkdEZXJpdmVkAERlcHRTVEFHSU5HRGVyaXZlZF9J
c051bGwAQ29kZVNUQUdJTkdEZXJpdmVkAENvZGVTVEFHSU5HRGVyaXZlZF9Jc051bGwAT2NjU1RB
R0lOR0Rlcml2ZWQAT2NjU1RBR0lOR0Rlcml2ZWRfSXNOdWxsAENhcFByb2pTVEFHSU5HRGVyaXZl
ZABDYXBQcm9qU1RBR0lOR0Rlcml2ZWRfSXNOdWxsAFByb2plY3RBZ2VuY3lTVEFHSU5HRGVyaXZl
ZABQcm9qZWN0QWdlbmN5U1RBR0lOR0Rlcml2ZWRfSXNOdWxsAFBhcmVudENvbXBvbmVudABTeXN0
ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABE
ZWZhdWx0AElucHV0SUQASW5wdXROYW1lAEJ1ZmZlcgBPdXRwdXRNYXAAUm93AEJ1ZmZlckNvbHVt
bkluZGV4ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3Nl
bWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ19mYjAyOGM1N2VhNjE0NjM4YjhkZDI2NTg2M2Yy
YTA1MwBTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBTU0lT
U2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBnZXRfTGVuZ3RoAFN1YnN0cmluZwBv
cF9FcXVhbGl0eQBDaGFyAFRyaW1FbmQATWF0aABNYXgARXhjZXB0aW9uAEdldEludDMyAElzTnVs
bABHZXRTdHJpbmcAR2V0RGVjaW1hbABHZXREYXRlAEdldERhdGVUaW1lAHNldF9JdGVtAFNldE51
bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAC5jY3RvcgBTQ19mYjAyOGM1N2VhNjE0NjM4YjhkZDI2NTg2M2YyYTA1My5Qcm9wZXJ0
aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAD0kAbgBwAHUAdAAgADAAAAdDAFQAMQAACUMAVABB
ADEAAAdEAE8AMQAACU0ATQBBADEAAAlSAEMAVAAxAAAJUABSAEMAMgAAB1AATwBEAAAHUABPAEMA
AAlQAE8ATgAxAAAJUABSAE0AMQAACVAAQwBDADEAAAlDAFQAQQAyAAALUgBUAEcAUABGAAAHTgAv
AEEAAD9FAFIAUgBPAFIAOgAgAGEAbgAgAGUAeABjAGUAcAB0AGkAbwBuACAAaABhAHMAIABvAGMA
YwB1AHIAZQBkAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQA
IABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBh
AGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAcVMA
QwBfAGYAYgAwADIAOABjADUANwBlAGEANgAxADQANgAzADgAYgA4AGQAZAAyADYANQA4ADYAMwBm
ADIAYQAwADUAMwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAY7SV
YIY1yk6hglORl3BWzwAIiYRdzYCAzJEIt3pcVhk04IkDBhIUAwYSGAMgAAEJIAQBCA4SFRIZBSAB
ARIQCSADARIVHQgSGQMgAAgDIAACAyAADgQgABEdBCAAESEEIAEBDgQgAQECAygACAMoAAIDKAAO
BCgAER0EKAARIQMGEgUFIAEBEgUDBhIlAwYSKQQAABIlBAAAEikFAAEBEikECAASJQQIABIpAwYS
IAQAABIgBAgAEiAEIAEBCAYgAgIOEWEFIAEdCAgEAQAAAAUgAg4ICAUAAgIODgQgAQ4IBSABDh0D
BQACCAgIBAcCDg4DBhIVAwYdCAQgAQgIBCABAggFIAERHQgFIAERIQgFIAIBCBwHAAESfRGAgQUg
ABKAhQcgAgEOEoCFBAcBEiUGIAEBEYCNCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNT
Q19mYjAyOGM1N2VhNjE0NjM4YjhkZDI2NTg2M2YyYTA1MwAABQEAAAAAFgEAEUNvcHlyaWdodCBA
ICAyMDIwAAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAFhVAAAAAAAA
AAAAAG5VAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgVQAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMAAAAAAAAA
AAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAGFS
VR0AAAEAYVJVHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBADAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAAAHAAJAAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBmAGIAMAAyADgAYwA1ADcA
ZQBhADYAMQA0ADYAMwA4AGIAOABkAGQAMgA2ADUAOAA2ADMAZgAyAGEAMAA1ADMAAABAAA8AAQBG
AGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA1ADAAOQAuADIAMQAwADgAOQAAAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmAGIAMAAyADgAYwA1ADcAZQBh
ADYAMQA0ADYAMwA4AGIAOABkAGQAMgA2ADUAOAA2ADMAZgAyAGEAMAA1ADMALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIAMAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMA
XwBmAGIAMAAyADgAYwA1ADcAZQBhADYAMQA0ADYAMwA4AGIAOABkAGQAMgA2ADUAOAA2ADMAZgAy
AGEAMAA1ADMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8A
ZgBiADAAMgA4AGMANQA3AGUAYQA2ADEANAA2ADMAOABiADgAZABkADIANgA1ADgANgAzAGYAMgBh
ADAANQAzAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADUA
MAA5AC4AMgAxADAAOAA5AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA3ADUAMAA5AC4AMgAxADAAOAA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAIA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_fb028c57ea614638b8dd265863f2a053</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">39de178a02af8e7dd66a665c38bcf735</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">ce9dc3ec074e07c1f51096eb53aed429a985b21a</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[associated_prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[capital_project]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[check_amount]"
                      cachedDataType="cy"
                      cachedName="check_amount"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[department]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[document_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[expense_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[fiscal_year]"
                      cachedDataType="i4"
                      cachedName="fiscal_year"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[issue_date]"
                      cachedDataType="dbDate"
                      cachedName="issue_date"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[payee_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[spending_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[agency_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[associated_prime_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[capital_project_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[contract_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[contract_purpose_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[check_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="check_amount_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[department_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[document_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[expense_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[fiscal_year_FINAL]"
                      cachedDataType="i4"
                      cachedName="fiscal_year_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[industry_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[issue_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="issue_date_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[mwbe_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[payee_name_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[spending_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[sub_contract_reference_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[sub_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[RegistrationSTAGING_Derived]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[RegistrationSTAGING_Derived]"
                      name="RegistrationSTAGING_Derived" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[DeptSTAGING_Derived]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[DeptSTAGING_Derived]"
                      name="DeptSTAGING_Derived" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CodeSTAGING_Derived]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CodeSTAGING_Derived]"
                      name="CodeSTAGING_Derived" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[OccSTAGING_Derived]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[OccSTAGING_Derived]"
                      name="OccSTAGING_Derived" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CapProjSTAGING_Derived]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CapProjSTAGING_Derived]"
                      name="CapProjSTAGING_Derived" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[ProjectAgencySTAGING_Derived]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[ProjectAgencySTAGING_Derived]"
                      name="ProjectAgencySTAGING_Derived" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derive Current Datetime for Final Spending table"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]"
                      name="LastUpdatedTimestamp_Derived"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Final - Spending Sorted ASC"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Spending]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT
       [StagingID] AS StagingID_FINAL
      ,[agency] AS agency_FINAL
      ,[associated_prime_vendor] AS associated_prime_vendor_FINAL
      ,[capital_project] AS capital_project_FINAL
      ,[contract_id] AS contract_id_FINAL
      ,[contract_purpose] AS contract_purpose_FINAL
      ,[check_amount] AS check_amount_FINAL
      ,[department] AS department_FINAL
      ,[document_id] AS document_id_FINAL
      ,[expense_category] AS expense_category_FINAL
      ,[fiscal_year] AS fiscal_year_FINAL
      ,[industry] AS industry_FINAL
      ,[issue_date] AS issue_date_FINAL
      ,[mwbe_category] AS mwbe_category_FINAL
      ,[payee_name] AS payee_name_FINAL
      ,[spending_category] AS spending_category_FINAL
      ,[sub_contract_reference_id] AS sub_contract_reference_id_FINAL
      ,[sub_vendor] AS sub_vendor_FINAL
  FROM [CheckBookNYC].[dbo].[Spending]
  ORDER BY
      [StagingID] ASC</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output]"
                  isSorted="true"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[StagingID_FINAL]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[StagingID_FINAL]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[StagingID_FINAL]"
                      name="StagingID_FINAL"
                      sortKeyPosition="1"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[agency_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[agency_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[agency_FINAL]"
                      name="agency_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[associated_prime_vendor_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[associated_prime_vendor_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[associated_prime_vendor_FINAL]"
                      name="associated_prime_vendor_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[capital_project_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[capital_project_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[capital_project_FINAL]"
                      name="capital_project_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_id_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_id_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_id_FINAL]"
                      name="contract_id_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_purpose_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_purpose_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_purpose_FINAL]"
                      name="contract_purpose_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[check_amount_FINAL]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[check_amount_FINAL]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[check_amount_FINAL]"
                      name="check_amount_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[department_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[department_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[department_FINAL]"
                      name="department_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[document_id_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[document_id_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[document_id_FINAL]"
                      name="document_id_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[expense_category_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[expense_category_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[expense_category_FINAL]"
                      name="expense_category_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[fiscal_year_FINAL]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[fiscal_year_FINAL]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[fiscal_year_FINAL]"
                      name="fiscal_year_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[industry_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[industry_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[industry_FINAL]"
                      name="industry_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[issue_date_FINAL]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[issue_date_FINAL]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[issue_date_FINAL]"
                      name="issue_date_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[mwbe_category_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[mwbe_category_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[mwbe_category_FINAL]"
                      name="mwbe_category_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[payee_name_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[payee_name_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[payee_name_FINAL]"
                      name="payee_name_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[spending_category_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[spending_category_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[spending_category_FINAL]"
                      name="spending_category_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_reference_id_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id_FINAL]"
                      name="sub_contract_reference_id_FINAL"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_vendor_FINAL]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_FINAL]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_vendor_FINAL]"
                      name="sub_vendor_FINAL"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[StagingID_FINAL]"
                      dataType="i4"
                      name="StagingID_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[agency_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="agency_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[associated_prime_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="associated_prime_vendor_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[capital_project_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="capital_project_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="contract_id_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_purpose_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="contract_purpose_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[check_amount_FINAL]"
                      dataType="cy"
                      name="check_amount_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[department_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="department_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[document_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="document_id_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[expense_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="expense_category_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[fiscal_year_FINAL]"
                      dataType="i4"
                      name="fiscal_year_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[industry_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="industry_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[issue_date_FINAL]"
                      dataType="dbDate"
                      name="issue_date_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[mwbe_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="mwbe_category_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[payee_name_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="payee_name_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[spending_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="spending_category_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_reference_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_reference_id_FINAL" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor_FINAL" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[StagingID_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[StagingID_FINAL]"
                      name="StagingID_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[agency_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[agency_FINAL]"
                      name="agency_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[associated_prime_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[associated_prime_vendor_FINAL]"
                      name="associated_prime_vendor_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[capital_project_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[capital_project_FINAL]"
                      name="capital_project_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_id_FINAL]"
                      name="contract_id_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_purpose_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_purpose_FINAL]"
                      name="contract_purpose_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[check_amount_FINAL]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[check_amount_FINAL]"
                      name="check_amount_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[department_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[department_FINAL]"
                      name="department_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[document_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[document_id_FINAL]"
                      name="document_id_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[expense_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[expense_category_FINAL]"
                      name="expense_category_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[fiscal_year_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[fiscal_year_FINAL]"
                      name="fiscal_year_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[industry_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[industry_FINAL]"
                      name="industry_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[issue_date_FINAL]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[issue_date_FINAL]"
                      name="issue_date_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[mwbe_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[mwbe_category_FINAL]"
                      name="mwbe_category_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[payee_name_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[payee_name_FINAL]"
                      name="payee_name_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[spending_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[spending_category_FINAL]"
                      name="spending_category_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_contract_reference_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_contract_reference_id_FINAL]"
                      name="sub_contract_reference_id_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_vendor_FINAL]"
                      name="sub_vendor_FINAL" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Find Update-able record"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input].Columns[contract_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Update-able Records]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Update-able Records"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">(![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]}) &amp;&amp; [ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]})) || ([ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]})) || (![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]}) &amp;&amp; ![ISNULL](#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]}) &amp;&amp; (#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]} != #{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]}))</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">(!ISNULL(contract_id_FINAL) &amp;&amp; ISNULL(contract_id)) || (ISNULL(contract_id_FINAL) &amp;&amp; !ISNULL(contract_id)) || (!ISNULL(contract_id_FINAL) &amp;&amp; !ISNULL(contract_id) &amp;&amp; (contract_id_FINAL != contract_id))</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert records (Final - Spending) - Batch 100,000"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Spending]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">100000</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[agency]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[associated_prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[associated_prime_vendor]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[capital_project]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[capital_project]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[contract_id]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[contract_purpose]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[department]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[department]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[document_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[document_id]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[expense_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[expense_category]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[industry]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[mwbe_category]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[payee_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[payee_name]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[spending_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[spending_category]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_reference_id]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_vendor]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[StagingID]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[LastUpdatedTimestamp]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[check_amount_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="check_amount_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[check_amount]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[check_amount_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[fiscal_year_DataTypeConverted]"
                      cachedDataType="i4"
                      cachedName="fiscal_year_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[fiscal_year]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[fiscal_year_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[issue_date_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="issue_date_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[issue_date]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[issue_date_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[CodeSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CodeSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Code]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CodeSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[DeptSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DeptSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Dept]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[DeptSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[RegistrationSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RegistrationSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Registration]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[RegistrationSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[ProjectAgencySTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProjectAgencySTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[ProjectAgency]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[ProjectAgencySTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[CapProjSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CapProjSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[CapProj]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CapProjSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].Columns[OccSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="OccSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Occ]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[OccSTAGING_Derived]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[StagingID]"
                      dataType="i4"
                      name="StagingID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[LastUpdatedTimestamp]"
                      dataType="dbTimeStamp"
                      name="LastUpdatedTimestamp" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[agency]"
                      dataType="wstr"
                      length="255"
                      name="agency" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[associated_prime_vendor]"
                      dataType="wstr"
                      length="255"
                      name="associated_prime_vendor" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[capital_project]"
                      dataType="wstr"
                      length="255"
                      name="capital_project" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[contract_id]"
                      dataType="wstr"
                      length="255"
                      name="contract_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[contract_purpose]"
                      dataType="wstr"
                      length="255"
                      name="contract_purpose" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[check_amount]"
                      dataType="cy"
                      name="check_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[department]"
                      dataType="wstr"
                      length="255"
                      name="department" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[document_id]"
                      dataType="wstr"
                      length="255"
                      name="document_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[expense_category]"
                      dataType="wstr"
                      length="255"
                      name="expense_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[fiscal_year]"
                      dataType="i4"
                      name="fiscal_year" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[industry]"
                      dataType="wstr"
                      length="255"
                      name="industry" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[issue_date]"
                      dataType="dbDate"
                      name="issue_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[mwbe_category]"
                      dataType="wstr"
                      length="255"
                      name="mwbe_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[payee_name]"
                      dataType="wstr"
                      length="255"
                      name="payee_name" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[spending_category]"
                      dataType="wstr"
                      length="255"
                      name="spending_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_reference_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Code]"
                      dataType="wstr"
                      length="255"
                      name="Code" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Dept]"
                      dataType="wstr"
                      length="255"
                      name="Dept" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Registration]"
                      dataType="wstr"
                      length="255"
                      name="Registration" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[ProjectAgency]"
                      dataType="wstr"
                      length="255"
                      name="ProjectAgency" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[CapProj]"
                      dataType="wstr"
                      length="255"
                      name="CapProj" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input].ExternalColumns[Occ]"
                      dataType="wstr"
                      length="255"
                      name="Occ" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[agency]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[associated_prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[associated_prime_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[capital_project]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[capital_project]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_purpose]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[check_amount]"
                      cachedDataType="cy"
                      cachedName="check_amount"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[check_amount]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[department]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[department]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[document_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[document_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[expense_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[expense_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[fiscal_year]"
                      cachedDataType="i4"
                      cachedName="fiscal_year"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[fiscal_year]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[industry]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[issue_date]"
                      cachedDataType="dbDate"
                      cachedName="issue_date"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[issue_date]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[mwbe_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[payee_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[payee_name]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[spending_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[spending_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_vendor]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[StagingID_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[agency_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[agency_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[associated_prime_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[associated_prime_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[capital_project_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[capital_project_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[contract_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[contract_purpose_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_purpose_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[check_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="check_amount_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[check_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[department_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[department_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[document_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[document_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[expense_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[expense_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[fiscal_year_FINAL]"
                      cachedDataType="i4"
                      cachedName="fiscal_year_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[fiscal_year_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[industry_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[industry_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[issue_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="issue_date_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[issue_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[mwbe_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[mwbe_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[payee_name_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[payee_name_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[spending_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[spending_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_reference_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_vendor_FINAL]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]"
                      name="ID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[ID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency]"
                      name="agency">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[agency]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor]"
                      name="associated_prime_vendor">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[associated_prime_vendor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project]"
                      name="capital_project">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[capital_project]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]"
                      name="contract_id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[contract_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose]"
                      name="contract_purpose">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[contract_purpose]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount]"
                      name="check_amount">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[check_amount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department]"
                      name="department">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[department]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id]"
                      name="document_id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[document_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category]"
                      name="expense_category">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[expense_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year]"
                      name="fiscal_year">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[fiscal_year]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry]"
                      name="industry">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[industry]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date]"
                      name="issue_date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[issue_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category]"
                      name="mwbe_category">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[mwbe_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name]"
                      name="payee_name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[payee_name]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category]"
                      name="spending_category">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[spending_category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id]"
                      name="sub_contract_reference_id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_contract_reference_id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor]"
                      name="sub_vendor">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input].Columns[sub_vendor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]"
                      name="StagingID_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[StagingID_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]"
                      name="agency_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[agency_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor_FINAL]"
                      name="associated_prime_vendor_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[associated_prime_vendor_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project_FINAL]"
                      name="capital_project_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[capital_project_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]"
                      name="contract_id_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[contract_id_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose_FINAL]"
                      name="contract_purpose_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[contract_purpose_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount_FINAL]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount_FINAL]"
                      name="check_amount_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[check_amount_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]"
                      name="department_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[department_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id_FINAL]"
                      name="document_id_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[document_id_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]"
                      name="expense_category_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[expense_category_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year_FINAL]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year_FINAL]"
                      name="fiscal_year_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[fiscal_year_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry_FINAL]"
                      name="industry_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[industry_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date_FINAL]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date_FINAL]"
                      name="issue_date_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[issue_date_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category_FINAL]"
                      name="mwbe_category_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[mwbe_category_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name_FINAL]"
                      name="payee_name_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[payee_name_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category_FINAL]"
                      name="spending_category_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[spending_category_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]"
                      name="sub_contract_reference_id_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_contract_reference_id_FINAL]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]"
                      name="sub_vendor_FINAL">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input].Columns[sub_vendor_FINAL]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Replace any column that is &quot;-&quot; with NULL"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        try
        {
            Row.agency = (Row.agency == "-" ? null : Row.agency);
            Row.associatedprimevendor = (Row.associatedprimevendor == "-" ? null : Row.associatedprimevendor);
            Row.capitalproject = (Row.capitalproject == "-" ? null : Row.capitalproject);
            Row.contractid = (Row.contractid == "-" ? null : Row.contractid);
            Row.contractpurpose = (Row.contractpurpose == "-" ? null : Row.contractpurpose);
            Row.department = (Row.department == "-" ? null : Row.department);
            Row.documentid = (Row.documentid == "-" ? null : Row.documentid);
            Row.expensecategory = (Row.expensecategory == "-" ? null : Row.expensecategory);
            Row.industry = (Row.industry == "-" ? null : Row.industry);
            Row.mwbecategory = (Row.mwbecategory == "-" ? null : Row.mwbecategory);
            Row.payeename = (Row.payeename == "-" ? null : Row.payeename);
            Row.spendingcategory = (Row.spendingcategory == "-" ? null : Row.spendingcategory);
            Row.subcontractreferenceid = (Row.subcontractreferenceid == "-" ? null : Row.subcontractreferenceid);
            Row.subvendor = (Row.subvendor == "-" ? null : Row.subvendor);
        }
        catch (Exception ex)
        {
            Row.agency = "ERROR";
            Row.associatedprimevendor = "ERROR";
            Row.capitalproject = "ERROR";
            Row.contractid = "ERROR";
            Row.contractpurpose = "ERROR";
            Row.department = "ERROR";
            Row.documentid = "ERROR";
            Row.expensecategory = "ERROR";
            Row.industry = "ERROR";
            Row.mwbecategory = "ERROR";
            Row.payeename = "ERROR";
            Row.spendingcategory = "ERROR";
            Row.subcontractreferenceid = "ERROR";
            Row.subvendor = "ERROR";
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String agency
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
        set
        {
            this[1] = value;
        }
    }
    public bool agency_IsNull
    {
        get
        {
            return IsNull(1);
        }
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String associatedprimevendor
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
        set
        {
            this[2] = value;
        }
    }
    public bool associatedprimevendor_IsNull
    {
        get
        {
            return IsNull(2);
        }
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String capitalproject
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool capitalproject_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String contractid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
        set
        {
            this[4] = value;
        }
    }
    public bool contractid_IsNull
    {
        get
        {
            return IsNull(4);
        }
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String contractpurpose
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
        set
        {
            this[5] = value;
        }
    }
    public bool contractpurpose_IsNull
    {
        get
        {
            return IsNull(5);
        }
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal checkamount
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[6]);
        }
        set
        {
            this[6] = value;
        }
    }
    public bool checkamount_IsNull
    {
        get
        {
            return IsNull(6);
        }
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String department
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
        set
        {
            this[7] = value;
        }
    }
    public bool department_IsNull
    {
        get
        {
            return IsNull(7);
        }
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String documentid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
        set
        {
            this[8] = value;
        }
    }
    public bool documentid_IsNull
    {
        get
        {
            return IsNull(8);
        }
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String expensecategory
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
        set
        {
            this[9] = value;
        }
    }
    public bool expensecategory_IsNull
    {
        get
        {
            return IsNull(9);
        }
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 fiscalyear
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[10]);
        }
        set
        {
            this[10] = value;
        }
    }
    public bool fiscalyear_IsNull
    {
        get
        {
            return IsNull(10);
        }
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String industry
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
        set
        {
            this[11] = value;
        }
    }
    public bool industry_IsNull
    {
        get
        {
            return IsNull(11);
        }
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime issuedate
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[12]);
        }
        set
        {
            this[12] = value;
        }
    }
    public bool issuedate_IsNull
    {
        get
        {
            return IsNull(12);
        }
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String mwbecategory
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
        set
        {
            this[13] = value;
        }
    }
    public bool mwbecategory_IsNull
    {
        get
        {
            return IsNull(13);
        }
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String payeename
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
        set
        {
            this[14] = value;
        }
    }
    public bool payeename_IsNull
    {
        get
        {
            return IsNull(14);
        }
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String spendingcategory
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
        set
        {
            this[15] = value;
        }
    }
    public bool spendingcategory_IsNull
    {
        get
        {
            return IsNull(15);
        }
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subcontractreferenceid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[16]);
        }
        set
        {
            this[16] = value;
        }
    }
    public bool subcontractreferenceid_IsNull
    {
        get
        {
            return IsNull(16);
        }
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String subvendor
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[17]);
        }
        set
        {
            this[17] = value;
        }
    }
    public bool subvendor_IsNull
    {
        get
        {
            return IsNull(17);
        }
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 StagingIDFINAL
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[18]);
        }
    }
    public bool StagingIDFINAL_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public String agencyFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[19]);
        }
    }
    public bool agencyFINAL_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public String associatedprimevendorFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[20]);
        }
    }
    public bool associatedprimevendorFINAL_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public String capitalprojectFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[21]);
        }
    }
    public bool capitalprojectFINAL_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public String contractidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[22]);
        }
    }
    public bool contractidFINAL_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public String contractpurposeFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[23]);
        }
    }
    public bool contractpurposeFINAL_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    public Decimal checkamountFINAL
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[24]);
        }
    }
    public bool checkamountFINAL_IsNull
    {
        get
        {
            return IsNull(24);
        }
    }

    public String departmentFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[25]);
        }
    }
    public bool departmentFINAL_IsNull
    {
        get
        {
            return IsNull(25);
        }
    }

    public String documentidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[26]);
        }
    }
    public bool documentidFINAL_IsNull
    {
        get
        {
            return IsNull(26);
        }
    }

    public String expensecategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[27]);
        }
    }
    public bool expensecategoryFINAL_IsNull
    {
        get
        {
            return IsNull(27);
        }
    }

    public Int32 fiscalyearFINAL
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[28]);
        }
    }
    public bool fiscalyearFINAL_IsNull
    {
        get
        {
            return IsNull(28);
        }
    }

    public String industryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[29]);
        }
    }
    public bool industryFINAL_IsNull
    {
        get
        {
            return IsNull(29);
        }
    }

    public DateTime issuedateFINAL
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[30]);
        }
    }
    public bool issuedateFINAL_IsNull
    {
        get
        {
            return IsNull(30);
        }
    }

    public String mwbecategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[31]);
        }
    }
    public bool mwbecategoryFINAL_IsNull
    {
        get
        {
            return IsNull(31);
        }
    }

    public String payeenameFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[32]);
        }
    }
    public bool payeenameFINAL_IsNull
    {
        get
        {
            return IsNull(32);
        }
    }

    public String spendingcategoryFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[33]);
        }
    }
    public bool spendingcategoryFINAL_IsNull
    {
        get
        {
            return IsNull(33);
        }
    }

    public String subcontractreferenceidFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[34]);
        }
    }
    public bool subcontractreferenceidFINAL_IsNull
    {
        get
        {
            return IsNull(34);
        }
    }

    public String subvendorFINAL
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[35]);
        }
    }
    public bool subvendorFINAL_IsNull
    {
        get
        {
            return IsNull(35);
        }
    }

    public DateTime LastUpdatedTimestampDerived
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[36]);
        }
    }
    public bool LastUpdatedTimestampDerived_IsNull
    {
        get
        {
            return IsNull(36);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a653ed6b2323468986cb6b49af9d1cf0.Properties.Settings.get_Default():SC_a653ed6b2323468986cb6b49af9d1cf0.Properties.Sett" +
    "ings")]

namespace SC_a653ed6b2323468986cb6b49af9d1cf0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a653ed6b2323468986cb6b49af9d1cf0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a653ed6b2323468986cb6b49af9d1cf0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a653ed6b2323468986cb6b49af9d1cf0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a653ed6b2323468986cb6b49af9d1cf0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a653ed6b2323468986cb6b49af9d1cf0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_a653ed6b2323468986cb6b49af9d1cf0</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_a653ed6b2323468986cb6b49af9d1cf0</msb:DisplayName>
		<msb:ProjectId>{7C9E3A3C-3297-4FC7-B0C7-C1C2077BE204}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_a653ed6b2323468986cb6b49af9d1cf0.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a653ed6b2323468986cb6b49af9d1cf0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_a653ed6b2323468986cb6b49af9d1cf0")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a653ed6b2323468986cb6b49af9d1cf0.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{51bb80d1-8ec5-48c2-ad25-05f4682b0a38}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a653ed6b2323468986cb6b49af9d1cf0</RootNamespace>
    <AssemblyName>SC_a653ed6b2323468986cb6b49af9d1cf0</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_a653ed6b2323468986cb6b49af9d1cf0" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a653ed6b2323468986cb6b49af9d1cf0.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHUFEV8AAAAAAAAAAOAAAiELAQsAADYAAAAIAAAAAAAAXlUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAARVAABXAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZDUAAAAgAAAANgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAA4AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
VQAAAAAAAEgAAAACAAUAoCsAAGQpAAABAAAAAAAAAOgqAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnN4AAAGfQEAAAQCAnN5AAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDb3YAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioAAAswAwBxAgAAAAAAAAMDbwwAAAZyEQAAcCgTAAAKLQgDbwwAAAYrARRv
DQAABgMDbxAAAAZyEQAAcCgTAAAKLQgDbxAAAAYrARRvEQAABgMDbxQAAAZyEQAAcCgTAAAKLQgD
bxQAAAYrARRvFQAABgMDbxgAAAZyEQAAcCgTAAAKLQgDbxgAAAYrARRvGQAABgMDbxwAAAZyEQAA
cCgTAAAKLQgDbxwAAAYrARRvHQAABgMDbyQAAAZyEQAAcCgTAAAKLQgDbyQAAAYrARRvJQAABgMD
bygAAAZyEQAAcCgTAAAKLQgDbygAAAYrARRvKQAABgMDbywAAAZyEQAAcCgTAAAKLQgDbywAAAYr
ARRvLQAABgMDbzQAAAZyEQAAcCgTAAAKLQgDbzQAAAYrARRvNQAABgMDbzwAAAZyEQAAcCgTAAAK
LQgDbzwAAAYrARRvPQAABgMDb0AAAAZyEQAAcCgTAAAKLQgDb0AAAAYrARRvQQAABgMDb0QAAAZy
EQAAcCgTAAAKLQgDb0QAAAYrARRvRQAABgMDb0gAAAZyEQAAcCgTAAAKLQgDb0gAAAYrARRvSQAA
BgMDb0wAAAZyEQAAcCgTAAAKLQgDb0wAAAYrARRvTQAABt2dAAAAJgNyFQAAcG8NAAAGA3IVAABw
bxEAAAYDchUAAHBvFQAABgNyFQAAcG8ZAAAGA3IVAABwbx0AAAYDchUAAHBvJQAABgNyFQAAcG8p
AAAGA3IVAABwby0AAAYDchUAAHBvNQAABgNyFQAAcG89AAAGA3IVAABwb0EAAAYDchUAAHBvRQAA
BgNyFQAAcG9JAAAGA3IVAABwb00AAAbeACoAAABBHAAAAAAAAAAAAADTAQAA0wEAAJ0AAAAaAAAB
HgIoAQAABioqAgMEBSgUAAAKKlICexUAAAoCexYAAAoWlG8XAAAKKiICFigYAAAKKlICexUAAAoC
exYAAAoXlG8ZAAAKKiYCFwMoGgAACioiAhcoGAAACipaAywIAhcoGwAACipyIQAAcHMcAAAKelIC
exUAAAoCexYAAAoYlG8ZAAAKKiYCGAMoGgAACioiAhgoGAAACipaAywIAhgoGwAACipyIQAAcHMc
AAAKelICexUAAAoCexYAAAoZlG8ZAAAKKiYCGQMoGgAACioiAhkoGAAACipaAywIAhkoGwAACipy
IQAAcHMcAAAKelICexUAAAoCexYAAAoalG8ZAAAKKiYCGgMoGgAACioiAhooGAAACipaAywIAhoo
GwAACipyIQAAcHMcAAAKelICexUAAAoCexYAAAoblG8ZAAAKKiYCGwMoGgAACioiAhsoGAAACipa
AywIAhsoGwAACipyIQAAcHMcAAAKelICexUAAAoCexYAAAoclG8dAAAKKjoCHAOMBwAAASgaAAAK
KiICHCgYAAAKKloDLAgCHCgbAAAKKnIhAABwcxwAAAp6UgJ7FQAACgJ7FgAACh2UbxkAAAoqJgId
AygaAAAKKiICHSgYAAAKKloDLAgCHSgbAAAKKnIhAABwcxwAAAp6UgJ7FQAACgJ7FgAACh6UbxkA
AAoqJgIeAygaAAAKKiICHigYAAAKKloDLAgCHigbAAAKKnIhAABwcxwAAAp6VgJ7FQAACgJ7FgAA
Ch8JlG8ZAAAKKioCHwkDKBoAAAoqJgIfCSgYAAAKKl4DLAkCHwkoGwAACipyIQAAcHMcAAAKelYC
exUAAAoCexYAAAofCpRvFwAACio+Ah8KA4wcAAABKBoAAAoqJgIfCigYAAAKKl4DLAkCHwooGwAA
CipyIQAAcHMcAAAKelYCexUAAAoCexYAAAofC5RvGQAACioqAh8LAygaAAAKKiYCHwsoGAAACipe
AywJAh8LKBsAAAoqciEAAHBzHAAACnpWAnsVAAAKAnsWAAAKHwyUbx4AAAoqPgIfDAOMCAAAASga
AAAKKiYCHwwoGAAACipeAywJAh8MKBsAAAoqciEAAHBzHAAACnpWAnsVAAAKAnsWAAAKHw2UbxkA
AAoqKgIfDQMoGgAACiomAh8NKBgAAAoqXgMsCQIfDSgbAAAKKnIhAABwcxwAAAp6VgJ7FQAACgJ7
FgAACh8OlG8ZAAAKKioCHw4DKBoAAAoqJgIfDigYAAAKKl4DLAkCHw4oGwAACipyIQAAcHMcAAAK
elYCexUAAAoCexYAAAofD5RvGQAACioqAh8PAygaAAAKKiYCHw8oGAAACipeAywJAh8PKBsAAAoq
ciEAAHBzHAAACnpWAnsVAAAKAnsWAAAKHxCUbxkAAAoqKgIfEAMoGgAACiomAh8QKBgAAAoqXgMs
CQIfECgbAAAKKnIhAABwcxwAAAp6VgJ7FQAACgJ7FgAACh8RlG8ZAAAKKioCHxEDKBoAAAoqJgIf
ESgYAAAKKl4DLAkCHxEoGwAACipyIQAAcHMcAAAKelYCexUAAAoCexYAAAofEpRvFwAACiomAh8S
KBgAAAoqVgJ7FQAACgJ7FgAACh8TlG8ZAAAKKiYCHxMoGAAACipWAnsVAAAKAnsWAAAKHxSUbxkA
AAoqJgIfFCgYAAAKKlYCexUAAAoCexYAAAofFZRvGQAACiomAh8VKBgAAAoqVgJ7FQAACgJ7FgAA
Ch8WlG8ZAAAKKiYCHxYoGAAACipWAnsVAAAKAnsWAAAKHxeUbxkAAAoqJgIfFygYAAAKKlYCexUA
AAoCexYAAAofGJRvHQAACiomAh8YKBgAAAoqVgJ7FQAACgJ7FgAACh8ZlG8ZAAAKKiYCHxkoGAAA
CipWAnsVAAAKAnsWAAAKHxqUbxkAAAoqJgIfGigYAAAKKlYCexUAAAoCexYAAAofG5RvGQAACiom
Ah8bKBgAAAoqVgJ7FQAACgJ7FgAACh8clG8XAAAKKiYCHxwoGAAACipWAnsVAAAKAnsWAAAKHx2U
bxkAAAoqJgIfHSgYAAAKKlYCexUAAAoCexYAAAofHpRvHgAACiomAh8eKBgAAAoqVgJ7FQAACgJ7
FgAACh8flG8ZAAAKKiYCHx8oGAAACipWAnsVAAAKAnsWAAAKHyCUbxkAAAoqJgIfICgYAAAKKlYC
exUAAAoCexYAAAofIZRvGQAACiomAh8hKBgAAAoqVgJ7FQAACgJ7FgAACh8ilG8ZAAAKKiYCHyIo
GAAACipWAnsVAAAKAnsWAAAKHyOUbxkAAAoqJgIfIygYAAAKKlYCexUAAAoCexYAAAofJJRvHwAA
CiomAh8kKBgAAAoqHgIoIAAACioeAighAAAKKjoCKCIAAAoCA30DAAAEKjoCKCIAAAoCA30EAAAE
Kh4CKCIAAAoqAAAAEzACAC0AAAABAAARfgUAAAQtIHK+AABw0AcAAAIoJAAACm8lAAAKcyYAAAoK
BoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKi5zfwAABoAHAAAEKh4CKCkAAAoqALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAkEAAAI34AAJAQ
AAC0FQAAI1N0cmluZ3MAAAAARCYAADABAAAjVVMAdCcAABAAAAAjR1VJRAAAAIQnAADgAQAAI0Js
b2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAABAAAAIwAAAAgAAAAHAAAAgAAAAC8AAAApAAAA
DwAAAAEAAAADAAAATQAAAHAAAAABAAAABAAAAAEAAAAAAAoAAQAAAAAABgDuAM0ABgD+AM0ACgAb
ARQBDgA3ASIBEgB2Ac0ABgCFAc0ACgCpAxQBCgB9BRQBCgAhERARCgBSET0RCgArEhESCgBWEkQS
CgBtEkQSCgCKEkQSCgCpEkQSCgDCEkQSCgDbEkQSCgD2EkQSCgARE0QSCgAqE0QSCgBjE0MTCgCD
E0MTCgDFExQBCgDMExQBBgD1E80ACgAoFBQBCgBdFBQBCgCCFBQBCgCvFJwUCgDMFBQBCgDRFBQB
CgD1FEQSDgAhFQsVDgA6FQsVCgBPFUMTAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABA
AAAACAADAAUAAQAQAEsAAAAJAAMACQABABAAWAAAAA0AAwB4AAEAEABkAAAADQAEAHkAAAAQAG4A
eAANAAUAegAAARAApwB4ABEABwB+AAYAWAATAAYAZAAXAAEAABGAAAEAABGAABEAMRGKABEAXhGO
ABEAohGsAFAgAAAAAIYYTwEbAAEAcCAAAAAAxgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYB
tAEpAAYAqiAAAAAAxgDLARsABwCyIAAAAADGANYBGwAHALwgAAAAAMYAtAEpAAcAWCMAAAAAhhhP
ARsACABgIwAAAACGGE8BLwAIAGsjAAAAAIYI4gE5AAsAgCMAAAAAhgjpAT0ACwCJIwAAAACGCPcB
QQALAJ4jAAAAAIYIAgJFAAsAqCMAAAAAhggNAj0ADACxIwAAAACGCB8CSgAMAMgjAAAAAIYIMQJB
AA0A3SMAAAAAhghLAkUADQDnIwAAAACGCGUCPQAOAPAjAAAAAIYIhgJKAA4AByQAAAAAhginAkEA
DwAcJAAAAACGCLoCRQAPACYkAAAAAIYIzQI9ABAALyQAAAAAhgjnAkoAEABGJAAAAACGCAEDQQAR
AFskAAAAAIYIEANFABEAZSQAAAAAhggfAz0AEgBuJAAAAACGCDUDSgASAIUkAAAAAIYISwNBABMA
miQAAAAAhghfA0UAEwCkJAAAAACGCHMDPQAUAK0kAAAAAIYIjgNKABQAxCQAAAAAhgixA08AFQDZ
JAAAAACGCMEDVAAVAOgkAAAAAIYI0QM9ABYA8SQAAAAAhgjoA0oAFgAIJQAAAACGCP8DQQAXAB0l
AAAAAIYIDgRFABcAJyUAAAAAhggdBD0AGAAwJQAAAACGCDMESgAYAEclAAAAAIYISQRBABkAXCUA
AAAAhghYBEUAGQBmJQAAAACGCGcEPQAaAG8lAAAAAIYIfQRKABoAhiUAAAAAhgiTBEEAGwCcJQAA
AACGCKcERQAbAKclAAAAAIYIuwQ9ABwAsSUAAAAAhgjWBEoAHADJJQAAAACGCPEEOQAdAN8lAAAA
AIYIAAVaAB0A7yUAAAAAhggPBT0AHgD5JQAAAACGCCUFSgAeABEmAAAAAIYIOwVBAB8AJyYAAAAA
hghIBUUAHwAyJgAAAACGCFUFPQAgADwmAAAAAIYIaQVKACAAVCYAAAAAhgiGBV8AIQBqJgAAAACG
CJQFZAAhAHomAAAAAIYIogU9ACIAhCYAAAAAhgi3BUoAIgCcJgAAAACGCMwFQQAjALImAAAAAIYI
3QVFACMAvSYAAAAAhgjuBT0AJADHJgAAAACGCAYGSgAkAN8mAAAAAIYIHgZBACUA9SYAAAAAhggs
BkUAJQAAJwAAAACGCDoGPQAmAAonAAAAAIYITwZKACYAIicAAAAAhghkBkEAJwA4JwAAAACGCHkG
RQAnAEMnAAAAAIYIjgY9ACgATScAAAAAhgiqBkoAKABlJwAAAACGCMYGQQApAHsnAAAAAIYI4QZF
ACkAhicAAAAAhgj8Bj0AKgCQJwAAAACGCB4HSgAqAKgnAAAAAIYIQAdBACsAvicAAAAAhghOB0UA
KwDJJwAAAACGCFwHPQAsANMnAAAAAIYIcQdKACwA6ycAAAAAhgiGBzkALQABKAAAAACGCJkHPQAt
AAsoAAAAAIYIswdBAC0AISgAAAAAhgjDBz0ALQArKAAAAACGCNoHQQAtAEEoAAAAAIYI+Qc9AC0A
SygAAAAAhggfCEEALQBhKAAAAACGCDcIPQAtAGsoAAAAAIYIVghBAC0AgSgAAAAAhghqCD0ALQCL
KAAAAACGCIUIQQAtAKEoAAAAAIYIngg9AC0AqygAAAAAhgi+CE8ALQDBKAAAAACGCNMIPQAtAMso
AAAAAIYI7whBAC0A4SgAAAAAhggDCT0ALQDrKAAAAACGCB4JQQAtAAEpAAAAAIYIMgk9AC0ACykA
AAAAhghNCUEALQAhKQAAAACGCGYJPQAtACspAAAAAIYIhgk5AC0AQSkAAAAAhgiaCT0ALQBLKQAA
AACGCLUJQQAtAGEpAAAAAIYIxwk9AC0AaykAAAAAhgjgCV8ALQCBKQAAAACGCPMJPQAtAIspAAAA
AIYIDQpBAC0AoSkAAAAAhggjCj0ALQCrKQAAAACGCEAKQQAtAMEpAAAAAIYIUwo9AC0AyykAAAAA
hghtCkEALQDhKQAAAACGCIcKPQAtAOspAAAAAIYIqApBAC0AASoAAAAAhgjICj0ALQALKgAAAACG
CO8KQQAtACEqAAAAAIYIAgs9AC0AKyoAAAAAhggcC18ALQBBKgAAAACGCDwLPQAtAEsqAAAAAIYA
Yws9AC0AUyoAAAAAhgBrCz0ALQBbKgAAAACGGE8BhAAtAGoqAAAAAIYYTwGEAC4AeSoAAAAAgxhP
ARsALwCEKgAAAACTCG4RkgAvAL0qAAAAAJMIghGXAC8AxCoAAAAAkwiOEZwALwDMKgAAAACWCLIR
sAAwAN8qAAAAAIYYTwEbADAA0yoAAAAAkRhqFSUBMAAAAAEAxhEAAAIAzhEAAAMA2BEAAAQA3xEA
AAEA2BEAAAEA6REAAAEA6REAAAEA2BEAAAIA7REAAAMA3xEAAAEAARIAAAEAARIAAAEAARIAAAEA
ARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIA
AAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEA
ARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIAAAEAARIA
AAEAARIAAAEAARIAAAEABxIAAAEABxIAAAEAARJZAE8BRQBhAE8BRQBpAE8BRQBxAE8BRQB5AE8B
RQCBAE8BRQCJAE8BRQCRAE8BRQCZAE8BRQChAE8BRQCpAE8BWgCxAE8BGwAJAE8BGwC5AN0TugAJ
AOQTwQDJAE8BGwAJAMsBGwAJANYBGwC5ABwUzAARAE8BLwARANgR0gARAO0R1gApADIU2gARADsU
3wApAEIU5AARAEwU6QARAFUUWgDZAE8BRQApAHcU7wApAIgU9QApAJAU9QARAGMLPQARAGsLPQAZ
AE8BGwDpAE8BGwDxAOMU+wDxAP4UAgFJAE8BCAEJAU8BFQEZAU8BGwAhAE8BGwAuABsAmgEuAGMA
wAEuAAsAKQEuABMAcQEuACMAmgEuACsAmgEuADMAcQEuADsAoAEuAEMAmgEuAFsAtwFjAIMAxwDh
AEMBxwDjABsBxwBpCTsBHAGJCTsBHAEQAQQAAQAHAEsACABNAAAAdwtqAAAAegtuAAAAhAtyAAAA
iwtuAAAAmQtyAAAArwtuAAAAzAtyAAAA2wtuAAAA8QtyAAAA/AtuAAAADgxyAAAAHgxuAAAANQx2
AAAAQQxuAAAAVAxyAAAAXwxuAAAAcQxyAAAAfAxuAAAAjgxyAAAAngxuAAAAtQxqAAAAwAxuAAAA
0gxyAAAA2wxuAAAA6wx7AAAA9QxuAAAABg1yAAAAEw1uAAAAJw1yAAAAMQ1uAAAAQg1yAAAAUw1u
AAAAaw1yAAAAgg1uAAAAoA1yAAAAqg1uAAAAuw1qAAAAyg1uAAAA4A1yAAAA7A1uAAAA/w1yAAAA
Gg5uAAAAPA5yAAAAUA5uAAAAaw5yAAAAew5uAAAAkg5yAAAApw5uAAAAww52AAAA1A5uAAAA7A5y
AAAA/A5uAAAAEw9yAAAAIw9uAAAAOg9yAAAATw9uAAAAaw9qAAAAew9uAAAAkg9yAAAAoA9uAAAA
tQ97AAAAxA9uAAAA2g9yAAAA7A9uAAAABRByAAAAFBBuAAAAKhByAAAAQBBuAAAAXRByAAAAeRBu
AAAAnBByAAAAqxBuAAAAwRB7AAAA3RBuAAAAIRGiAAAAmhGnAAAAvhG1AAIACgADAAIACwAFAAIA
DAAHAAEADQAHAAEADwAJAAIADgAJAAIAEAALAAEAEQALAAIAEgANAAEAEwANAAIAFAAPAAEAFQAP
AAIAFgARAAEAFwARAAEAGQATAAIAGAATAAIAGgAVAAEAGwAVAAEAHQAXAAIAHAAXAAIAHgAZAAEA
HwAZAAIAIAAbAAEAIQAbAAIAIgAdAAEAIwAdAAIAJAAfAAEAJQAfAAEAJwAhAAIAJgAhAAIAKAAj
AAEAKQAjAAEAKwAlAAIAKgAlAAIALAAnAAEALQAnAAIALgApAAEALwApAAIAMAArAAEAMQArAAIA
MgAtAAEAMwAtAAEANQAvAAIANAAvAAIANgAxAAEANwAxAAEAOQAzAAIAOAAzAAIAOgA1AAEAOwA1
AAIAPAA3AAEAPQA3AAIAPgA5AAEAPwA5AAEAQQA7AAIAQAA7AAEAQwA9AAIAQgA9AAIARAA/AAEA
RQA/AAEARwBBAAIARgBBAAIASABDAAEASQBDAAIASgBFAAEASwBFAAIATABHAAEATQBHAAIATgBJ
AAEATwBJAAIAUABLAAIAUQBNAAIAUgBPAAIAUwBRAAIAVABTAAIAVQBVAAIAVgBXAAIAVwBZAAIA
WABbAAIAWQBdAAIAWgBfAAIAWwBhAAIAXABjAAIAXQBlAAIAXgBnAAIAXwBpAAIAYABrAAIAYQBt
AAIAYgBvAAIAYwBxAAIAZABzAAIAZQB1AAIAZgB3AAIAZwB5AAIAaAB7AAIAaQB9AAIAagB/AAIA
awCBAAIAbACDAAIAbQCFAAIAbgCHAAIAbwCJAAIAcACLAAIAcQCNAAIAcgCPAAIAcwCRAAIAdACT
AAIAdQCVAAIAewCXAAIAfACZAAEAfQCZAAIAfgCbAASAAAABAAAATh1SkwAAAAAAAKETAAAMAAAA
AAAAAAAAAAABALAAAAAAAAQAAAAAAAAAAAAAAAoACwEAAAAABAAAAAAAAAAAAAAACgAUAQAAAAAM
AAAAAAAAAAAAAAABAFUBAAAAAAAAAAABAAAAcRUAAAAAADxNb2R1bGU+AFNDX2E2NTNlZDZiMjMy
MzQ2ODk4NmNiNmI0OWFmOWQxY2YwLmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4ASW5wdXQw
QnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfYTY1M2VkNmIyMzIzNDY4
OTg2Y2I2YjQ5YWY5ZDFjZjAuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVy
LlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBvbmVu
dABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlv
bgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVs
aW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1dDBf
UHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQBnZXRfSUQAZ2V0X0lEX0lzTnVsbABnZXRfYWdlbmN5AHNldF9hZ2VuY3kAZ2V0X2FnZW5jeV9J
c051bGwAc2V0X2FnZW5jeV9Jc051bGwAZ2V0X2Fzc29jaWF0ZWRwcmltZXZlbmRvcgBzZXRfYXNz
b2NpYXRlZHByaW1ldmVuZG9yAGdldF9hc3NvY2lhdGVkcHJpbWV2ZW5kb3JfSXNOdWxsAHNldF9h
c3NvY2lhdGVkcHJpbWV2ZW5kb3JfSXNOdWxsAGdldF9jYXBpdGFscHJvamVjdABzZXRfY2FwaXRh
bHByb2plY3QAZ2V0X2NhcGl0YWxwcm9qZWN0X0lzTnVsbABzZXRfY2FwaXRhbHByb2plY3RfSXNO
dWxsAGdldF9jb250cmFjdGlkAHNldF9jb250cmFjdGlkAGdldF9jb250cmFjdGlkX0lzTnVsbABz
ZXRfY29udHJhY3RpZF9Jc051bGwAZ2V0X2NvbnRyYWN0cHVycG9zZQBzZXRfY29udHJhY3RwdXJw
b3NlAGdldF9jb250cmFjdHB1cnBvc2VfSXNOdWxsAHNldF9jb250cmFjdHB1cnBvc2VfSXNOdWxs
AERlY2ltYWwAZ2V0X2NoZWNrYW1vdW50AHNldF9jaGVja2Ftb3VudABnZXRfY2hlY2thbW91bnRf
SXNOdWxsAHNldF9jaGVja2Ftb3VudF9Jc051bGwAZ2V0X2RlcGFydG1lbnQAc2V0X2RlcGFydG1l
bnQAZ2V0X2RlcGFydG1lbnRfSXNOdWxsAHNldF9kZXBhcnRtZW50X0lzTnVsbABnZXRfZG9jdW1l
bnRpZABzZXRfZG9jdW1lbnRpZABnZXRfZG9jdW1lbnRpZF9Jc051bGwAc2V0X2RvY3VtZW50aWRf
SXNOdWxsAGdldF9leHBlbnNlY2F0ZWdvcnkAc2V0X2V4cGVuc2VjYXRlZ29yeQBnZXRfZXhwZW5z
ZWNhdGVnb3J5X0lzTnVsbABzZXRfZXhwZW5zZWNhdGVnb3J5X0lzTnVsbABnZXRfZmlzY2FseWVh
cgBzZXRfZmlzY2FseWVhcgBnZXRfZmlzY2FseWVhcl9Jc051bGwAc2V0X2Zpc2NhbHllYXJfSXNO
dWxsAGdldF9pbmR1c3RyeQBzZXRfaW5kdXN0cnkAZ2V0X2luZHVzdHJ5X0lzTnVsbABzZXRfaW5k
dXN0cnlfSXNOdWxsAERhdGVUaW1lAGdldF9pc3N1ZWRhdGUAc2V0X2lzc3VlZGF0ZQBnZXRfaXNz
dWVkYXRlX0lzTnVsbABzZXRfaXNzdWVkYXRlX0lzTnVsbABnZXRfbXdiZWNhdGVnb3J5AHNldF9t
d2JlY2F0ZWdvcnkAZ2V0X213YmVjYXRlZ29yeV9Jc051bGwAc2V0X213YmVjYXRlZ29yeV9Jc051
bGwAZ2V0X3BheWVlbmFtZQBzZXRfcGF5ZWVuYW1lAGdldF9wYXllZW5hbWVfSXNOdWxsAHNldF9w
YXllZW5hbWVfSXNOdWxsAGdldF9zcGVuZGluZ2NhdGVnb3J5AHNldF9zcGVuZGluZ2NhdGVnb3J5
AGdldF9zcGVuZGluZ2NhdGVnb3J5X0lzTnVsbABzZXRfc3BlbmRpbmdjYXRlZ29yeV9Jc051bGwA
Z2V0X3N1YmNvbnRyYWN0cmVmZXJlbmNlaWQAc2V0X3N1YmNvbnRyYWN0cmVmZXJlbmNlaWQAZ2V0
X3N1YmNvbnRyYWN0cmVmZXJlbmNlaWRfSXNOdWxsAHNldF9zdWJjb250cmFjdHJlZmVyZW5jZWlk
X0lzTnVsbABnZXRfc3VidmVuZG9yAHNldF9zdWJ2ZW5kb3IAZ2V0X3N1YnZlbmRvcl9Jc051bGwA
c2V0X3N1YnZlbmRvcl9Jc051bGwAZ2V0X1N0YWdpbmdJREZJTkFMAGdldF9TdGFnaW5nSURGSU5B
TF9Jc051bGwAZ2V0X2FnZW5jeUZJTkFMAGdldF9hZ2VuY3lGSU5BTF9Jc051bGwAZ2V0X2Fzc29j
aWF0ZWRwcmltZXZlbmRvckZJTkFMAGdldF9hc3NvY2lhdGVkcHJpbWV2ZW5kb3JGSU5BTF9Jc051
bGwAZ2V0X2NhcGl0YWxwcm9qZWN0RklOQUwAZ2V0X2NhcGl0YWxwcm9qZWN0RklOQUxfSXNOdWxs
AGdldF9jb250cmFjdGlkRklOQUwAZ2V0X2NvbnRyYWN0aWRGSU5BTF9Jc051bGwAZ2V0X2NvbnRy
YWN0cHVycG9zZUZJTkFMAGdldF9jb250cmFjdHB1cnBvc2VGSU5BTF9Jc051bGwAZ2V0X2NoZWNr
YW1vdW50RklOQUwAZ2V0X2NoZWNrYW1vdW50RklOQUxfSXNOdWxsAGdldF9kZXBhcnRtZW50RklO
QUwAZ2V0X2RlcGFydG1lbnRGSU5BTF9Jc051bGwAZ2V0X2RvY3VtZW50aWRGSU5BTABnZXRfZG9j
dW1lbnRpZEZJTkFMX0lzTnVsbABnZXRfZXhwZW5zZWNhdGVnb3J5RklOQUwAZ2V0X2V4cGVuc2Vj
YXRlZ29yeUZJTkFMX0lzTnVsbABnZXRfZmlzY2FseWVhckZJTkFMAGdldF9maXNjYWx5ZWFyRklO
QUxfSXNOdWxsAGdldF9pbmR1c3RyeUZJTkFMAGdldF9pbmR1c3RyeUZJTkFMX0lzTnVsbABnZXRf
aXNzdWVkYXRlRklOQUwAZ2V0X2lzc3VlZGF0ZUZJTkFMX0lzTnVsbABnZXRfbXdiZWNhdGVnb3J5
RklOQUwAZ2V0X213YmVjYXRlZ29yeUZJTkFMX0lzTnVsbABnZXRfcGF5ZWVuYW1lRklOQUwAZ2V0
X3BheWVlbmFtZUZJTkFMX0lzTnVsbABnZXRfc3BlbmRpbmdjYXRlZ29yeUZJTkFMAGdldF9zcGVu
ZGluZ2NhdGVnb3J5RklOQUxfSXNOdWxsAGdldF9zdWJjb250cmFjdHJlZmVyZW5jZWlkRklOQUwA
Z2V0X3N1YmNvbnRyYWN0cmVmZXJlbmNlaWRGSU5BTF9Jc051bGwAZ2V0X3N1YnZlbmRvckZJTkFM
AGdldF9zdWJ2ZW5kb3JGSU5BTF9Jc051bGwAZ2V0X0xhc3RVcGRhdGVkVGltZXN0YW1wRGVyaXZl
ZABnZXRfTGFzdFVwZGF0ZWRUaW1lc3RhbXBEZXJpdmVkX0lzTnVsbABOZXh0Um93AEVuZE9mUm93
c2V0AElEAElEX0lzTnVsbABhZ2VuY3kAYWdlbmN5X0lzTnVsbABhc3NvY2lhdGVkcHJpbWV2ZW5k
b3IAYXNzb2NpYXRlZHByaW1ldmVuZG9yX0lzTnVsbABjYXBpdGFscHJvamVjdABjYXBpdGFscHJv
amVjdF9Jc051bGwAY29udHJhY3RpZABjb250cmFjdGlkX0lzTnVsbABjb250cmFjdHB1cnBvc2UA
Y29udHJhY3RwdXJwb3NlX0lzTnVsbABjaGVja2Ftb3VudABjaGVja2Ftb3VudF9Jc051bGwAZGVw
YXJ0bWVudABkZXBhcnRtZW50X0lzTnVsbABkb2N1bWVudGlkAGRvY3VtZW50aWRfSXNOdWxsAGV4
cGVuc2VjYXRlZ29yeQBleHBlbnNlY2F0ZWdvcnlfSXNOdWxsAGZpc2NhbHllYXIAZmlzY2FseWVh
cl9Jc051bGwAaW5kdXN0cnkAaW5kdXN0cnlfSXNOdWxsAGlzc3VlZGF0ZQBpc3N1ZWRhdGVfSXNO
dWxsAG13YmVjYXRlZ29yeQBtd2JlY2F0ZWdvcnlfSXNOdWxsAHBheWVlbmFtZQBwYXllZW5hbWVf
SXNOdWxsAHNwZW5kaW5nY2F0ZWdvcnkAc3BlbmRpbmdjYXRlZ29yeV9Jc051bGwAc3ViY29udHJh
Y3RyZWZlcmVuY2VpZABzdWJjb250cmFjdHJlZmVyZW5jZWlkX0lzTnVsbABzdWJ2ZW5kb3IAc3Vi
dmVuZG9yX0lzTnVsbABTdGFnaW5nSURGSU5BTABTdGFnaW5nSURGSU5BTF9Jc051bGwAYWdlbmN5
RklOQUwAYWdlbmN5RklOQUxfSXNOdWxsAGFzc29jaWF0ZWRwcmltZXZlbmRvckZJTkFMAGFzc29j
aWF0ZWRwcmltZXZlbmRvckZJTkFMX0lzTnVsbABjYXBpdGFscHJvamVjdEZJTkFMAGNhcGl0YWxw
cm9qZWN0RklOQUxfSXNOdWxsAGNvbnRyYWN0aWRGSU5BTABjb250cmFjdGlkRklOQUxfSXNOdWxs
AGNvbnRyYWN0cHVycG9zZUZJTkFMAGNvbnRyYWN0cHVycG9zZUZJTkFMX0lzTnVsbABjaGVja2Ft
b3VudEZJTkFMAGNoZWNrYW1vdW50RklOQUxfSXNOdWxsAGRlcGFydG1lbnRGSU5BTABkZXBhcnRt
ZW50RklOQUxfSXNOdWxsAGRvY3VtZW50aWRGSU5BTABkb2N1bWVudGlkRklOQUxfSXNOdWxsAGV4
cGVuc2VjYXRlZ29yeUZJTkFMAGV4cGVuc2VjYXRlZ29yeUZJTkFMX0lzTnVsbABmaXNjYWx5ZWFy
RklOQUwAZmlzY2FseWVhckZJTkFMX0lzTnVsbABpbmR1c3RyeUZJTkFMAGluZHVzdHJ5RklOQUxf
SXNOdWxsAGlzc3VlZGF0ZUZJTkFMAGlzc3VlZGF0ZUZJTkFMX0lzTnVsbABtd2JlY2F0ZWdvcnlG
SU5BTABtd2JlY2F0ZWdvcnlGSU5BTF9Jc051bGwAcGF5ZWVuYW1lRklOQUwAcGF5ZWVuYW1lRklO
QUxfSXNOdWxsAHNwZW5kaW5nY2F0ZWdvcnlGSU5BTABzcGVuZGluZ2NhdGVnb3J5RklOQUxfSXNO
dWxsAHN1YmNvbnRyYWN0cmVmZXJlbmNlaWRGSU5BTABzdWJjb250cmFjdHJlZmVyZW5jZWlkRklO
QUxfSXNOdWxsAHN1YnZlbmRvckZJTkFMAHN1YnZlbmRvckZJTkFMX0lzTnVsbABMYXN0VXBkYXRl
ZFRpbWVzdGFtcERlcml2ZWQATGFzdFVwZGF0ZWRUaW1lc3RhbXBEZXJpdmVkX0lzTnVsbABQYXJl
bnRDb21wb25lbnQAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4A
U3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNv
dXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFu
Y2UAZ2V0X0RlZmF1bHQARGVmYXVsdABJbnB1dElEAElucHV0TmFtZQBCdWZmZXIAT3V0cHV0TWFw
AFJvdwBCdWZmZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJp
YnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfYTY1M2VkNmIyMzIz
NDY4OTg2Y2I2YjQ5YWY5ZDFjZjAAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENv
bHVtbkluZGV4ZXMAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAb3BfRXF1
YWxpdHkARXhjZXB0aW9uAEdldEludDMyAElzTnVsbABHZXRTdHJpbmcAc2V0X0l0ZW0AU2V0TnVs
bABJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAEdldERlY2ltYWwASW50MzIAR2V0RGF0ZQBHZXRE
YXRlVGltZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBU
eXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3Nl
bWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ19hNjUz
ZWQ2YjIzMjM0Njg5ODZjYjZiNDlhZjlkMWNmMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMAAA9JAG4AcAB1AHQAIAAwAAADLQABC0UAUgBSAE8AUgAAgJtJAHMATgB1AGwAbAAgAHAAcgBv
AHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUA
LgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBt
AG4AIABpAG4AcwB0AGUAYQBkAC4AAHFTAEMAXwBhADYANQAzAGUAZAA2AGIAMgAzADIAMwA0ADYA
OAA5ADgANgBjAGIANgBiADQAOQBhAGYAOQBkADEAYwBmADAALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAAAKl6qN0jqpNr37NrwBpCXkACImEXc2AgMyRCLd6XFYZNOCJ
AwYSFAMGEhgDIAABCSAEAQgOEhUSGQUgAQESEAkgAwESFR0IEhkDIAAIAyAAAgMgAA4EIAEBDgQg
AQECBCAAER0FIAEBER0EIAEBCAQgABEhBSABAREhAygACAMoAAIDKAAOBCgAER0EKAARIQMGEgUF
IAEBEgUDBhIlAwYSKQQAABIlBAAAEikFAAEBEikECAASJQQIABIpAwYSIAQAABIgBAgAEiAGIAIC
DhFhBSABHQgIBAEAAAAFAAICDg4DBhIVAwYdCAQgAQgIBCABAggEIAEOCAUgAgEIHAUgAREdCAUg
AREhCAYAARJ5EX0FIAASgIEHIAIBDhKAgQQHARIlBiABARGAiQgBAAIAAAAAAAMAAAFHAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJh
bWV3b3JrIDQoAQAjU0NfYTY1M2VkNmIyMzIzNDY4OTg2Y2I2YjQ5YWY5ZDFjZjAAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAyMAAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhy
b3dzAQAsVQAAAAAAAAAAAABOVQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQFUAAAAAAAAAAAAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMAAAAAAAAA
AAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAFKT
Th0AAAEAUpNOHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBADAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAAAHAAJAAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBhADYANQAzAGUAZAA2AGIA
MgAzADIAMwA0ADYAOAA5ADgANgBjAGIANgBiADQAOQBhAGYAOQBkADEAYwBmADAAAABAAA8AAQBG
AGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA1ADAAMgAuADMANwA3ADEANAAAAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBhADYANQAzAGUAZAA2AGIAMgAz
ADIAMwA0ADYAOAA5ADgANgBjAGIANgBiADQAOQBhAGYAOQBkADEAYwBmADAALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADIAMAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMA
XwBhADYANQAzAGUAZAA2AGIAMgAzADIAMwA0ADYAOAA5ADgANgBjAGIANgBiADQAOQBhAGYAOQBk
ADEAYwBmADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8A
YQA2ADUAMwBlAGQANgBiADIAMwAyADMANAA2ADgAOQA4ADYAYwBiADYAYgA0ADkAYQBmADkAZAAx
AGMAZgAwAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADUA
MAAyAC4AMwA3ADcAMQA0AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA3ADUAMAAyAC4AMwA3ADcAMQA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAGA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_a653ed6b2323468986cb6b49af9d1cf0</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">68d9f870c1ce8057fbf021ce5c1aaba3</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">ec6d828b7716cbbea0232e75c677d84cc05d255c</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[associated_prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[capital_project]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[check_amount]"
                      cachedDataType="cy"
                      cachedName="check_amount"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[department]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[document_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[expense_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[fiscal_year]"
                      cachedDataType="i4"
                      cachedName="fiscal_year"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[issue_date]"
                      cachedDataType="dbDate"
                      cachedName="issue_date"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[payee_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[spending_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[StagingID_FINAL]"
                      cachedDataType="i4"
                      cachedName="StagingID_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[StagingID_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[agency_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[associated_prime_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[capital_project_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[contract_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[contract_purpose_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[check_amount_FINAL]"
                      cachedDataType="cy"
                      cachedName="check_amount_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[check_amount_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[department_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[document_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[expense_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[fiscal_year_FINAL]"
                      cachedDataType="i4"
                      cachedName="fiscal_year_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[fiscal_year_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[industry_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[issue_date_FINAL]"
                      cachedDataType="dbDate"
                      cachedName="issue_date_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[issue_date_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[mwbe_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[payee_name_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[spending_category_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_contract_reference_id_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[sub_vendor_FINAL]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor_FINAL"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor_FINAL]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Staging - Spending_Staging Sorted ASC"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Spending_Staging]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT
       [ID]
      ,[agency]
      ,[associated_prime_vendor]
      ,[capital_project]
      ,[contract_id]
      ,[contract_purpose]
      ,[check_amount]
      ,[department]
      ,[document_id]
      ,[expense_category]
      ,[fiscal_year]
      ,[industry]
      ,[issue_date]
      ,[mwbe_category]
      ,[payee_name]
      ,[spending_category]
      ,[sub_contract_reference_id]
      ,[sub_vendor]
  FROM [dbo].[Spending_Staging]
ORDER BY
     [ID] ASC</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output]"
                  isSorted="true"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[ID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[ID]"
                      name="ID"
                      sortKeyPosition="1"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[agency]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[agency]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[agency]"
                      name="agency"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[associated_prime_vendor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[associated_prime_vendor]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[associated_prime_vendor]"
                      name="associated_prime_vendor"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[capital_project]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[capital_project]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[capital_project]"
                      name="capital_project"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_id]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_id]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_id]"
                      name="contract_id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_purpose]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_purpose]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[contract_purpose]"
                      name="contract_purpose"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[check_amount]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[check_amount]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[check_amount]"
                      name="check_amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[department]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[department]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[department]"
                      name="department"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[document_id]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[document_id]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[document_id]"
                      name="document_id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[expense_category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[expense_category]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[expense_category]"
                      name="expense_category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[fiscal_year]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[fiscal_year]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[fiscal_year]"
                      name="fiscal_year"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[industry]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[industry]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[industry]"
                      name="industry"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[issue_date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[issue_date]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[issue_date]"
                      name="issue_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[mwbe_category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[mwbe_category]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[mwbe_category]"
                      name="mwbe_category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[payee_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[payee_name]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[payee_name]"
                      name="payee_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[spending_category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[spending_category]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[spending_category]"
                      name="spending_category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_reference_id]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_contract_reference_id]"
                      name="sub_contract_reference_id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_vendor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor]"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].Columns[sub_vendor]"
                      name="sub_vendor"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[agency]"
                      dataType="wstr"
                      length="255"
                      name="agency" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[associated_prime_vendor]"
                      dataType="wstr"
                      length="255"
                      name="associated_prime_vendor" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[capital_project]"
                      dataType="wstr"
                      length="255"
                      name="capital_project" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_id]"
                      dataType="wstr"
                      length="255"
                      name="contract_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[contract_purpose]"
                      dataType="wstr"
                      length="255"
                      name="contract_purpose" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[check_amount]"
                      dataType="cy"
                      name="check_amount" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[department]"
                      dataType="wstr"
                      length="255"
                      name="department" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[document_id]"
                      dataType="wstr"
                      length="255"
                      name="document_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[expense_category]"
                      dataType="wstr"
                      length="255"
                      name="expense_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[fiscal_year]"
                      dataType="i4"
                      name="fiscal_year" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[industry]"
                      dataType="wstr"
                      length="255"
                      name="industry" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[issue_date]"
                      dataType="dbDate"
                      name="issue_date" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[mwbe_category]"
                      dataType="wstr"
                      length="255"
                      name="mwbe_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[payee_name]"
                      dataType="wstr"
                      length="255"
                      name="payee_name" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[spending_category]"
                      dataType="wstr"
                      length="255"
                      name="spending_category" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      name="sub_contract_reference_id" />
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output].ExternalColumns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      name="sub_vendor" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[agency]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[agency]"
                      name="agency" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[associated_prime_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[associated_prime_vendor]"
                      name="associated_prime_vendor" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[capital_project]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[capital_project]"
                      name="capital_project" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_id]"
                      name="contract_id" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_purpose]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[contract_purpose]"
                      name="contract_purpose" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[check_amount]"
                      dataType="cy"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[check_amount]"
                      name="check_amount" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[department]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[department]"
                      name="department" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[document_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[document_id]"
                      name="document_id" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[expense_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[expense_category]"
                      name="expense_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[fiscal_year]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[fiscal_year]"
                      name="fiscal_year" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[industry]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[industry]"
                      name="industry" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[issue_date]"
                      dataType="dbDate"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[issue_date]"
                      name="issue_date" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[mwbe_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[mwbe_category]"
                      name="mwbe_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[payee_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[payee_name]"
                      name="payee_name" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[spending_category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[spending_category]"
                      name="spending_category" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_contract_reference_id]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_contract_reference_id]"
                      name="sub_contract_reference_id" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_vendor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Error Output].Columns[sub_vendor]"
                      name="sub_vendor" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending)"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update changed records (Final - Spending)"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE
    dbo.Spending
SET
    dbo.Spending.[LastUpdatedTimestamp] = ?,
    dbo.Spending.[agency] = ?,
    dbo.Spending.[associated_prime_vendor] = ?,
    dbo.Spending.[capital_project] = ?,
    dbo.Spending.[contract_id] = ?,
    dbo.Spending.[contract_purpose] = ?,
    dbo.Spending.[check_amount] = ?,
    dbo.Spending.[department] = ?,
    dbo.Spending.[document_id] = ?,
    dbo.Spending.[expense_category] = ?,
    dbo.Spending.[fiscal_year] = ?,
    dbo.Spending.[industry] = ?,
    dbo.Spending.[issue_date] = ?,
    dbo.Spending.[mwbe_category] = ?,
    dbo.Spending.[payee_name] = ?,
    dbo.Spending.[spending_category] = ?,
    dbo.Spending.[sub_contract_reference_id] = ?,
    dbo.Spending.[sub_vendor] = ?,
    dbo.Spending.[Code] = ?,
    dbo.Spending.[Dept] = ?,
    dbo.Spending.[Registration] = ?,
    dbo.Spending.[ProjectAgency] = ?,
    dbo.Spending.[CapProj] = ?,
    dbo.Spending.[Occ] = ?
WHERE
    dbo.Spending.[StagingID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  connectionManagerRefId="Package.ConnectionManagers[DOTDEV55SQLEE03.CheckBookNYC]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[LastUpdatedTimestamp_Derived]"
                      cachedDataType="dbTimeStamp"
                      cachedName="LastUpdatedTimestamp_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output].Columns[LastUpdatedTimestamp_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[agency]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="agency"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[agency]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[capital_project]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="capital_project"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[capital_project]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[contract_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_id"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[associated_prime_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="associated_prime_vendor"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[associated_prime_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[contract_purpose]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="contract_purpose"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[contract_purpose]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[check_amount_DataTypeConverted]"
                      cachedDataType="cy"
                      cachedName="check_amount_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[check_amount_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[department]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="department"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[department]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[document_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="document_id"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[document_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[expense_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="expense_category"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[expense_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[fiscal_year_DataTypeConverted]"
                      cachedDataType="i4"
                      cachedName="fiscal_year_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[fiscal_year_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[industry]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="industry"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[industry]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[issue_date_DataTypeConverted]"
                      cachedDataType="dbDate"
                      cachedName="issue_date_DataTypeConverted"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output].Columns[issue_date_DataTypeConverted]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[mwbe_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="mwbe_category"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[mwbe_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[payee_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="payee_name"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[payee_name]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[spending_category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="spending_category"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[spending_category]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[sub_contract_reference_id]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_contract_reference_id"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_contract_reference_id]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[sub_vendor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="sub_vendor"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[sub_vendor]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[CodeSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CodeSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CodeSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[DeptSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DeptSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[DeptSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[RegistrationSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RegistrationSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_20]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[RegistrationSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_24]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[ProjectAgencySTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProjectAgencySTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_21]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[ProjectAgencySTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[CapProjSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CapProjSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_22]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[CapProjSTAGING_Derived]" />
                    <inputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].Columns[OccSTAGING_Derived]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="OccSTAGING_Derived"
                      externalMetadataColumnId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_23]"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0].Columns[OccSTAGING_Derived]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="dbTimeStamp"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="wstr"
                      length="255"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="wstr"
                      length="255"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="wstr"
                      length="255"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="wstr"
                      length="255"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="wstr"
                      length="255"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="cy"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      dataType="wstr"
                      length="255"
                      name="Param_7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      dataType="wstr"
                      length="255"
                      name="Param_8">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      dataType="wstr"
                      length="255"
                      name="Param_9">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                      dataType="i4"
                      name="Param_10">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                      dataType="wstr"
                      length="255"
                      name="Param_11">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_12]"
                      dataType="dbDate"
                      name="Param_12">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_13]"
                      dataType="wstr"
                      length="255"
                      name="Param_13">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_14]"
                      dataType="wstr"
                      length="255"
                      name="Param_14">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_15]"
                      dataType="wstr"
                      length="255"
                      name="Param_15">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_16]"
                      dataType="wstr"
                      length="255"
                      name="Param_16">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_17]"
                      dataType="wstr"
                      length="255"
                      name="Param_17">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_18]"
                      dataType="wstr"
                      length="255"
                      name="Param_18">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_19]"
                      dataType="wstr"
                      length="255"
                      name="Param_19">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_20]"
                      dataType="wstr"
                      length="255"
                      name="Param_20">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_21]"
                      dataType="wstr"
                      length="255"
                      name="Param_21">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_22]"
                      dataType="wstr"
                      length="255"
                      name="Param_22">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_23]"
                      dataType="wstr"
                      length="255"
                      name="Param_23">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input].ExternalColumns[Param_24]"
                      dataType="i4"
                      name="Param_24">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Data Conversion Output]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Inputs[Conditional Split Input]"
              name="Data Conversion Output"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Delete(StagingID_FINAL not Match any in ID_STAGING)]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending).Inputs[OLE DB Command Input]"
              name="Delete(StagingID_FINAL not Match any in ID_STAGING)"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Delete(StagingID_FINAL not Match any in ID_STAGING)]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Derived Column Output]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Outputs[Derived Column Output]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Insert(ID_STAGING not Match any in StagingID_FINAL)]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000.Inputs[OLE DB Destination Input]"
              name="Insert(ID_STAGING not Match any in StagingID_FINAL)"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Insert(ID_STAGING not Match any in StagingID_FINAL)]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Merge Join Output]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table.Inputs[Derived Column Input]"
              name="Merge Join Output"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Outputs[Merge Join Output]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Left Input]"
              name="OLE DB Source Output"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output1]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join.Inputs[Merge Join Right Input]"
              name="OLE DB Source Output"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Output 0]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Inputs[Input 0]"
              name="Output 0"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL.Outputs[Output 0]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Output 01]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion.Inputs[Data Conversion Input]"
              name="Output 0"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table.Outputs[Output 0]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Update(ID Match)]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Inputs[Conditional Split Input]"
              name="Update(ID Match)"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split.Outputs[Update(ID Match)]" />
            <path
              refId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Update-able Records]"
              endId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending).Inputs[OLE DB Command Input]"
              name="Update-able Records"
              startId="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record.Outputs[Update-able Records]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{84BEA5FC-CDB7-4517-93C7-76F1816A3966}"
      DTS:From="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{53B2893B-58DD-49FC-B92C-36767BDAC3AB}"
      DTS:From="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="515,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final"
          TopLeft="365,349" />
        <NodeLayout
          Size="527,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final"
          TopLeft="364,226" />
        <NodeLayout
          Size="526,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final"
          TopLeft="359,470" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="625,268">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,81"
              Start="0,0"
              End="0,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="622.25,391">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,79"
              Start="0,0"
              End="0,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="298,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Budget table"
          TopLeft="651,481" />
        <NodeLayout
          Size="155,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Conditional Split"
          TopLeft="735,716" />
        <NodeLayout
          Size="271,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Budget)"
          TopLeft="703,952" />
        <NodeLayout
          Size="273,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL"
          TopLeft="667,576" />
        <NodeLayout
          Size="199,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging"
          TopLeft="485,157" />
        <NodeLayout
          Size="224,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Budget)"
          TopLeft="1033,840" />
        <NodeLayout
          Size="220,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget_Staging - Sort ID ASC"
          TopLeft="481,272" />
        <NodeLayout
          Size="316,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Data Conversion - NOT IN USER AT THE MOMENT"
          TopLeft="651,643" />
        <NodeLayout
          Size="192,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record"
          TopLeft="736,834" />
        <NodeLayout
          Size="145,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget"
          TopLeft="985,162" />
        <NodeLayout
          Size="214,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Budget - Sort StagingID ASC"
          TopLeft="949,274" />
        <NodeLayout
          Size="130,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Merge Join"
          TopLeft="740,399" />
        <NodeLayout
          Size="300,42"
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000"
          TopLeft="345,837" />
        <EdgeLayout
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output1]"
          TopLeft="1056.75,204">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70"
              Start="0,0"
              End="0,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output]"
          TopLeft="587.75,199">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,73"
              Start="0,0"
              End="0,65.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Merge Join Output]"
          TopLeft="802.5,441">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Insert(ID_STAGING not Match any in StagingID_FINAL)]"
          TopLeft="775.75,758">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-280.75,79"
              Start="0,0"
              End="-280.75,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.2241014799154" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.2241014799154"
                    Point2="0,27.2241014799154"
                    Point3="-4,27.2241014799154" />
                  <mssgle:LineSegment
                    End="-276.75,27.2241014799154" />
                  <mssgle:CubicBezierSegment
                    Point1="-276.75,27.2241014799154"
                    Point2="-280.75,27.2241014799154"
                    Point3="-280.75,31.2241014799154" />
                  <mssgle:LineSegment
                    End="-280.75,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-264.16833984375,32.2241014799154,247.5866796875,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Derived Column Output]"
          TopLeft="801.75,523">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Delete(StagingID_FINAL not Match any in ID_STAGING)]"
          TopLeft="849.25,758">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="295.75,82"
              Start="0,0"
              End="295.75,74.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.2579281183932" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.2579281183932"
                    Point2="0,28.2579281183932"
                    Point3="4,28.2579281183932" />
                  <mssgle:LineSegment
                    End="291.75,28.2579281183932" />
                  <mssgle:CubicBezierSegment
                    Point1="291.75,28.2579281183932"
                    Point2="295.75,28.2579281183932"
                    Point3="295.75,32.2579281183932" />
                  <mssgle:LineSegment
                    End="295.75,74.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="23.11326171875,33.2579281183932,249.5234765625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Data Conversion Output]"
          TopLeft="810.75,685">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Update-able Records]"
          TopLeft="835.25,876">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,76"
              Start="0,0"
              End="0,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-46.4115234375,28.4453125,92.823046875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Update(ID Match)]"
          TopLeft="812.5,758">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.5,76"
              Start="0,0"
              End="19.5,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34"
                    Point2="0,38"
                    Point3="4,38" />
                  <mssgle:LineSegment
                    End="15.5,38" />
                  <mssgle:CubicBezierSegment
                    Point1="15.5,38"
                    Point2="19.5,38"
                    Point3="19.5,42" />
                  <mssgle:LineSegment
                    End="19.5,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.29068359375,43,80.0813671875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Sort Output1]"
          TopLeft="1056,316">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-230.666666666667,83"
              Start="0,0"
              End="-230.666666666667,75.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.19452887538" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.19452887538"
                    Point2="0,49.19452887538"
                    Point3="-4,49.19452887538" />
                  <mssgle:LineSegment
                    End="-226.666666666667,49.19452887538" />
                  <mssgle:CubicBezierSegment
                    Point1="-226.666666666667,49.19452887538"
                    Point2="-230.666666666667,49.19452887538"
                    Point3="-230.666666666667,53.19452887538" />
                  <mssgle:LineSegment
                    End="-230.666666666667,75.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Sort Output]"
          TopLeft="591,314">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="193.666666666667,85"
              Start="0,0"
              End="193.666666666667,77.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.3799392097265" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46.3799392097265"
                    Point2="0,50.3799392097265"
                    Point3="4,50.3799392097265" />
                  <mssgle:LineSegment
                    End="189.666666666667,50.3799392097265" />
                  <mssgle:CubicBezierSegment
                    Point1="189.666666666667,50.3799392097265"
                    Point2="193.666666666667,50.3799392097265"
                    Point3="193.666666666667,54.3799392097265" />
                  <mssgle:LineSegment
                    End="193.666666666667,77.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final.Paths[Output 0]"
          TopLeft="806.25,618">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Staging - Budget_Staging">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Final - Budget">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Staging To Final - Budget - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Budget) - Batch 100,000">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="273,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL"
          TopLeft="508,460" />
        <NodeLayout
          Size="236,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Contracts)"
          TopLeft="916,737" />
        <NodeLayout
          Size="312,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000"
          TopLeft="135.5,746.5" />
        <NodeLayout
          Size="192,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record"
          TopLeft="540,748" />
        <NodeLayout
          Size="225,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts - Sort StagingID ASC"
          TopLeft="682,174" />
        <NodeLayout
          Size="231,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Contracts_Staging - Sort ID ASC"
          TopLeft="358,178" />
        <NodeLayout
          Size="156,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts"
          TopLeft="718,69" />
        <NodeLayout
          Size="156,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Data Conversion"
          TopLeft="562,537" />
        <NodeLayout
          Size="282,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Contracts)"
          TopLeft="493,889" />
        <NodeLayout
          Size="309,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Contracts table"
          TopLeft="487,379" />
        <NodeLayout
          Size="130,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Merge Join"
          TopLeft="580,307" />
        <NodeLayout
          Size="210,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging"
          TopLeft="371,71" />
        <NodeLayout
          Size="155,42"
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Conditional Split"
          TopLeft="566,606" />
        <EdgeLayout
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Update-able Records]"
          TopLeft="635,790">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,99"
              Start="0,0"
              End="0,91.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,91.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-46.4115234375,39.9453125,92.823046875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Update(ID Match)]"
          TopLeft="639.75,648">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,100"
              Start="0,0"
              End="0,92.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,92.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-40.04068359375,40.4453125,80.0813671875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Sort Output1]"
          TopLeft="794.5,216">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-129.166666666667,91"
              Start="0,0"
              End="-129.166666666667,83.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.936170212766" />
                  <mssgle:CubicBezierSegment
                    Point1="0,49.936170212766"
                    Point2="0,53.936170212766"
                    Point3="-4,53.936170212766" />
                  <mssgle:LineSegment
                    End="-125.166666666667,53.936170212766" />
                  <mssgle:CubicBezierSegment
                    Point1="-125.166666666667,53.936170212766"
                    Point2="-129.166666666667,53.936170212766"
                    Point3="-129.166666666667,57.936170212766" />
                  <mssgle:LineSegment
                    End="-129.166666666667,83.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Sort Output]"
          TopLeft="473.5,220">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="151.166666666667,87"
              Start="0,0"
              End="151.166666666667,79.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.565349544073" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47.565349544073"
                    Point2="0,51.565349544073"
                    Point3="4,51.565349544073" />
                  <mssgle:LineSegment
                    End="147.166666666667,51.565349544073" />
                  <mssgle:CubicBezierSegment
                    Point1="147.166666666667,51.565349544073"
                    Point2="151.166666666667,51.565349544073"
                    Point3="151.166666666667,55.565349544073" />
                  <mssgle:LineSegment
                    End="151.166666666667,79.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Output 0]"
          TopLeft="642.25,502">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output1]"
          TopLeft="795.25,111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63"
              Start="0,0"
              End="0,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output]"
          TopLeft="474.75,113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Merge Join Output]"
          TopLeft="643.25,349">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Insert(ID_STAGING not Match any in StagingID_FINAL)]"
          TopLeft="606.75,648">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-315.25,98.5"
              Start="0,0"
              End="-315.25,91">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.9439746300211" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.9439746300211"
                    Point2="0,33.9439746300211"
                    Point3="-4,33.9439746300211" />
                  <mssgle:LineSegment
                    End="-311.25,33.9439746300211" />
                  <mssgle:CubicBezierSegment
                    Point1="-311.25,33.9439746300211"
                    Point2="-315.25,33.9439746300211"
                    Point3="-315.25,37.9439746300211" />
                  <mssgle:LineSegment
                    End="-315.25,91" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-281.41833984375,38.9439746300211,247.5866796875,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Derived Column Output]"
          TopLeft="643,421">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Delete(StagingID_FINAL not Match any in ID_STAGING)]"
          TopLeft="680.25,648">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="353.75,89"
              Start="0,0"
              End="353.75,81.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.6701902748414" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.6701902748414"
                    Point2="0,30.6701902748414"
                    Point3="4,30.6701902748414" />
                  <mssgle:LineSegment
                    End="349.75,30.6701902748414" />
                  <mssgle:CubicBezierSegment
                    Point1="349.75,30.6701902748414"
                    Point2="353.75,30.6701902748414"
                    Point3="353.75,34.6701902748414" />
                  <mssgle:LineSegment
                    End="353.75,81.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="52.11326171875,35.6701902748414,249.5234765625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final.Paths[Data Conversion Output]"
          TopLeft="641.75,579">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Contracts) - Batch 100,000">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Final - Contracts">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Staging To Final - Contracts - Convert Staging to appropriate data types and then Sync to Final\Staging - Contracts_Staging">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="309,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Current Datetime for Final Spending table"
          TopLeft="260,363" />
        <NodeLayout
          Size="266,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC"
          TopLeft="80.5,60.5" />
        <NodeLayout
          Size="281,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Update changed records (Final - Spending)"
          TopLeft="274.5,976.5" />
        <NodeLayout
          Size="156,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Data Conversion"
          TopLeft="336,621" />
        <NodeLayout
          Size="504,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Derive Code, Dept, Registration, ProjectAgency, CapProj, and Occ for Final Spending table"
          TopLeft="164.5,550.5" />
        <NodeLayout
          Size="311,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000"
          TopLeft="0,834" />
        <NodeLayout
          Size="273,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Replace any column that is &quot;-&quot; with NULL"
          TopLeft="279.5,453.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Merge Join"
          TopLeft="347,226" />
        <NodeLayout
          Size="211,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC"
          TopLeft="584,60" />
        <NodeLayout
          Size="235,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Delete records (Final - Spending)"
          TopLeft="559.5,829.5" />
        <NodeLayout
          Size="192,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Find Update-able record"
          TopLeft="322,876" />
        <NodeLayout
          Size="155,42"
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Conditional Split"
          TopLeft="335,701" />
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output]"
          TopLeft="213.5,102.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="178.166666666667,123.5"
              Start="0,0"
              End="178.166666666667,116">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.1990881458967" />
                  <mssgle:CubicBezierSegment
                    Point1="0,69.1990881458967"
                    Point2="0,73.1990881458967"
                    Point3="4,73.1990881458967" />
                  <mssgle:LineSegment
                    End="174.166666666667,73.1990881458967" />
                  <mssgle:CubicBezierSegment
                    Point1="174.166666666667,73.1990881458967"
                    Point2="178.166666666667,73.1990881458967"
                    Point3="178.166666666667,77.1990881458967" />
                  <mssgle:LineSegment
                    End="178.166666666667,116" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Merge Join Output]"
          TopLeft="413.25,268">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,95"
              Start="0,0"
              End="0,87.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,87.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Insert(ID_STAGING not Match any in StagingID_FINAL)]"
          TopLeft="375.75,743">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-220.25,91"
              Start="0,0"
              End="-220.25,83.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.3594080338266" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.3594080338266"
                    Point2="0,31.3594080338266"
                    Point3="-4,31.3594080338266" />
                  <mssgle:LineSegment
                    End="-216.25,31.3594080338266" />
                  <mssgle:CubicBezierSegment
                    Point1="-216.25,31.3594080338266"
                    Point2="-220.25,31.3594080338266"
                    Point3="-220.25,35.3594080338266" />
                  <mssgle:LineSegment
                    End="-220.25,83.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-233.91833984375,36.3594080338266,247.5866796875,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Derived Column Output]"
          TopLeft="415.25,405">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.5"
              Start="0,0"
              End="0,41">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Delete(StagingID_FINAL not Match any in ID_STAGING)]"
          TopLeft="449.25,743">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="227.75,86.5"
              Start="0,0"
              End="227.75,79">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8086680761099" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.8086680761099"
                    Point2="0,29.8086680761099"
                    Point3="4,29.8086680761099" />
                  <mssgle:LineSegment
                    End="223.75,29.8086680761099" />
                  <mssgle:CubicBezierSegment
                    Point1="223.75,29.8086680761099"
                    Point2="227.75,29.8086680761099"
                    Point3="227.75,33.8086680761099" />
                  <mssgle:LineSegment
                    End="227.75,79" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-10.88673828125,34.8086680761099,249.5234765625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Data Conversion Output]"
          TopLeft="413.25,663">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Update-able Records]"
          TopLeft="416.5,918">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.5"
              Start="0,0"
              End="0,51">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-46.4115234375,19.6953125,92.823046875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Update(ID Match)]"
          TopLeft="415.25,743">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,133"
              Start="0,0"
              End="0,125.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,125.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-40.04068359375,56.9453125,80.0813671875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Output 01]"
          TopLeft="415.25,592.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.5"
              Start="0,0"
              End="0,21">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[Output 0]"
          TopLeft="416.25,495.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final.Paths[OLE DB Source Output1]"
          TopLeft="689.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-257.166666666667,124"
              Start="0,0"
              End="-257.166666666667,116.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.4954407294833" />
                  <mssgle:CubicBezierSegment
                    Point1="0,69.4954407294833"
                    Point2="0,73.4954407294833"
                    Point3="-4,73.4954407294833" />
                  <mssgle:LineSegment
                    End="-253.166666666667,73.4954407294833" />
                  <mssgle:CubicBezierSegment
                    Point1="-253.166666666667,73.4954407294833"
                    Point2="-257.166666666667,73.4954407294833"
                    Point3="-257.166666666667,77.4954407294833" />
                  <mssgle:LineSegment
                    End="-257.166666666667,116.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Insert records (Final - Spending) - Batch 100,000">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Staging - Spending_Staging Sorted ASC">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Staging To Final - Spending - Convert Staging to appropriate data types and then Sync to Final\Final - Spending Sorted ASC">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>